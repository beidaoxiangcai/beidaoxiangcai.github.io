{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/HPA.png","path":"img/HPA.png","modified":0,"renderable":0},{"_id":"source/img/findback-branch.png","path":"img/findback-branch.png","modified":0,"renderable":0},{"_id":"source/img/k8s-pod.svg","path":"img/k8s-pod.svg","modified":0,"renderable":0},{"_id":"source/img/bash-run.png","path":"img/bash-run.png","modified":0,"renderable":0},{"_id":"source/img/linux-cmd.png","path":"img/linux-cmd.png","modified":0,"renderable":0},{"_id":"source/img/priority_queue_member_function.png","path":"img/priority_queue_member_function.png","modified":0,"renderable":0},{"_id":"source/img/priority_queues_feat.png","path":"img/priority_queues_feat.png","modified":0,"renderable":0},{"_id":"source/img/shell-check.png","path":"img/shell-check.png","modified":0,"renderable":0},{"_id":"source/img/page/cpp.png","path":"img/page/cpp.png","modified":0,"renderable":0},{"_id":"source/img/page/code.png","path":"img/page/code.png","modified":0,"renderable":0},{"_id":"source/img/page/git.png","path":"img/page/git.png","modified":0,"renderable":0},{"_id":"source/img/page/github.png","path":"img/page/github.png","modified":0,"renderable":0},{"_id":"source/img/page/k8s.png","path":"img/page/k8s.png","modified":0,"renderable":0},{"_id":"source/img/page/go.png","path":"img/page/go.png","modified":0,"renderable":0},{"_id":"source/img/page/pc.png","path":"img/page/pc.png","modified":0,"renderable":0},{"_id":"source/img/page/shell.png","path":"img/page/shell.png","modified":0,"renderable":0},{"_id":"source/img/page/vim.png","path":"img/page/vim.png","modified":0,"renderable":0},{"_id":"source/img/page/cmake.png","path":"img/page/cmake.png","modified":0,"renderable":0},{"_id":"source/img/page/sql.png","path":"img/page/sql.png","modified":0,"renderable":0},{"_id":"source/img/page/cat.png","path":"img/page/cat.png","modified":0,"renderable":0},{"_id":"source/img/page/docker.png","path":"img/page/docker.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1677925535114},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1677925550795},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":1677925550982},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1677925550982},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1677925551025},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1677925550915},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1677925550904},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1677925550929},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1677925550939},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1677925550927},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1677925551026},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1677925550934},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1677925551026},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1677925550933},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1677925551027},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1677925551027},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1677925551027},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1677925551028},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1677925551028},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1677925551029},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1677925551028},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1677925551029},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1677925551030},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1677925550970},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1677925551030},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1677925551030},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1677925551031},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1677925551031},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1677925551029},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1677925550876},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1677925550881},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1677925550865},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1677925550906},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1677925550919},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1677925550921},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1677925550924},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1677925550926},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1677925550930},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1677925550922},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1677925550935},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1677925550896},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1677925550912},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1677925550935},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1677925550940},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1677925550938},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1677925550990},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1677925551000},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1677925550990},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1677925550834},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1677925550981},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1677925550910},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1677925550932},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1677925550920},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1677925550940},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1677925550917},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1677925550995},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1677925550937},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1677925550998},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1677925550992},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1677925550993},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1677925550998},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1677925550996},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":1677925550992},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1677925550993},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1677925550998},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1677925550999},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1677925550997},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1677925550999},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1677925550979},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1677925550976},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1677925551022},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1677925551025},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1677925551019},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1677925550953},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1677925550986},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1677925550968},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1677925551014},{"_id":"source/_posts/Hello-Hexo.md","hash":"3734122f6fe6ef04a401119063c0c7bdb53b2a23","modified":1677925589718},{"_id":"public/2023/03/04/Hello-Hexo/index.html","hash":"06e3e286ca9e9eaa5c9019ee5d17346affc6454a","modified":1677938246282},{"_id":"public/2023/03/04/hello-world/index.html","hash":"ac416ddac3c4a73fa7795b1fa96fce52e92a02e1","modified":1677939601627},{"_id":"public/archives/index.html","hash":"5db62da39d25c31fb26325e1907ca6307e65d761","modified":1678570730537},{"_id":"public/archives/2023/index.html","hash":"56e717717f8d910ba56a4ef37ffcc060ea663410","modified":1678570730537},{"_id":"public/archives/2023/03/index.html","hash":"5303d192ba94f9963a3e8430f2ea21ad9d1aff8e","modified":1677940478886},{"_id":"public/index.html","hash":"1b8c4db8da1f50da600467ef53ce09160f17ba73","modified":1678570730537},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1677925595330},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1677925595330},{"_id":"public/css/style.css","hash":"4da345d832a2682bcaee3ab3e22c15e3cd0e9cde","modified":1677925595330},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1677925595330},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1677925595330},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1677925595330},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1677925595330},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1677925595330},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1677925595330},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1677925595330},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1677925595330},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1677925595330},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1677926256581},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":1677926256286},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"088788e149051fc0a3c6096ba95e35a8344de04b","modified":1677926256582},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1677926256582},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"30e3f4ccfef8474c05cf0b1eb02e91bd0a152807","modified":1677926256286},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1677926256164},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1677926256582},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1677926256583},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1677926256583},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1677926256583},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1677926256583},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1677926256583},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1677926256583},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1677926256582},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1677926256168},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1677926256171},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1677926256168},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"db000a6a0cec19d32a6e7e94cd4c478500d9c5ac","modified":1677926256177},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1677926256173},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1677926256170},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1677926256179},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1677926256181},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1677926256177},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1677926256181},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1677926256177},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1677926256172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1677926256172},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":1677926256179},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1677926256174},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1677926256175},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1677926256176},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1677926256179},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1677926256169},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1677926256178},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1677926256180},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1677926256180},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1677926256185},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":1677926256284},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1677926256184},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1677926256282},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1677926256184},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1677926256173},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1677926256280},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1677926256176},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1677926256282},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1677926256283},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1677926256283},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1677926256185},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1677926256285},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1677926256187},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1677926256285},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1677926256166},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1677926256186},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1677926256577},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1677926256281},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1677926256577},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1677926256579},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1677926256185},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1677926256570},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1677926256571},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1677926256184},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1677926256286},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1677926256283},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":1677926256186},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1677926256187},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1677926256185},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1677926256283},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1677926256285},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1677926256285},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1677926256582},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1677926256280},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1677926256186},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1677926256184},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1677926256187},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1677926256285},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1677926256185},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1677926256285},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1677926256283},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1677926256285},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1677926256173},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1677926256174},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1677926256175},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1677926256281},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1677926256175},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1677926256282},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1677926256177},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1677926256174},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1677926256180},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":1677926256181},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1677926256182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1677926256181},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1677926256182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1677926256171},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1677926256171},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1677926256182},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1677926256179},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1677926256173},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1677926256169},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"e3713fa78e0fc14a239360b020068d8513573ae4","modified":1677926256174},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1677926256176},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":1677926256169},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1677926256178},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"e49506e9895e255e0e53f34a11d325f83109c1b0","modified":1677926256178},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1677926256179},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1677926256174},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":1677926256181},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1677926256172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"9d13392cea94b66d86422ad17c66e5ae67ce1d32","modified":1677926256173},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1677926256180},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1677926256178},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1677926256181},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1677926256185},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1677926256181},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":1677926256178},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1677926256186},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1677926256281},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":1677926256186},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":1677926256186},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1677926256282},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1677926256575},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1677926256574},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1677926256279},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1677926256575},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1677926256578},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1677926256578},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":1677926256576},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1677926256576},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1677926256572},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1677926256575},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1677926256576},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1677926256574},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1677926256576},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1677926256576},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1677926256579},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1677926256580},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":1677926256580},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1677926256580},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1677926256579},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1677926256578},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1677926256581},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1677926256577},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1677926256574},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1677926256575},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1677926256576},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1677926256577},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1677926256577},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1677926256577},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1677926256577},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1677926256579},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1677926256580},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1677926256581},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1677926256573},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1677926256581},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1677926256579},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1677926256581},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1677926256579},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1677926256580},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1677926256564},{"_id":"public/local-search.xml","hash":"88abcd3d7e05b0fbf2d5a8ffcd3728cfa223f6fa","modified":1678573067151},{"_id":"public/404.html","hash":"c924c9e8bf2001c85173f97dccae5c0473d995d6","modified":1677938246282},{"_id":"public/tags/index.html","hash":"465857e77ee5cfefdd9480ba957dddfa090fc3ac","modified":1678570451002},{"_id":"public/categories/index.html","hash":"02feacc1920899bf05b291842aee3775627ec217","modified":1677938246282},{"_id":"public/links/index.html","hash":"8c1853372fc145d7948a70b5a4812c105b1a3cd6","modified":1677938246282},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1677926545374},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1677926545374},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1677926545374},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1677926545374},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1677926545374},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1677926545374},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1677926545374},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1677926545374},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1677926545374},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1677926545374},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1677926545374},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1677926545374},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1677926545374},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1677926545374},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1677926545374},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1677926545374},{"_id":"public/css/main.css","hash":"4d4a763ef5e9ab2602c46e812d846bba7a277757","modified":1677926545374},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1677926545374},{"_id":"source/CNAME","hash":"4e3ee33ef729ec9d6afd4f2e9d71a08ac1f705c2","modified":1677939427623},{"_id":"source/img/HPA.png","hash":"23a2fdbcab9b700f00490ecf9928d9a54750a777","modified":1615111038000},{"_id":"source/img/findback-branch.png","hash":"47170c4b9eb7186ad8a7c2b5af566f523a1ea75b","modified":1609339842000},{"_id":"source/img/linux-cmd.png","hash":"f21d1a995f40ad9623ce5bb2bdd9fa2e827a3b34","modified":1615728696000},{"_id":"source/img/priority_queues_feat.png","hash":"d934a8bd56a43ceba331e746e2b185d69240e1d0","modified":1615727492000},{"_id":"source/_posts/2020-12-10-git常用总结.md","hash":"34e68f47fb0a1441ce8b6583eb4b8c7465c383b4","modified":1615111250000},{"_id":"source/_posts/C-std-priority-queue优先队列详解.md","hash":"1bda059fe5dba859e8070518cdb43a3eb0dcc47d","modified":1678012973959},{"_id":"source/_posts/Go语言中channel的常见用法.md","hash":"bb32b02be6924270bcbbca8b007d6de39d088ea3","modified":1615728506000},{"_id":"source/img/shell-check.png","hash":"7064252b75654d9e8d97b7d3801ccfd3c8d08239","modified":1615729092000},{"_id":"source/_posts/k8s pod知识图谱.md","hash":"e415b60573e32c86cbf74fb1843ec5bc3b39856a","modified":1615111524000},{"_id":"source/_posts/k8s informer机制与使用.md","hash":"72cc3acebaa181cb1b1c95522730c3d120174ec9","modified":1615728314000},{"_id":"source/_posts/高频VIM命令.md","hash":"80e8e193c945548ef039d17631caee631452299f","modified":1677940383610},{"_id":"source/_posts/shell语法总结.md","hash":"83d309ad5ba4dd71d3d7033abed8c3b9c9837f8d","modified":1677941128555},{"_id":"source/img/page/cpp.png","hash":"310920d2fb5fc8ca6d1902a15de7c14adfe7770d","modified":1615727426000},{"_id":"source/about/index.md","hash":"c1ec268d4670598b0392914681acc455896eb4a4","modified":1678014931745},{"_id":"source/img/page/shell.png","hash":"1e5d0b0fbac9ce00d58bd04bbc580108623e482c","modified":1615729032000},{"_id":"source/_posts/algoexpert算法.md","hash":"5c5beba0a04968adbda1c4b7ba20c5ae668d3dfd","modified":1629001040000},{"_id":"source/img/page/กฃกฃjnbhvgกขกฎกฃฃฌlkmnjbhgvcfxdzsazกฏ.html","hash":"ad09c282736512f7bbcf4d65a9a82c1d258797e9","modified":1623673076000},{"_id":"source/_posts/leetcode/STL.md","hash":"3dbf2547594f49ed390b47bf00bfa0ff359d21bc","modified":1631110338000},{"_id":"source/_posts/leetcode/dfs.md","hash":"99711edefe4fa245ca938b8470cc10435ed8aab6","modified":1629714372000},{"_id":"source/_posts/leetcode/math.md","hash":"073111c5ca6f855b505ec4a521ac86798ee9502d","modified":1629714132000},{"_id":"source/_posts/leetcode/算法词汇.md","hash":"c94d628fdcd42a069a6986595e6dbc91c24982c7","modified":1631110212000},{"_id":"source/.DS_Store","hash":"719e58a9e532dfd08ab77d7e46d0823a88618dda","modified":1678570839374},{"_id":"source/img/bash-run.png","hash":"c994553733111c4c3345b2d05aed238f45339eac","modified":1609339240000},{"_id":"source/img/priority_queue_member_function.png","hash":"52e5983cf8db436dc61df0fe0ca6472f2ae95a02","modified":1615726966000},{"_id":"source/img/k8s-pod.svg","hash":"30f9774d01e045cad6df79afdae21e99d2845c48","modified":1615111150000},{"_id":"source/img/page/k8s.png","hash":"ee62d80ddb514b41c0bf7f55b707bd38812259e6","modified":1615108830000},{"_id":"source/img/page/go.png","hash":"3200b99326aec6c429d113fa8322a9f5f881742e","modified":1615728486000},{"_id":"source/img/page/vim.png","hash":"625df2030b2e107a19ccf1b98137d0f7894bcb14","modified":1615728624000},{"_id":"source/img/page/git.png","hash":"1a13c45078841bce40ec63e04e5489b750243730","modified":1615106694000},{"_id":"source/img/page/github.png","hash":"216732c68baea5b5aa22d8912f1aa72b7121469c","modified":1615106560000},{"_id":"source/img/page/pc.png","hash":"624c23dd07b60ee0465c63562d9affc31511d697","modified":1615106552000},{"_id":"source/img/page/code.png","hash":"380d0ba8aab3082df5b98bfa697f33c741434f57","modified":1615106564000},{"_id":"public/about/index.html","hash":"cc48454b82ec007629b4001dd519f2c312e768b4","modified":1678015972527},{"_id":"public/tags/Git/index.html","hash":"65c372ffd180632ba7fc5bee0eb5cbe1a0ee5757","modified":1677940478886},{"_id":"public/tags/system-design/index.html","hash":"220379f4d95f6128d700b0df385baa9a544301fb","modified":1677939601627},{"_id":"public/tags/C/index.html","hash":"3ff3c46f312d6b69affbde8456e894d2b0bb06e8","modified":1678013584186},{"_id":"public/tags/Linux/index.html","hash":"78957a251707a5127f823da3de03cfdff2d7112c","modified":1677942859769},{"_id":"public/tags/K8S/index.html","hash":"848b8ece5e8dc502c868839162be5ddead729f56","modified":1677939601627},{"_id":"public/archives/page/2/index.html","hash":"5c822ba49ec98d6ae1dfe8678d62370ab708ac8b","modified":1678570451002},{"_id":"public/archives/2017/index.html","hash":"c2ae0322e06628dd5ba1006bc2102c58901c7630","modified":1677939601627},{"_id":"public/archives/2017/02/index.html","hash":"133af593e251613a053d8a088054223193be796e","modified":1677939601627},{"_id":"public/archives/2019/index.html","hash":"8dcbe5dad8689e8434cdd2c10066e08269a5bce5","modified":1677939601627},{"_id":"public/archives/2019/02/index.html","hash":"1bbfab4617349960d13f15c574e3bec289d5dbbc","modified":1677939601627},{"_id":"public/archives/2021/index.html","hash":"e451843fa00ef9d91367e2b6f6585adb5fb77fd2","modified":1678570451002},{"_id":"public/archives/2021/03/index.html","hash":"48673cfa210cfbc1a533ec57847656254f19e9e7","modified":1678570451002},{"_id":"public/archives/2021/09/index.html","hash":"2836d2061e9a85a832b7224182cb86d3d9de1386","modified":1678570451002},{"_id":"public/archives/2021/08/index.html","hash":"3a052e4cc5661ca9d9c46a0d5554cc50412235b1","modified":1678570451002},{"_id":"public/img/page/กฃกฃjnbhvgกขกฎกฃฃฌlkmnjbhgvcfxdzsazกฏ.html","hash":"e1bed9c5431cc1da75c9470a2c1505104c798ada","modified":1677939601627},{"_id":"public/2021/09/08/leetcode/STL/index.html","hash":"441b01ec9c337ddb62aeca3c383f998f4873cc34","modified":1677939601627},{"_id":"public/2021/09/08/leetcode/算法词汇/index.html","hash":"f985e9c8b36587a1b26a928e2817854c16ecccef","modified":1677939601627},{"_id":"public/2021/08/23/leetcode/dfs/index.html","hash":"fa9d625a7f8d75dadb6507f3943573a85dbc83fb","modified":1677939601627},{"_id":"public/2021/03/14/高频VIM命令/index.html","hash":"0cd67cd5b15c693c71f0613a02afa62063b0af05","modified":1677939601627},{"_id":"public/2021/03/14/C-std-priority-queue优先队列详解/index.html","hash":"5f32340e01041e2e4b32a6c971bde596996cc332","modified":1678013012262},{"_id":"public/2021/03/14/leetcode/math/index.html","hash":"c142b55d55afbb00b2a148b660d503c5774f526f","modified":1677939601627},{"_id":"public/2021/03/14/shell语法总结/index.html","hash":"0a9c470b3028b3782ebb1398157a13eaf670b460","modified":1677940478886},{"_id":"public/2021/03/14/algoexpert算法/index.html","hash":"ded5111ef03488712745af807534d06fedc642d9","modified":1677939601627},{"_id":"public/2019/02/28/Go语言中channel的常见用法/index.html","hash":"31b984c236da6a92b604d78054876e81fed49665","modified":1677939601627},{"_id":"public/2019/02/28/k8s pod知识图谱/index.html","hash":"e7347457a828b95676a85f0f715bf955f5f710f3","modified":1677939601627},{"_id":"public/2017/02/28/2020-12-10-git常用总结/index.html","hash":"56447c0c9787bf1d226645a118fe0db1678fd733","modified":1677939601627},{"_id":"public/2019/02/28/k8s informer机制与使用/index.html","hash":"838213d37c222798a887554e5a79c65667f2dd42","modified":1677939601627},{"_id":"public/page/2/index.html","hash":"abdf61eb31d240ed32f2a338f339a8e86aa26213","modified":1678570451002},{"_id":"public/CNAME","hash":"4e3ee33ef729ec9d6afd4f2e9d71a08ac1f705c2","modified":1677939601627},{"_id":"public/img/findback-branch.png","hash":"47170c4b9eb7186ad8a7c2b5af566f523a1ea75b","modified":1677939601627},{"_id":"public/img/HPA.png","hash":"23a2fdbcab9b700f00490ecf9928d9a54750a777","modified":1677939601627},{"_id":"public/img/linux-cmd.png","hash":"f21d1a995f40ad9623ce5bb2bdd9fa2e827a3b34","modified":1677939601627},{"_id":"public/img/shell-check.png","hash":"7064252b75654d9e8d97b7d3801ccfd3c8d08239","modified":1677939601627},{"_id":"public/img/priority_queues_feat.png","hash":"d934a8bd56a43ceba331e746e2b185d69240e1d0","modified":1677939601627},{"_id":"public/img/page/cpp.png","hash":"310920d2fb5fc8ca6d1902a15de7c14adfe7770d","modified":1677939601627},{"_id":"public/img/page/shell.png","hash":"1e5d0b0fbac9ce00d58bd04bbc580108623e482c","modified":1677939601627},{"_id":"public/img/bash-run.png","hash":"c994553733111c4c3345b2d05aed238f45339eac","modified":1677939601627},{"_id":"public/img/priority_queue_member_function.png","hash":"52e5983cf8db436dc61df0fe0ca6472f2ae95a02","modified":1677939601627},{"_id":"public/img/k8s-pod.svg","hash":"30f9774d01e045cad6df79afdae21e99d2845c48","modified":1677939601627},{"_id":"public/img/page/go.png","hash":"3200b99326aec6c429d113fa8322a9f5f881742e","modified":1677939601627},{"_id":"public/img/page/k8s.png","hash":"ee62d80ddb514b41c0bf7f55b707bd38812259e6","modified":1677939601627},{"_id":"public/img/page/vim.png","hash":"625df2030b2e107a19ccf1b98137d0f7894bcb14","modified":1677939601627},{"_id":"public/img/page/git.png","hash":"1a13c45078841bce40ec63e04e5489b750243730","modified":1677939601627},{"_id":"public/img/page/github.png","hash":"216732c68baea5b5aa22d8912f1aa72b7121469c","modified":1677939601627},{"_id":"public/img/page/pc.png","hash":"624c23dd07b60ee0465c63562d9affc31511d697","modified":1677939601627},{"_id":"public/img/page/code.png","hash":"380d0ba8aab3082df5b98bfa697f33c741434f57","modified":1677939601627},{"_id":"source/_posts/Git常用总结.md","hash":"8f77cf2a42eb76ab7e6a90119b7b134074e47c51","modified":1677940009718},{"_id":"source/_posts/cmake_note.md","hash":"8f584e8f7c22fc8276fd80fab844af8f6f24f97f","modified":1677940931252},{"_id":"source/_posts/shell_note.md","hash":"8db8b27f32a24892a3b5b817d98fb5854e779064","modified":1677942437549},{"_id":"source/_posts/markdown学习笔记.md","hash":"5de35a1c3f2e8642398028e4f1666e03d2445117","modified":1677942422787},{"_id":"source/_posts/sql学习.md","hash":"fec0f4c075e3ce0a76e6e15d8f9d01ad72690979","modified":1677940894609},{"_id":"source/img/page/cmake.png","hash":"e2df2448647c97982c581edbe602e8f82d0ff17c","modified":1677940226961},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1677939933260},{"_id":"source/img/.DS_Store","hash":"f0ed6a032963a37eea1ba712fa754e916194a190","modified":1678570850311},{"_id":"public/archives/2022/02/index.html","hash":"889e62f278bdf58962fe78258d8bbb8a8046ba6b","modified":1678570451002},{"_id":"public/archives/2022/03/index.html","hash":"70df4969fd48f1857b894505a3cfa91fa9148e61","modified":1678570451002},{"_id":"public/archives/2022/08/index.html","hash":"6270df1efbbdc4ba3aa6c79738c1e1f388285906","modified":1678570451002},{"_id":"public/archives/2022/index.html","hash":"e76c4ec5f99daf2c25939ffa63a0b9417b34f7a3","modified":1678570451002},{"_id":"public/archives/2021/11/index.html","hash":"e4eff961382614837dffdbc05668f9277e89f36f","modified":1678570451002},{"_id":"public/tags/markdown/index.html","hash":"061357a7c78f654787afca752695fa2a79059154","modified":1677940478886},{"_id":"public/tags/cmake/index.html","hash":"62611e27b025e0e5313e37cef7f585249d9d6a4e","modified":1677940478886},{"_id":"public/2023/03/03/shell_note/index.html","hash":"ad1858e07faa21425673b1374ff154dbbbf820fc","modified":1677940478886},{"_id":"public/2022/08/10/markdown学习笔记/index.html","hash":"ccb0619ee9957cb17cb63d460e1d0e2dd25e7940","modified":1677942226848},{"_id":"public/2022/03/08/cmake_note/index.html","hash":"872004b0c2cd6f61854df9020f4a37fb6a408d64","modified":1677940938707},{"_id":"public/2022/02/28/Git常用总结/index.html","hash":"fbfe432767e8c00f9f8850e05e5af86ce1c3f74b","modified":1677940478886},{"_id":"public/2021/11/15/高频VIM命令/index.html","hash":"e2889c233465e30053a5641669de7d04e0377882","modified":1677940478886},{"_id":"public/2021/09/14/sql学习/index.html","hash":"2a59cfe2054953525dd41f170fa0bfb3de995497","modified":1677942859769},{"_id":"public/img/page/cmake.png","hash":"e2df2448647c97982c581edbe602e8f82d0ff17c","modified":1677940478886},{"_id":"source/img/page/sql.png","hash":"6ee258695739cd74c8a65b36242eee101b8905ea","modified":1677940878258},{"_id":"public/archives/2022/05/index.html","hash":"a7ef8f36322969d2dc9e0fd5f9829466f69e70e0","modified":1678570451002},{"_id":"public/archives/2022/07/index.html","hash":"3d624427c4b752ad4861cbbb38a2162c99ec99a1","modified":1678570451002},{"_id":"public/tags/Cmake/index.html","hash":"421697803a34e989a7d2c928c9782eb2d7e8d036","modified":1678573067151},{"_id":"public/tags/Linux-Shell/index.html","hash":"94b8d0f0c85a5a9a9a20bc98599808a84653fd2a","modified":1677942226848},{"_id":"public/tags/SQL/index.html","hash":"a3a53690ed303f3658dd4fac1a0a31b4bc8343ce","modified":1677940938707},{"_id":"public/tags/Markdown/index.html","hash":"4d974e31944c8a09afcc735ad85212a40849cff2","modified":1678573067151},{"_id":"public/2022/07/11/shell语法总结/index.html","hash":"d91b7f7a01099ca4eca43e180ca3b4cc9d628877","modified":1678013012262},{"_id":"public/2022/05/14/shell_note/index.html","hash":"9bef8918ff37516ae5b0015fa00811754f357dfa","modified":1677942859769},{"_id":"public/img/page/sql.png","hash":"6ee258695739cd74c8a65b36242eee101b8905ea","modified":1677940938707},{"_id":"source/_posts/C-std-priority-queue优先队列详解 copy.md","hash":"0ceef2b110c06e7d64b021ecfa0f55eebc01764c","modified":1678570423601},{"_id":"public/2022/08/09/C-std-priority-queue优先队列详解/index.html","hash":"44db3b5fa1065625d8aaf2589af67babb182aa56","modified":1678007601613},{"_id":"public/2022/08/04/C-std-priority-queue优先队列详解 copy/index.html","hash":"dbd4c3a21b938d3fca5dd5c66e56f228351fc58c","modified":1677942226848},{"_id":"public/2021/08/10/markdown学习笔记/index.html","hash":"08a7501811e246de535a38f59e37fc88d49607ce","modified":1678013012262},{"_id":"source/img/page/cat.png","hash":"87d32c75cf5bba9112d196ff57627c4eb29c674e","modified":1677942980580},{"_id":"node_modules/hexo-theme-fluid/source/.DS_Store","hash":"075c5b9d8806850642b5dc3e9356927a9857b40f","modified":1678088428577},{"_id":"public/img/page/cat.png","hash":"87d32c75cf5bba9112d196ff57627c4eb29c674e","modified":1677943445908},{"_id":"source/_posts/C++线程池的实现md","hash":"6237d3222aaf625303dd3541e49ac76161ab3543","modified":1678007598897},{"_id":"source/_posts/C++ 多态特性及简单示例.md","hash":"ec80b50a8c22ff184d2dcbebda6601c1fe1d4a67","modified":1678013989890},{"_id":"public/2022/08/09/C++ 多态特性及简单示例/index.html","hash":"06e09595d7d8d4abb9583245987f9a7add3be25f","modified":1678014992602},{"_id":"source/_posts/C++线程池的实现.md","hash":"3e4ad65a5fcc6f5e68acf808a58db4ef2392877d","modified":1678028626258},{"_id":"public/archives/2022/10/index.html","hash":"cdde6edd802980c413d1f97994cd3b2576cc14a2","modified":1678570451002},{"_id":"public/2022/10/23/C++线程池的实现/index.html","hash":"91bd57fc88960492d473c7cfe6290313466840f0","modified":1678570730537},{"_id":"node_modules/hexo-theme-fluid/layout/.DS_Store","hash":"f586577f0602e2a1e6af9ad7c789a5eefbf5ab62","modified":1678088428561},{"_id":"node_modules/hexo-theme-fluid/.DS_Store","hash":"b5e92d7f00a3c807d0cac437ff4e71ca375ce234","modified":1678088435719},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/.DS_Store","hash":"e870502383af952bf5af05210a9b4ca29579ddbe","modified":1678088423286},{"_id":"node_modules/hexo-theme-fluid/source/css/.DS_Store","hash":"194fe26c2afb475daa7b4e8dc462f77f1d280477","modified":1678088428563},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/.DS_Store","hash":"5b7cbb52c518afcede6c1f7879e0f6bfa75b5c99","modified":1678088423281},{"_id":"source/img/page/docker.png","hash":"2e47a817d3b3a9ba991c6551157507c83b29c563","modified":1678570967785},{"_id":"public/archives/2023/01/index.html","hash":"a3ef4db3539979c7924ab9f2f2cc12c21d3a873f","modified":1678570730537},{"_id":"public/tags/Docker/index.html","hash":"af28edac96188ebd9e68ecf7c62e19c28dfc1bea","modified":1678570730537},{"_id":"public/2023/01/14/C-std-priority-queue优先队列详解 copy/index.html","hash":"fbc43f89e89834f8ea91025dc82efa1c5feba9a7","modified":1678570451002},{"_id":"public/img/page/docker.png","hash":"2e47a817d3b3a9ba991c6551157507c83b29c563","modified":1678570982010},{"_id":"source/_posts/'Docker 命令一条龙.md","hash":"3a01083b13b1e599d4e671ee158ff60951bab5be","modified":1678573065303},{"_id":"public/2023/01/14/'Docker 命令一条龙/index.html","hash":"c6a106cbfc5063782477c19a9b6ab4440f40a6fb","modified":1678573067151}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2023-03-02T18:13:25.000Z","layout":"about","_content":"\n#### 目前\n\n大家好，我是佳柠，目前是是一名应届程序媛，涉足 C++/ Python / SQL / Linux / 前端等技术栈。我一直热爱探索并分享最新的技术和思考。本博客主要记录我的学习和思考过程，分享前后端开发相关的技术和经验，以及一些个人感悟和生活记录。\n\n偶尔会进行写一些日常学习中的总结，另外日常会刷一些leetcode，保持算法手感， 欢迎关注[chen-tzn](https://leetcode.cn/u/chen-tzn/)。\n\n\n除了技术相关的内容，我也会在博客中分享一些个人兴趣爱好，例如旅游、电影、音乐等，希望能够与大家交流分享，增进彼此的了解。\n\n感谢你来到我的博客，希望你能够在这里找到自己需要的内容，也欢迎留言和交流，让我们一起学习和进步。","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-03-02 19:13:25\nlayout: about\n---\n\n#### 目前\n\n大家好，我是佳柠，目前是是一名应届程序媛，涉足 C++/ Python / SQL / Linux / 前端等技术栈。我一直热爱探索并分享最新的技术和思考。本博客主要记录我的学习和思考过程，分享前后端开发相关的技术和经验，以及一些个人感悟和生活记录。\n\n偶尔会进行写一些日常学习中的总结，另外日常会刷一些leetcode，保持算法手感， 欢迎关注[chen-tzn](https://leetcode.cn/u/chen-tzn/)。\n\n\n除了技术相关的内容，我也会在博客中分享一些个人兴趣爱好，例如旅游、电影、音乐等，希望能够与大家交流分享，增进彼此的了解。\n\n感谢你来到我的博客，希望你能够在这里找到自己需要的内容，也欢迎留言和交流，让我们一起学习和进步。","updated":"2023-03-05T11:15:31.745Z","path":"about/index.html","_id":"cleu1wyuk0000s2y25t4abn6m","comments":1,"content":"<h4 id=\"目前\"><a href=\"#目前\" class=\"headerlink\" title=\"目前\"></a>目前</h4><p>大家好，我是佳柠，目前是是一名应届程序媛，涉足 C++&#x2F; Python &#x2F; SQL &#x2F; Linux &#x2F; 前端等技术栈。我一直热爱探索并分享最新的技术和思考。本博客主要记录我的学习和思考过程，分享前后端开发相关的技术和经验，以及一些个人感悟和生活记录。</p>\n<p>偶尔会进行写一些日常学习中的总结，另外日常会刷一些leetcode，保持算法手感， 欢迎关注<a href=\"https://leetcode.cn/u/chen-tzn/\">chen-tzn</a>。</p>\n<p>除了技术相关的内容，我也会在博客中分享一些个人兴趣爱好，例如旅游、电影、音乐等，希望能够与大家交流分享，增进彼此的了解。</p>\n<p>感谢你来到我的博客，希望你能够在这里找到自己需要的内容，也欢迎留言和交流，让我们一起学习和进步。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"目前\"><a href=\"#目前\" class=\"headerlink\" title=\"目前\"></a>目前</h4><p>大家好，我是佳柠，目前是是一名应届程序媛，涉足 C++&#x2F; Python &#x2F; SQL &#x2F; Linux &#x2F; 前端等技术栈。我一直热爱探索并分享最新的技术和思考。本博客主要记录我的学习和思考过程，分享前后端开发相关的技术和经验，以及一些个人感悟和生活记录。</p>\n<p>偶尔会进行写一些日常学习中的总结，另外日常会刷一些leetcode，保持算法手感， 欢迎关注<a href=\"https://leetcode.cn/u/chen-tzn/\">chen-tzn</a>。</p>\n<p>除了技术相关的内容，我也会在博客中分享一些个人兴趣爱好，例如旅游、电影、音乐等，希望能够与大家交流分享，增进彼此的了解。</p>\n<p>感谢你来到我的博客，希望你能够在这里找到自己需要的内容，也欢迎留言和交流，让我们一起学习和进步。</p>\n"},{"_content":"<!DOCTYPE html>\n<!-- saved from url=(0203)chrome://bookmarks/?q=bbbbbbbbbbbbbbbbbb%20v%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%2C%2C%2C%2Cxzz -->\n<html dir=\"ltr\" lang=\"zh\" class=\"\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n  \n  <!--<base href=\"chrome://bookmarks\">--><base href=\".\">\n  <title>书签</title>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/md_colors.css\">\n  <style>\n    html {\n      /* Remove 300ms delay for 'click' event, when using touch interface. */\n      touch-action: manipulation;\n    }\n\n    html,\n    body {\n      background: var(--md-background-color);\n      height: 100%;\n      margin: 0;\n      overflow: hidden;\n    }\n\n    html.loading::before {\n      background-color: var(--md-toolbar-color);\n      border-bottom: var(--md-toolbar-border);\n      box-sizing: border-box;\n      content: '';\n      display: block;\n      height: var(--md-toolbar-height);\n    }\n  </style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">[hidden] {\n  display: none !important;\n}\n\n</style>\n</custom-style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --layout_-_display:  flex;;\n\n      --layout-inline_-_display:  inline-flex;;\n\n      --layout-horizontal_-_display:  var(--layout_-_display); --layout-horizontal_-_flex-direction:  row;;\n\n      --layout-horizontal-reverse_-_display:  var(--layout_-_display); --layout-horizontal-reverse_-_flex-direction:  row-reverse;;\n\n      --layout-vertical_-_display:  var(--layout_-_display); --layout-vertical_-_flex-direction:  column;;\n\n      --layout-vertical-reverse_-_display:  var(--layout_-_display); --layout-vertical-reverse_-_flex-direction:  column-reverse;;\n\n      --layout-wrap_-_flex-wrap:  wrap;;\n\n      --layout-wrap-reverse_-_flex-wrap:  wrap-reverse;;\n\n      --layout-flex-auto_-_flex:  1 1 auto;;\n\n      --layout-flex-none_-_flex:  none;;\n\n      --layout-flex_-_flex:  1; --layout-flex_-_flex-basis:  0.000000001px;;\n\n      --layout-flex-2_-_flex:  2;;\n\n      --layout-flex-3_-_flex:  3;;\n\n      --layout-flex-4_-_flex:  4;;\n\n      --layout-flex-5_-_flex:  5;;\n\n      --layout-flex-6_-_flex:  6;;\n\n      --layout-flex-7_-_flex:  7;;\n\n      --layout-flex-8_-_flex:  8;;\n\n      --layout-flex-9_-_flex:  9;;\n\n      --layout-flex-10_-_flex:  10;;\n\n      --layout-flex-11_-_flex:  11;;\n\n      --layout-flex-12_-_flex:  12;;\n\n      \n\n      --layout-start_-_align-items:  flex-start;;\n\n      --layout-center_-_align-items:  center;;\n\n      --layout-end_-_align-items:  flex-end;;\n\n      --layout-baseline_-_align-items:  baseline;;\n\n      \n\n      --layout-start-justified_-_justify-content:  flex-start;;\n\n      --layout-center-justified_-_justify-content:  center;;\n\n      --layout-end-justified_-_justify-content:  flex-end;;\n\n      --layout-around-justified_-_justify-content:  space-around;;\n\n      --layout-justified_-_justify-content:  space-between;;\n\n      --layout-center-center_-_align-items:  var(--layout-center_-_align-items); --layout-center-center_-_justify-content:  var(--layout-center-justified_-_justify-content);;\n\n      \n\n      --layout-self-start_-_align-self:  flex-start;;\n\n      --layout-self-center_-_align-self:  center;;\n\n      --layout-self-end_-_align-self:  flex-end;;\n\n      --layout-self-stretch_-_align-self:  stretch;;\n\n      --layout-self-baseline_-_align-self:  baseline;;\n\n      \n\n      --layout-start-aligned_-_align-content:  flex-start;;\n\n      --layout-end-aligned_-_align-content:  flex-end;;\n\n      --layout-center-aligned_-_align-content:  center;;\n\n      --layout-between-aligned_-_align-content:  space-between;;\n\n      --layout-around-aligned_-_align-content:  space-around;;\n\n      \n\n      --layout-block_-_display:  block;;\n\n      --layout-invisible_-_visibility:  hidden !important;;\n\n      --layout-relative_-_position:  relative;;\n\n      --layout-fit_-_position:  absolute; --layout-fit_-_top:  0; --layout-fit_-_right:  0; --layout-fit_-_bottom:  0; --layout-fit_-_left:  0;;\n\n      --layout-scroll_-_-webkit-overflow-scrolling:  touch; --layout-scroll_-_overflow:  auto;;\n\n      --layout-fullbleed_-_margin:  0; --layout-fullbleed_-_height:  100vh;;\n\n      \n\n      --layout-fixed-top_-_position:  fixed; --layout-fixed-top_-_top:  0; --layout-fixed-top_-_left:  0; --layout-fixed-top_-_right:  0;;\n\n      --layout-fixed-right_-_position:  fixed; --layout-fixed-right_-_top:  0; --layout-fixed-right_-_right:  0; --layout-fixed-right_-_bottom:  0;;\n\n      --layout-fixed-bottom_-_position:  fixed; --layout-fixed-bottom_-_right:  0; --layout-fixed-bottom_-_bottom:  0; --layout-fixed-bottom_-_left:  0;;\n\n      --layout-fixed-left_-_position:  fixed; --layout-fixed-left_-_top:  0; --layout-fixed-left_-_bottom:  0; --layout-fixed-left_-_left:  0;;\n}\n\n</style>\n</custom-style><style>[hidden] { display: none !important; }</style><custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-red-100-rgb: 244, 199, 195;  \n      --google-red-100: rgb(var(--google-red-100-rgb));\n      --google-red-300-rgb: 230, 124, 115;  \n      --google-red-300: rgb(var(--google-red-300-rgb));\n      --google-red-500-rgb: 219, 68, 55;  \n      --google-red-500: rgb(var(--google-red-500-rgb));\n      --google-red-700-rgb: 197, 57, 41;  \n      --google-red-700: rgb(var(--google-red-700-rgb));\n\n      --google-blue-100-rgb: 198, 218, 252;  \n      --google-blue-100: rgb(var(--google-blue-100-rgb));\n      --google-blue-300-rgb: 123, 170, 247;  \n      --google-blue-300: rgb(var(--google-blue-300-rgb));\n      --google-blue-500-rgb: 66, 133, 244;  \n      --google-blue-500: rgb(var(--google-blue-500-rgb));\n      --google-blue-700-rgb: 51, 103, 214;  \n      --google-blue-700: rgb(var(--google-blue-700-rgb));\n\n      --google-green-100-rgb: 183, 225, 205;  \n      --google-green-100: rgb(var(--google-green-100-rgb));\n      --google-green-300-rgb: 87, 187, 138;  \n      --google-green-300: rgb(var(--google-green-300-rgb));\n      --google-green-500-rgb: 15, 157, 88;  \n      --google-green-500: rgb(var(--google-green-500-rgb));\n      --google-green-700-rgb: 11, 128, 67;  \n      --google-green-700: rgb(var(--google-green-700-rgb));\n\n      --google-yellow-100-rgb: 252, 232, 178;  \n      --google-yellow-100: rgb(var(--google-yellow-100-rgb));\n      --google-yellow-300-rgb: 247, 203, 77;  \n      --google-yellow-300: rgb(var(--google-yellow-300-rgb));\n      --google-yellow-500-rgb: 244, 180, 0;  \n      --google-yellow-500: rgb(var(--google-yellow-500-rgb));\n      --google-yellow-700-rgb: 240, 147, 0;  \n      --google-yellow-700: rgb(var(--google-yellow-700-rgb));\n\n      --google-grey-100-rgb: 245, 245, 245;  \n      --google-grey-100: rgb(var(--google-grey-100-rgb));\n      --google-grey-300-rgb: 224, 224, 224;  \n      --google-grey-300: rgb(var(--google-grey-300-rgb));\n      --google-grey-500-rgb: 158, 158, 158;  \n      --google-grey-500: rgb(var(--google-grey-500-rgb));\n      --google-grey-700-rgb: 97, 97, 97;  \n      --google-grey-700: rgb(var(--google-grey-700-rgb));\n\n      \n\n      --paper-red-50: #ffebee;\n      --paper-red-100: #ffcdd2;\n      --paper-red-200: #ef9a9a;\n      --paper-red-300: #e57373;\n      --paper-red-400: #ef5350;\n      --paper-red-500: #f44336;\n      --paper-red-600: #e53935;\n      --paper-red-700: #d32f2f;\n      --paper-red-800: #c62828;\n      --paper-red-900: #b71c1c;\n      --paper-red-a100: #ff8a80;\n      --paper-red-a200: #ff5252;\n      --paper-red-a400: #ff1744;\n      --paper-red-a700: #d50000;\n\n      --paper-light-blue-50: #e1f5fe;\n      --paper-light-blue-100: #b3e5fc;\n      --paper-light-blue-200: #81d4fa;\n      --paper-light-blue-300: #4fc3f7;\n      --paper-light-blue-400: #29b6f6;\n      --paper-light-blue-500: #03a9f4;\n      --paper-light-blue-600: #039be5;\n      --paper-light-blue-700: #0288d1;\n      --paper-light-blue-800: #0277bd;\n      --paper-light-blue-900: #01579b;\n      --paper-light-blue-a100: #80d8ff;\n      --paper-light-blue-a200: #40c4ff;\n      --paper-light-blue-a400: #00b0ff;\n      --paper-light-blue-a700: #0091ea;\n\n      --paper-yellow-50: #fffde7;\n      --paper-yellow-100: #fff9c4;\n      --paper-yellow-200: #fff59d;\n      --paper-yellow-300: #fff176;\n      --paper-yellow-400: #ffee58;\n      --paper-yellow-500: #ffeb3b;\n      --paper-yellow-600: #fdd835;\n      --paper-yellow-700: #fbc02d;\n      --paper-yellow-800: #f9a825;\n      --paper-yellow-900: #f57f17;\n      --paper-yellow-a100: #ffff8d;\n      --paper-yellow-a200: #ffff00;\n      --paper-yellow-a400: #ffea00;\n      --paper-yellow-a700: #ffd600;\n\n      --paper-orange-50: #fff3e0;\n      --paper-orange-100: #ffe0b2;\n      --paper-orange-200: #ffcc80;\n      --paper-orange-300: #ffb74d;\n      --paper-orange-400: #ffa726;\n      --paper-orange-500: #ff9800;\n      --paper-orange-600: #fb8c00;\n      --paper-orange-700: #f57c00;\n      --paper-orange-800: #ef6c00;\n      --paper-orange-900: #e65100;\n      --paper-orange-a100: #ffd180;\n      --paper-orange-a200: #ffab40;\n      --paper-orange-a400: #ff9100;\n      --paper-orange-a700: #ff6500;\n\n      --paper-grey-50: #fafafa;\n      --paper-grey-100: #f5f5f5;\n      --paper-grey-200: #eeeeee;\n      --paper-grey-300: #e0e0e0;\n      --paper-grey-400: #bdbdbd;\n      --paper-grey-500: #9e9e9e;\n      --paper-grey-600: #757575;\n      --paper-grey-700: #616161;\n      --paper-grey-800: #424242;\n      --paper-grey-900: #212121;\n\n      --paper-blue-grey-50: #eceff1;\n      --paper-blue-grey-100: #cfd8dc;\n      --paper-blue-grey-200: #b0bec5;\n      --paper-blue-grey-300: #90a4ae;\n      --paper-blue-grey-400: #78909c;\n      --paper-blue-grey-500: #607d8b;\n      --paper-blue-grey-600: #546e7a;\n      --paper-blue-grey-700: #455a64;\n      --paper-blue-grey-800: #37474f;\n      --paper-blue-grey-900: #263238;\n\n      \n      --dark-divider-opacity: 0.12;\n      --dark-disabled-opacity: 0.38; \n      --dark-secondary-opacity: 0.54;\n      --dark-primary-opacity: 0.87;\n\n      \n      --light-divider-opacity: 0.12;\n      --light-disabled-opacity: 0.3; \n      --light-secondary-opacity: 0.7;\n      --light-primary-opacity: 1.0;\n}\n\n</style>\n</custom-style>\n<iron-iconset-svg name=\"cr20\" size=\"20\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      Keep these in sorted order by id=\"\". See also http://goo.gl/Y1OdAq\n      -->\n      <g id=\"domain\">\n        <path d=\"M2,3 L2,17 L11.8267655,17 L13.7904799,17 L18,17 L18,7 L12,7 L12,3 L2,3 Z M8,13 L10,13 L10,15 L8,15 L8,13 Z M4,13 L6,13 L6,15 L4,15 L4,13 Z M8,9 L10,9 L10,11 L8,11 L8,9 Z M4,9 L6,9 L6,11 L4,11 L4,9 Z M12,9 L16,9 L16,15 L12,15 L12,9 Z M12,11 L14,11 L14,13 L12,13 L12,11 Z M8,5 L10,5 L10,7 L8,7 L8,5 Z M4,5 L6,5 L6,7 L4,7 L4,5 Z\">\n        </path>\n      </g>\n      <g id=\"kite\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.6327 8.00094L10.3199 2L16 8.00094L10.1848 16.8673C10.0995 16.9873 10.0071 17.1074 9.90047 17.2199C9.42417 17.7225 8.79147 18 8.11611 18C7.44076 18 6.80806 17.7225 6.33175 17.2199C5.85545 16.7173 5.59242 16.0497 5.59242 15.3371C5.59242 14.977 5.46445 14.647 5.22275 14.3919C4.98104 14.1369 4.66825 14.0019 4.32701 14.0019H4V12.6667H4.32701C5.00237 12.6667 5.63507 12.9442 6.11137 13.4468C6.58768 13.9494 6.85071 14.617 6.85071 15.3296C6.85071 15.6896 6.97867 16.0197 7.22038 16.2747C7.46209 16.5298 7.77488 16.6648 8.11611 16.6648C8.45735 16.6648 8.77014 16.5223 9.01185 16.2747C9.02396 16.2601 9.03607 16.246 9.04808 16.2319C9.08541 16.1883 9.12176 16.1458 9.15403 16.0947L9.55213 15.4946L4.6327 8.00094ZM10.3199 13.9371L6.53802 8.17116L10.3199 4.1814L14.0963 8.17103L10.3199 13.9371Z\">\n        </path>\n      </g>\n      <g id=\"menu\">\n        <path d=\"M2 4h16v2H2zM2 9h16v2H2zM2 14h16v2H2z\"></path>\n      </g>\n      \n  </defs></svg>\n</iron-iconset-svg>\n<iron-iconset-svg name=\"cr\" size=\"24\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      These icons are copied from Polymer's iron-icons and kept in sorted order.\n      See http://goo.gl/Y1OdAq for instructions on adding additional icons.\n      -->\n      <g id=\"account-child-invert\" viewBox=\"0 0 48 48\">\n        <path d=\"M24 4c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6 2.69-6 6-6z\"></path>\n        <path fill=\"none\" d=\"M0 0h48v48H0V0z\"></path>\n        <circle fill=\"none\" cx=\"24\" cy=\"26\" r=\"4\"></circle>\n        <path d=\"M24 18c-6.16 0-13 3.12-13 7.23v11.54c0 2.32 2.19 4.33 5.2 5.63 2.32 1 5.12 1.59 7.8 1.59.66 0 1.33-.06 2-.14v-5.2c-.67.08-1.34.14-2 .14-2.63 0-5.39-.57-7.68-1.55.67-2.12 4.34-3.65 7.68-3.65.86 0 1.75.11 2.6.29 2.79.62 5.2 2.15 5.2 4.04v4.47c3.01-1.31 5.2-3.31 5.2-5.63V25.23C37 21.12 30.16 18 24 18zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z\">\n        </path>\n      </g>\n      <g id=\"add\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n      </g>\n      <g id=\"arrow-back\">\n        <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"></path>\n      </g>\n      <g id=\"arrow-drop-up\">\n        <path d=\"M7 14l5-5 5 5z\">\n      </path></g>\n      <g id=\"arrow-drop-down\">\n        <path d=\"M7 10l5 5 5-5z\"></path>\n      </g>\n      <g id=\"arrow-forward\">\n        <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"></path>\n      </g>\n      <g id=\"arrow-right\">\n        <path d=\"M10 7l5 5-5 5z\"></path>\n      </g>\n      \n      <g id=\"cancel\">\n        <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\">\n        </path>\n      </g>\n      <g id=\"check\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"></path>\n      </g>\n      <g id=\"chevron-left\">\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path>\n      </g>\n      <g id=\"chevron-right\">\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path>\n      </g>\n      <g id=\"clear\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"close\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"computer\">\n        <path d=\"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\">\n        </path>\n      </g>\n      <g id=\"delete\">\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n      </g>\n      <g id=\"domain\">\n        <path d=\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\">\n        </path>\n      </g>\n      <g id=\"error\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\">\n        </path>\n      </g>\n      <g id=\"error-outline\">\n        <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\">\n        </path>\n      </g>\n      <g id=\"expand-less\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"></path>\n      </g>\n      <g id=\"expand-more\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n      </g>\n      <g id=\"extension\">\n        <path d=\"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z\">\n        </path>\n      </g>\n      <g id=\"file-download\">\n        <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"></path>\n      </g>\n      \n      <g id=\"fullscreen\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"></path>\n      </g>\n      <g id=\"group\">\n        <path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\">\n        </path>\n      </g>\n      <g id=\"help-outline\">\n        <path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\">\n        </path>\n      </g>\n      <g id=\"info\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\">\n        </path>\n      </g>\n      <g id=\"info-outline\">\n        <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\">\n        </path>\n      </g>\n      <g id=\"insert-drive-file\">\n        <path d=\"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\">\n        </path>\n      </g>\n      <g id=\"location-on\">\n        <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\">\n        </path>\n      </g>\n      <g id=\"mic\">\n        <path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\">\n        </path>\n      </g>\n      <g id=\"more-vert\">\n        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\">\n        </path>\n      </g>\n      <g id=\"open-in-new\">\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\">\n        </path>\n      </g>\n      <g id=\"person\">\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\">\n        </path>\n      </g>\n      <g id=\"print\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\">\n        </path>\n      </g>\n      <g id=\"search\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\">\n        </path>\n      </g>\n      <g id=\"security\">\n        <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z\">\n        </path>\n      </g>\n      \n      <!-- The <g> IDs are exposed as global variables in Vulcanized mode, which\n        conflicts with the \"settings\" namespace of MD Settings. Using an \"_icon\"\n        suffix prevents the naming conflict. -->\n      <g id=\"settings_icon\">\n        <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\">\n        </path>\n      </g>\n      <g id=\"star\">\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"></path>\n      </g>\n      <g id=\"sync\">\n        <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\">\n        </path>\n      </g>\n      <g id=\"videocam\">\n        <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\">\n        </path>\n      </g>\n      <g id=\"warning\">\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"></path>\n      </g>\n    </defs>\n  </svg>\n</iron-iconset-svg>\n<custom-style>\n<style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-blue-50-rgb: 232, 240, 254;  \n    --google-blue-50: rgb(var(--google-blue-50-rgb));\n    --google-blue-200-rgb: 174, 203, 250;  \n    --google-blue-200: rgb(var(--google-blue-200-rgb));\n    --google-blue-600-rgb: 26, 115, 232;  \n    --google-blue-600: rgb(var(--google-blue-600-rgb));\n\n    --google-grey-50-rgb: 248, 249, 250;  \n    --google-grey-50: rgb(var(--google-grey-50-rgb));\n    --google-grey-200-rgb: 232, 234, 237;  \n    --google-grey-200: rgb(var(--google-grey-200-rgb));\n    --google-grey-400-rgb: 189, 193, 198;  \n    --google-grey-400: rgb(var(--google-grey-400-rgb));\n    --google-grey-600-rgb: 128, 134, 139;  \n    --google-grey-600: rgb(var(--google-grey-600-rgb));\n    --google-grey-800-rgb: 60, 64, 67;  \n    --google-grey-800: rgb(var(--google-grey-800-rgb));\n    --google-grey-900-rgb: 32, 33, 36;  \n    --google-grey-900: rgb(var(--google-grey-900-rgb));\n    \n    --google-grey-900-white-4-percent: #292a2d;\n\n    --google-red-600-rgb: 217, 48, 37;  \n    --google-red-600: rgb(var(--google-red-600-rgb));\n\n    --google-yellow-50-rgb: 254, 247, 224;  \n    --google-yellow-50: rgb(var(--google-yellow-50-rgb));\n\n    \n    --google-blue-refresh-100-rgb: 210, 227, 252;  \n    --google-blue-refresh-100: rgb(var(--google-blue-refresh-100-rgb));\n    --google-blue-refresh-300-rgb: 138, 180, 248;  \n    --google-blue-refresh-300: rgb(var(--google-blue-refresh-300-rgb));\n    --google-blue-refresh-500-rgb: 66, 133, 244;  \n    --google-blue-refresh-500: rgb(var(--google-blue-refresh-500-rgb));\n    --google-blue-refresh-700-rgb: 25, 103, 210;  \n    --google-blue-refresh-700: rgb(var(--google-blue-refresh-700-rgb));\n\n    --google-green-refresh-300-rgb: 129, 201, 149;  \n    --google-green-refresh-300: rgb(var(--google-green-refresh-300-rgb));\n    --google-green-refresh-700-rgb: 24, 128, 56;  \n    --google-green-refresh-700: rgb(var(--google-green-refresh-700-rgb));\n\n    --google-grey-refresh-100-rgb: 241, 243, 244;  \n    --google-grey-refresh-100: rgb(var(--google-grey-refresh-100-rgb));\n    --google-grey-refresh-300-rgb: 218, 220, 224;  \n    --google-grey-refresh-300: rgb(var(--google-grey-refresh-300-rgb));\n    --google-grey-refresh-500-rgb: 154, 160, 166;  \n    --google-grey-refresh-500: rgb(var(--google-grey-refresh-500-rgb));\n    --google-grey-refresh-700-rgb: 95, 99, 104;  \n    --google-grey-refresh-700: rgb(var(--google-grey-refresh-700-rgb));\n\n    --google-red-refresh-300-rgb: 242, 139, 130;  \n    --google-red-refresh-300: rgb(var(--google-red-refresh-300-rgb));\n    --google-red-refresh-500-rgb: 234, 67, 53;  \n    --google-red-refresh-500: rgb(var(--google-red-refresh-500-rgb));\n\n    --google-yellow-refresh-300-rgb: 253, 214, 51;  \n    --google-yellow-refresh-300: rgb(var(--google-yellow-refresh-300-rgb));\n\n    --cr-primary-text-color: var(--google-grey-900);\n    --cr-secondary-text-color: var(--google-grey-refresh-700);\n\n    --cr-card-background-color: white;\n    --cr-card-shadow-color-rgb: var(--google-grey-800-rgb);\n\n    --cr-elevation-1: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 1px 3px 1px;\n    --cr-elevation-2: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 2px 6px 2px;\n    --cr-elevation-3: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 4px 8px 3px;\n    --cr-elevation-4: rgba(var(--cr-card-shadow-color-rgb), .3) 0 2px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 6px 10px 4px;\n    --cr-elevation-5: rgba(var(--cr-card-shadow-color-rgb), .3) 0 4px 4px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 8px 12px 6px;\n\n    --cr-card-shadow: var(--cr-elevation-1);\n\n    --cr-checked-color: var(--google-blue-600);\n    --cr-focused-item-color: var(--google-grey-300);\n    --cr-form-field-label-color: var(--google-grey-refresh-700);\n    --cr-hairline-rgb: 0, 0, 0;\n    --cr-link-color: var(--google-blue-700);\n    --cr-menu-background-color: white;\n    --cr-menu-background-focus-color: var(--google-grey-400);\n    --cr-menu-shadow: 0 2px 6px var(--paper-grey-500);\n    --cr-separator-color: rgba(0, 0, 0, .06);\n    --cr-title-text-color: rgb(90, 90, 90);\n    --cr-toggle-color: var(--google-blue-500);\n    --cr-toolbar-background-color: var(--google-blue-700);\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --cr-primary-text-color: var(--google-grey-200);\n      --cr-secondary-text-color: var(--google-grey-refresh-500);\n\n      --cr-card-background-color: var(--google-grey-900-white-4-percent);\n      --cr-card-shadow-color-rgb: 0, 0, 0;\n\n      --cr-checked-color: var(--google-blue-refresh-300);\n      --cr-form-field-label-color: var(--dark-secondary-color);\n      --cr-hairline-rgb: 255, 255, 255;\n      --cr-link-color: var(--google-blue-refresh-300);\n      --cr-menu-background-color: var(--google-grey-900);\n      --cr-menu-background-focus-color: var(--google-grey-refresh-700);\n      --cr-menu-background-sheen: rgba(255, 255, 255, .06);  \n      --cr-menu-shadow: rgba(0, 0, 0, .3) 0 1px 2px 0,\n                        rgba(0, 0, 0, .15) 0 3px 6px 2px;\n      --cr-separator-color: rgba(255, 255, 255, .1);\n      \n      --cr-title-text-color: var(--cr-primary-text-color);\n      --cr-toolbar-background-color: var(--google-grey-900-white-4-percent);\n}\n\n}\n\nhtml {\n  --cr-button-edge-spacing: 12px;\n    --cr-button-height: 32px;\n\n    \n    --cr-controlled-by-spacing: 24px;\n\n    \n    --cr-default-input-max-width: 264px;\n\n    \n    --cr-icon-ripple-size: 36px;\n    --cr-icon-ripple-padding: 8px;\n\n    --cr-icon-size: 20px;\n\n    --cr-icon-button-margin-start: 16px;\n\n    \n    --cr-icon-ripple-margin: calc(var(--cr-icon-ripple-padding) * -1);\n\n    \n    \n    --cr-section-min-height: 48px;\n    --cr-section-two-line-min-height: 64px;\n    --cr-section-three-line-min-height: 84px;\n\n    --cr-section-padding: 20px;\n    --cr-section-vertical-padding: 12px;\n    --cr-section-indent-width: 40px;\n    --cr-section-indent-padding: calc(\n        var(--cr-section-padding) + var(--cr-section-indent-width));\n\n    --cr-section-vertical-margin: 21px;\n\n    --cr-centered-card-max-width: 680px;\n    --cr-centered-card-width-percentage: 0.96;\n\n    --cr-hairline: 1px solid rgba(var(--cr-hairline-rgb), .14);\n\n    --cr-separator-height: 1px;\n    --cr-separator-line: var(--cr-separator-height) solid\n        var(--cr-separator-color);\n\n    --cr-toolbar-overlay-animation-duration: 150ms;\n    --cr-toolbar-height: 56px;\n\n    --cr-container-shadow-height: 6px;\n    --cr-container-shadow-margin: calc(-1 * var(--cr-container-shadow-height));\n\n    --cr-container-shadow-max-opacity: 1;\n\n    \n    --cr-card-border-radius: 4px;\n    --cr-disabled-opacity: .38;\n    --cr-form-field-bottom-spacing: 16px;\n    --cr-form-field-label-font-size: .625rem;\n    --cr-form-field-label-height: 1em;\n    --cr-form-field-label-line-height: 1em;\n}\n\n</style>\n</custom-style>\n<!--_html_template_start_--><custom-style>\n<style css-build=\"shadow\">html {\n  --card-max-width: 960px;\n    --card-padding-side: 32px;\n    --folder-icon-color: #757575;\n    --folder-inactive-color: #5a5a5a;\n    --highlight-color: var(--google-blue-50);\n    --interactive-color: var(--google-blue-500);\n    --iron-icon-height: 20px;\n    --iron-icon-width: 20px;\n    --min-sidebar-width: 256px;\n    --splitter-width: 15px;\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --folder-icon-color: var(--google-grey-refresh-500);\n      --folder-inactive-color: var(--google-grey-refresh-500);\n      --highlight-color: var(--google-blue-refresh-300);\n      --interactive-color: var(--google-blue-refresh-300);\n}\n\n}\n\n</style>\n</custom-style>\n<!--_html_template_end_--><dom-module id=\"paper-spinner-styles\">\n  <template></template>\n</dom-module></head>\n<body>\n  <bookmarks-app></bookmarks-app>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/text_defaults_md.css\">\n  <script type=\"module\" src=\"chrome://bookmarks/bookmarks.js\"></script>\n\n\n<dom-module id=\"cr-hidden-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-icons\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-shared-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"shared-style\"><!--_html_template_start_-->\n<template></template>\n<!--_html_template_end_--></dom-module>\n<dom-module id=\"cr-input-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<iron-a11y-announcer></iron-a11y-announcer></body></html>","source":"img/page/กฃกฃjnbhvgกขกฎกฃฃฌlkmnjbhgvcfxdzsazกฏ.html","raw":"<!DOCTYPE html>\n<!-- saved from url=(0203)chrome://bookmarks/?q=bbbbbbbbbbbbbbbbbb%20v%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%2C%2C%2C%2Cxzz -->\n<html dir=\"ltr\" lang=\"zh\" class=\"\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n  \n  <!--<base href=\"chrome://bookmarks\">--><base href=\".\">\n  <title>书签</title>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/md_colors.css\">\n  <style>\n    html {\n      /* Remove 300ms delay for 'click' event, when using touch interface. */\n      touch-action: manipulation;\n    }\n\n    html,\n    body {\n      background: var(--md-background-color);\n      height: 100%;\n      margin: 0;\n      overflow: hidden;\n    }\n\n    html.loading::before {\n      background-color: var(--md-toolbar-color);\n      border-bottom: var(--md-toolbar-border);\n      box-sizing: border-box;\n      content: '';\n      display: block;\n      height: var(--md-toolbar-height);\n    }\n  </style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">[hidden] {\n  display: none !important;\n}\n\n</style>\n</custom-style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --layout_-_display:  flex;;\n\n      --layout-inline_-_display:  inline-flex;;\n\n      --layout-horizontal_-_display:  var(--layout_-_display); --layout-horizontal_-_flex-direction:  row;;\n\n      --layout-horizontal-reverse_-_display:  var(--layout_-_display); --layout-horizontal-reverse_-_flex-direction:  row-reverse;;\n\n      --layout-vertical_-_display:  var(--layout_-_display); --layout-vertical_-_flex-direction:  column;;\n\n      --layout-vertical-reverse_-_display:  var(--layout_-_display); --layout-vertical-reverse_-_flex-direction:  column-reverse;;\n\n      --layout-wrap_-_flex-wrap:  wrap;;\n\n      --layout-wrap-reverse_-_flex-wrap:  wrap-reverse;;\n\n      --layout-flex-auto_-_flex:  1 1 auto;;\n\n      --layout-flex-none_-_flex:  none;;\n\n      --layout-flex_-_flex:  1; --layout-flex_-_flex-basis:  0.000000001px;;\n\n      --layout-flex-2_-_flex:  2;;\n\n      --layout-flex-3_-_flex:  3;;\n\n      --layout-flex-4_-_flex:  4;;\n\n      --layout-flex-5_-_flex:  5;;\n\n      --layout-flex-6_-_flex:  6;;\n\n      --layout-flex-7_-_flex:  7;;\n\n      --layout-flex-8_-_flex:  8;;\n\n      --layout-flex-9_-_flex:  9;;\n\n      --layout-flex-10_-_flex:  10;;\n\n      --layout-flex-11_-_flex:  11;;\n\n      --layout-flex-12_-_flex:  12;;\n\n      \n\n      --layout-start_-_align-items:  flex-start;;\n\n      --layout-center_-_align-items:  center;;\n\n      --layout-end_-_align-items:  flex-end;;\n\n      --layout-baseline_-_align-items:  baseline;;\n\n      \n\n      --layout-start-justified_-_justify-content:  flex-start;;\n\n      --layout-center-justified_-_justify-content:  center;;\n\n      --layout-end-justified_-_justify-content:  flex-end;;\n\n      --layout-around-justified_-_justify-content:  space-around;;\n\n      --layout-justified_-_justify-content:  space-between;;\n\n      --layout-center-center_-_align-items:  var(--layout-center_-_align-items); --layout-center-center_-_justify-content:  var(--layout-center-justified_-_justify-content);;\n\n      \n\n      --layout-self-start_-_align-self:  flex-start;;\n\n      --layout-self-center_-_align-self:  center;;\n\n      --layout-self-end_-_align-self:  flex-end;;\n\n      --layout-self-stretch_-_align-self:  stretch;;\n\n      --layout-self-baseline_-_align-self:  baseline;;\n\n      \n\n      --layout-start-aligned_-_align-content:  flex-start;;\n\n      --layout-end-aligned_-_align-content:  flex-end;;\n\n      --layout-center-aligned_-_align-content:  center;;\n\n      --layout-between-aligned_-_align-content:  space-between;;\n\n      --layout-around-aligned_-_align-content:  space-around;;\n\n      \n\n      --layout-block_-_display:  block;;\n\n      --layout-invisible_-_visibility:  hidden !important;;\n\n      --layout-relative_-_position:  relative;;\n\n      --layout-fit_-_position:  absolute; --layout-fit_-_top:  0; --layout-fit_-_right:  0; --layout-fit_-_bottom:  0; --layout-fit_-_left:  0;;\n\n      --layout-scroll_-_-webkit-overflow-scrolling:  touch; --layout-scroll_-_overflow:  auto;;\n\n      --layout-fullbleed_-_margin:  0; --layout-fullbleed_-_height:  100vh;;\n\n      \n\n      --layout-fixed-top_-_position:  fixed; --layout-fixed-top_-_top:  0; --layout-fixed-top_-_left:  0; --layout-fixed-top_-_right:  0;;\n\n      --layout-fixed-right_-_position:  fixed; --layout-fixed-right_-_top:  0; --layout-fixed-right_-_right:  0; --layout-fixed-right_-_bottom:  0;;\n\n      --layout-fixed-bottom_-_position:  fixed; --layout-fixed-bottom_-_right:  0; --layout-fixed-bottom_-_bottom:  0; --layout-fixed-bottom_-_left:  0;;\n\n      --layout-fixed-left_-_position:  fixed; --layout-fixed-left_-_top:  0; --layout-fixed-left_-_bottom:  0; --layout-fixed-left_-_left:  0;;\n}\n\n</style>\n</custom-style><style>[hidden] { display: none !important; }</style><custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-red-100-rgb: 244, 199, 195;  \n      --google-red-100: rgb(var(--google-red-100-rgb));\n      --google-red-300-rgb: 230, 124, 115;  \n      --google-red-300: rgb(var(--google-red-300-rgb));\n      --google-red-500-rgb: 219, 68, 55;  \n      --google-red-500: rgb(var(--google-red-500-rgb));\n      --google-red-700-rgb: 197, 57, 41;  \n      --google-red-700: rgb(var(--google-red-700-rgb));\n\n      --google-blue-100-rgb: 198, 218, 252;  \n      --google-blue-100: rgb(var(--google-blue-100-rgb));\n      --google-blue-300-rgb: 123, 170, 247;  \n      --google-blue-300: rgb(var(--google-blue-300-rgb));\n      --google-blue-500-rgb: 66, 133, 244;  \n      --google-blue-500: rgb(var(--google-blue-500-rgb));\n      --google-blue-700-rgb: 51, 103, 214;  \n      --google-blue-700: rgb(var(--google-blue-700-rgb));\n\n      --google-green-100-rgb: 183, 225, 205;  \n      --google-green-100: rgb(var(--google-green-100-rgb));\n      --google-green-300-rgb: 87, 187, 138;  \n      --google-green-300: rgb(var(--google-green-300-rgb));\n      --google-green-500-rgb: 15, 157, 88;  \n      --google-green-500: rgb(var(--google-green-500-rgb));\n      --google-green-700-rgb: 11, 128, 67;  \n      --google-green-700: rgb(var(--google-green-700-rgb));\n\n      --google-yellow-100-rgb: 252, 232, 178;  \n      --google-yellow-100: rgb(var(--google-yellow-100-rgb));\n      --google-yellow-300-rgb: 247, 203, 77;  \n      --google-yellow-300: rgb(var(--google-yellow-300-rgb));\n      --google-yellow-500-rgb: 244, 180, 0;  \n      --google-yellow-500: rgb(var(--google-yellow-500-rgb));\n      --google-yellow-700-rgb: 240, 147, 0;  \n      --google-yellow-700: rgb(var(--google-yellow-700-rgb));\n\n      --google-grey-100-rgb: 245, 245, 245;  \n      --google-grey-100: rgb(var(--google-grey-100-rgb));\n      --google-grey-300-rgb: 224, 224, 224;  \n      --google-grey-300: rgb(var(--google-grey-300-rgb));\n      --google-grey-500-rgb: 158, 158, 158;  \n      --google-grey-500: rgb(var(--google-grey-500-rgb));\n      --google-grey-700-rgb: 97, 97, 97;  \n      --google-grey-700: rgb(var(--google-grey-700-rgb));\n\n      \n\n      --paper-red-50: #ffebee;\n      --paper-red-100: #ffcdd2;\n      --paper-red-200: #ef9a9a;\n      --paper-red-300: #e57373;\n      --paper-red-400: #ef5350;\n      --paper-red-500: #f44336;\n      --paper-red-600: #e53935;\n      --paper-red-700: #d32f2f;\n      --paper-red-800: #c62828;\n      --paper-red-900: #b71c1c;\n      --paper-red-a100: #ff8a80;\n      --paper-red-a200: #ff5252;\n      --paper-red-a400: #ff1744;\n      --paper-red-a700: #d50000;\n\n      --paper-light-blue-50: #e1f5fe;\n      --paper-light-blue-100: #b3e5fc;\n      --paper-light-blue-200: #81d4fa;\n      --paper-light-blue-300: #4fc3f7;\n      --paper-light-blue-400: #29b6f6;\n      --paper-light-blue-500: #03a9f4;\n      --paper-light-blue-600: #039be5;\n      --paper-light-blue-700: #0288d1;\n      --paper-light-blue-800: #0277bd;\n      --paper-light-blue-900: #01579b;\n      --paper-light-blue-a100: #80d8ff;\n      --paper-light-blue-a200: #40c4ff;\n      --paper-light-blue-a400: #00b0ff;\n      --paper-light-blue-a700: #0091ea;\n\n      --paper-yellow-50: #fffde7;\n      --paper-yellow-100: #fff9c4;\n      --paper-yellow-200: #fff59d;\n      --paper-yellow-300: #fff176;\n      --paper-yellow-400: #ffee58;\n      --paper-yellow-500: #ffeb3b;\n      --paper-yellow-600: #fdd835;\n      --paper-yellow-700: #fbc02d;\n      --paper-yellow-800: #f9a825;\n      --paper-yellow-900: #f57f17;\n      --paper-yellow-a100: #ffff8d;\n      --paper-yellow-a200: #ffff00;\n      --paper-yellow-a400: #ffea00;\n      --paper-yellow-a700: #ffd600;\n\n      --paper-orange-50: #fff3e0;\n      --paper-orange-100: #ffe0b2;\n      --paper-orange-200: #ffcc80;\n      --paper-orange-300: #ffb74d;\n      --paper-orange-400: #ffa726;\n      --paper-orange-500: #ff9800;\n      --paper-orange-600: #fb8c00;\n      --paper-orange-700: #f57c00;\n      --paper-orange-800: #ef6c00;\n      --paper-orange-900: #e65100;\n      --paper-orange-a100: #ffd180;\n      --paper-orange-a200: #ffab40;\n      --paper-orange-a400: #ff9100;\n      --paper-orange-a700: #ff6500;\n\n      --paper-grey-50: #fafafa;\n      --paper-grey-100: #f5f5f5;\n      --paper-grey-200: #eeeeee;\n      --paper-grey-300: #e0e0e0;\n      --paper-grey-400: #bdbdbd;\n      --paper-grey-500: #9e9e9e;\n      --paper-grey-600: #757575;\n      --paper-grey-700: #616161;\n      --paper-grey-800: #424242;\n      --paper-grey-900: #212121;\n\n      --paper-blue-grey-50: #eceff1;\n      --paper-blue-grey-100: #cfd8dc;\n      --paper-blue-grey-200: #b0bec5;\n      --paper-blue-grey-300: #90a4ae;\n      --paper-blue-grey-400: #78909c;\n      --paper-blue-grey-500: #607d8b;\n      --paper-blue-grey-600: #546e7a;\n      --paper-blue-grey-700: #455a64;\n      --paper-blue-grey-800: #37474f;\n      --paper-blue-grey-900: #263238;\n\n      \n      --dark-divider-opacity: 0.12;\n      --dark-disabled-opacity: 0.38; \n      --dark-secondary-opacity: 0.54;\n      --dark-primary-opacity: 0.87;\n\n      \n      --light-divider-opacity: 0.12;\n      --light-disabled-opacity: 0.3; \n      --light-secondary-opacity: 0.7;\n      --light-primary-opacity: 1.0;\n}\n\n</style>\n</custom-style>\n<iron-iconset-svg name=\"cr20\" size=\"20\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      Keep these in sorted order by id=\"\". See also http://goo.gl/Y1OdAq\n      -->\n      <g id=\"domain\">\n        <path d=\"M2,3 L2,17 L11.8267655,17 L13.7904799,17 L18,17 L18,7 L12,7 L12,3 L2,3 Z M8,13 L10,13 L10,15 L8,15 L8,13 Z M4,13 L6,13 L6,15 L4,15 L4,13 Z M8,9 L10,9 L10,11 L8,11 L8,9 Z M4,9 L6,9 L6,11 L4,11 L4,9 Z M12,9 L16,9 L16,15 L12,15 L12,9 Z M12,11 L14,11 L14,13 L12,13 L12,11 Z M8,5 L10,5 L10,7 L8,7 L8,5 Z M4,5 L6,5 L6,7 L4,7 L4,5 Z\">\n        </path>\n      </g>\n      <g id=\"kite\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.6327 8.00094L10.3199 2L16 8.00094L10.1848 16.8673C10.0995 16.9873 10.0071 17.1074 9.90047 17.2199C9.42417 17.7225 8.79147 18 8.11611 18C7.44076 18 6.80806 17.7225 6.33175 17.2199C5.85545 16.7173 5.59242 16.0497 5.59242 15.3371C5.59242 14.977 5.46445 14.647 5.22275 14.3919C4.98104 14.1369 4.66825 14.0019 4.32701 14.0019H4V12.6667H4.32701C5.00237 12.6667 5.63507 12.9442 6.11137 13.4468C6.58768 13.9494 6.85071 14.617 6.85071 15.3296C6.85071 15.6896 6.97867 16.0197 7.22038 16.2747C7.46209 16.5298 7.77488 16.6648 8.11611 16.6648C8.45735 16.6648 8.77014 16.5223 9.01185 16.2747C9.02396 16.2601 9.03607 16.246 9.04808 16.2319C9.08541 16.1883 9.12176 16.1458 9.15403 16.0947L9.55213 15.4946L4.6327 8.00094ZM10.3199 13.9371L6.53802 8.17116L10.3199 4.1814L14.0963 8.17103L10.3199 13.9371Z\">\n        </path>\n      </g>\n      <g id=\"menu\">\n        <path d=\"M2 4h16v2H2zM2 9h16v2H2zM2 14h16v2H2z\"></path>\n      </g>\n      \n  </defs></svg>\n</iron-iconset-svg>\n<iron-iconset-svg name=\"cr\" size=\"24\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      These icons are copied from Polymer's iron-icons and kept in sorted order.\n      See http://goo.gl/Y1OdAq for instructions on adding additional icons.\n      -->\n      <g id=\"account-child-invert\" viewBox=\"0 0 48 48\">\n        <path d=\"M24 4c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6 2.69-6 6-6z\"></path>\n        <path fill=\"none\" d=\"M0 0h48v48H0V0z\"></path>\n        <circle fill=\"none\" cx=\"24\" cy=\"26\" r=\"4\"></circle>\n        <path d=\"M24 18c-6.16 0-13 3.12-13 7.23v11.54c0 2.32 2.19 4.33 5.2 5.63 2.32 1 5.12 1.59 7.8 1.59.66 0 1.33-.06 2-.14v-5.2c-.67.08-1.34.14-2 .14-2.63 0-5.39-.57-7.68-1.55.67-2.12 4.34-3.65 7.68-3.65.86 0 1.75.11 2.6.29 2.79.62 5.2 2.15 5.2 4.04v4.47c3.01-1.31 5.2-3.31 5.2-5.63V25.23C37 21.12 30.16 18 24 18zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z\">\n        </path>\n      </g>\n      <g id=\"add\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n      </g>\n      <g id=\"arrow-back\">\n        <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"></path>\n      </g>\n      <g id=\"arrow-drop-up\">\n        <path d=\"M7 14l5-5 5 5z\">\n      </path></g>\n      <g id=\"arrow-drop-down\">\n        <path d=\"M7 10l5 5 5-5z\"></path>\n      </g>\n      <g id=\"arrow-forward\">\n        <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"></path>\n      </g>\n      <g id=\"arrow-right\">\n        <path d=\"M10 7l5 5-5 5z\"></path>\n      </g>\n      \n      <g id=\"cancel\">\n        <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\">\n        </path>\n      </g>\n      <g id=\"check\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"></path>\n      </g>\n      <g id=\"chevron-left\">\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path>\n      </g>\n      <g id=\"chevron-right\">\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path>\n      </g>\n      <g id=\"clear\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"close\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"computer\">\n        <path d=\"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\">\n        </path>\n      </g>\n      <g id=\"delete\">\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n      </g>\n      <g id=\"domain\">\n        <path d=\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\">\n        </path>\n      </g>\n      <g id=\"error\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\">\n        </path>\n      </g>\n      <g id=\"error-outline\">\n        <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\">\n        </path>\n      </g>\n      <g id=\"expand-less\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"></path>\n      </g>\n      <g id=\"expand-more\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n      </g>\n      <g id=\"extension\">\n        <path d=\"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z\">\n        </path>\n      </g>\n      <g id=\"file-download\">\n        <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"></path>\n      </g>\n      \n      <g id=\"fullscreen\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"></path>\n      </g>\n      <g id=\"group\">\n        <path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\">\n        </path>\n      </g>\n      <g id=\"help-outline\">\n        <path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\">\n        </path>\n      </g>\n      <g id=\"info\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\">\n        </path>\n      </g>\n      <g id=\"info-outline\">\n        <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\">\n        </path>\n      </g>\n      <g id=\"insert-drive-file\">\n        <path d=\"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\">\n        </path>\n      </g>\n      <g id=\"location-on\">\n        <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\">\n        </path>\n      </g>\n      <g id=\"mic\">\n        <path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\">\n        </path>\n      </g>\n      <g id=\"more-vert\">\n        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\">\n        </path>\n      </g>\n      <g id=\"open-in-new\">\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\">\n        </path>\n      </g>\n      <g id=\"person\">\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\">\n        </path>\n      </g>\n      <g id=\"print\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\">\n        </path>\n      </g>\n      <g id=\"search\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\">\n        </path>\n      </g>\n      <g id=\"security\">\n        <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z\">\n        </path>\n      </g>\n      \n      <!-- The <g> IDs are exposed as global variables in Vulcanized mode, which\n        conflicts with the \"settings\" namespace of MD Settings. Using an \"_icon\"\n        suffix prevents the naming conflict. -->\n      <g id=\"settings_icon\">\n        <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\">\n        </path>\n      </g>\n      <g id=\"star\">\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"></path>\n      </g>\n      <g id=\"sync\">\n        <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\">\n        </path>\n      </g>\n      <g id=\"videocam\">\n        <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\">\n        </path>\n      </g>\n      <g id=\"warning\">\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"></path>\n      </g>\n    </defs>\n  </svg>\n</iron-iconset-svg>\n<custom-style>\n<style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-blue-50-rgb: 232, 240, 254;  \n    --google-blue-50: rgb(var(--google-blue-50-rgb));\n    --google-blue-200-rgb: 174, 203, 250;  \n    --google-blue-200: rgb(var(--google-blue-200-rgb));\n    --google-blue-600-rgb: 26, 115, 232;  \n    --google-blue-600: rgb(var(--google-blue-600-rgb));\n\n    --google-grey-50-rgb: 248, 249, 250;  \n    --google-grey-50: rgb(var(--google-grey-50-rgb));\n    --google-grey-200-rgb: 232, 234, 237;  \n    --google-grey-200: rgb(var(--google-grey-200-rgb));\n    --google-grey-400-rgb: 189, 193, 198;  \n    --google-grey-400: rgb(var(--google-grey-400-rgb));\n    --google-grey-600-rgb: 128, 134, 139;  \n    --google-grey-600: rgb(var(--google-grey-600-rgb));\n    --google-grey-800-rgb: 60, 64, 67;  \n    --google-grey-800: rgb(var(--google-grey-800-rgb));\n    --google-grey-900-rgb: 32, 33, 36;  \n    --google-grey-900: rgb(var(--google-grey-900-rgb));\n    \n    --google-grey-900-white-4-percent: #292a2d;\n\n    --google-red-600-rgb: 217, 48, 37;  \n    --google-red-600: rgb(var(--google-red-600-rgb));\n\n    --google-yellow-50-rgb: 254, 247, 224;  \n    --google-yellow-50: rgb(var(--google-yellow-50-rgb));\n\n    \n    --google-blue-refresh-100-rgb: 210, 227, 252;  \n    --google-blue-refresh-100: rgb(var(--google-blue-refresh-100-rgb));\n    --google-blue-refresh-300-rgb: 138, 180, 248;  \n    --google-blue-refresh-300: rgb(var(--google-blue-refresh-300-rgb));\n    --google-blue-refresh-500-rgb: 66, 133, 244;  \n    --google-blue-refresh-500: rgb(var(--google-blue-refresh-500-rgb));\n    --google-blue-refresh-700-rgb: 25, 103, 210;  \n    --google-blue-refresh-700: rgb(var(--google-blue-refresh-700-rgb));\n\n    --google-green-refresh-300-rgb: 129, 201, 149;  \n    --google-green-refresh-300: rgb(var(--google-green-refresh-300-rgb));\n    --google-green-refresh-700-rgb: 24, 128, 56;  \n    --google-green-refresh-700: rgb(var(--google-green-refresh-700-rgb));\n\n    --google-grey-refresh-100-rgb: 241, 243, 244;  \n    --google-grey-refresh-100: rgb(var(--google-grey-refresh-100-rgb));\n    --google-grey-refresh-300-rgb: 218, 220, 224;  \n    --google-grey-refresh-300: rgb(var(--google-grey-refresh-300-rgb));\n    --google-grey-refresh-500-rgb: 154, 160, 166;  \n    --google-grey-refresh-500: rgb(var(--google-grey-refresh-500-rgb));\n    --google-grey-refresh-700-rgb: 95, 99, 104;  \n    --google-grey-refresh-700: rgb(var(--google-grey-refresh-700-rgb));\n\n    --google-red-refresh-300-rgb: 242, 139, 130;  \n    --google-red-refresh-300: rgb(var(--google-red-refresh-300-rgb));\n    --google-red-refresh-500-rgb: 234, 67, 53;  \n    --google-red-refresh-500: rgb(var(--google-red-refresh-500-rgb));\n\n    --google-yellow-refresh-300-rgb: 253, 214, 51;  \n    --google-yellow-refresh-300: rgb(var(--google-yellow-refresh-300-rgb));\n\n    --cr-primary-text-color: var(--google-grey-900);\n    --cr-secondary-text-color: var(--google-grey-refresh-700);\n\n    --cr-card-background-color: white;\n    --cr-card-shadow-color-rgb: var(--google-grey-800-rgb);\n\n    --cr-elevation-1: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 1px 3px 1px;\n    --cr-elevation-2: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 2px 6px 2px;\n    --cr-elevation-3: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 4px 8px 3px;\n    --cr-elevation-4: rgba(var(--cr-card-shadow-color-rgb), .3) 0 2px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 6px 10px 4px;\n    --cr-elevation-5: rgba(var(--cr-card-shadow-color-rgb), .3) 0 4px 4px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 8px 12px 6px;\n\n    --cr-card-shadow: var(--cr-elevation-1);\n\n    --cr-checked-color: var(--google-blue-600);\n    --cr-focused-item-color: var(--google-grey-300);\n    --cr-form-field-label-color: var(--google-grey-refresh-700);\n    --cr-hairline-rgb: 0, 0, 0;\n    --cr-link-color: var(--google-blue-700);\n    --cr-menu-background-color: white;\n    --cr-menu-background-focus-color: var(--google-grey-400);\n    --cr-menu-shadow: 0 2px 6px var(--paper-grey-500);\n    --cr-separator-color: rgba(0, 0, 0, .06);\n    --cr-title-text-color: rgb(90, 90, 90);\n    --cr-toggle-color: var(--google-blue-500);\n    --cr-toolbar-background-color: var(--google-blue-700);\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --cr-primary-text-color: var(--google-grey-200);\n      --cr-secondary-text-color: var(--google-grey-refresh-500);\n\n      --cr-card-background-color: var(--google-grey-900-white-4-percent);\n      --cr-card-shadow-color-rgb: 0, 0, 0;\n\n      --cr-checked-color: var(--google-blue-refresh-300);\n      --cr-form-field-label-color: var(--dark-secondary-color);\n      --cr-hairline-rgb: 255, 255, 255;\n      --cr-link-color: var(--google-blue-refresh-300);\n      --cr-menu-background-color: var(--google-grey-900);\n      --cr-menu-background-focus-color: var(--google-grey-refresh-700);\n      --cr-menu-background-sheen: rgba(255, 255, 255, .06);  \n      --cr-menu-shadow: rgba(0, 0, 0, .3) 0 1px 2px 0,\n                        rgba(0, 0, 0, .15) 0 3px 6px 2px;\n      --cr-separator-color: rgba(255, 255, 255, .1);\n      \n      --cr-title-text-color: var(--cr-primary-text-color);\n      --cr-toolbar-background-color: var(--google-grey-900-white-4-percent);\n}\n\n}\n\nhtml {\n  --cr-button-edge-spacing: 12px;\n    --cr-button-height: 32px;\n\n    \n    --cr-controlled-by-spacing: 24px;\n\n    \n    --cr-default-input-max-width: 264px;\n\n    \n    --cr-icon-ripple-size: 36px;\n    --cr-icon-ripple-padding: 8px;\n\n    --cr-icon-size: 20px;\n\n    --cr-icon-button-margin-start: 16px;\n\n    \n    --cr-icon-ripple-margin: calc(var(--cr-icon-ripple-padding) * -1);\n\n    \n    \n    --cr-section-min-height: 48px;\n    --cr-section-two-line-min-height: 64px;\n    --cr-section-three-line-min-height: 84px;\n\n    --cr-section-padding: 20px;\n    --cr-section-vertical-padding: 12px;\n    --cr-section-indent-width: 40px;\n    --cr-section-indent-padding: calc(\n        var(--cr-section-padding) + var(--cr-section-indent-width));\n\n    --cr-section-vertical-margin: 21px;\n\n    --cr-centered-card-max-width: 680px;\n    --cr-centered-card-width-percentage: 0.96;\n\n    --cr-hairline: 1px solid rgba(var(--cr-hairline-rgb), .14);\n\n    --cr-separator-height: 1px;\n    --cr-separator-line: var(--cr-separator-height) solid\n        var(--cr-separator-color);\n\n    --cr-toolbar-overlay-animation-duration: 150ms;\n    --cr-toolbar-height: 56px;\n\n    --cr-container-shadow-height: 6px;\n    --cr-container-shadow-margin: calc(-1 * var(--cr-container-shadow-height));\n\n    --cr-container-shadow-max-opacity: 1;\n\n    \n    --cr-card-border-radius: 4px;\n    --cr-disabled-opacity: .38;\n    --cr-form-field-bottom-spacing: 16px;\n    --cr-form-field-label-font-size: .625rem;\n    --cr-form-field-label-height: 1em;\n    --cr-form-field-label-line-height: 1em;\n}\n\n</style>\n</custom-style>\n<!--_html_template_start_--><custom-style>\n<style css-build=\"shadow\">html {\n  --card-max-width: 960px;\n    --card-padding-side: 32px;\n    --folder-icon-color: #757575;\n    --folder-inactive-color: #5a5a5a;\n    --highlight-color: var(--google-blue-50);\n    --interactive-color: var(--google-blue-500);\n    --iron-icon-height: 20px;\n    --iron-icon-width: 20px;\n    --min-sidebar-width: 256px;\n    --splitter-width: 15px;\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --folder-icon-color: var(--google-grey-refresh-500);\n      --folder-inactive-color: var(--google-grey-refresh-500);\n      --highlight-color: var(--google-blue-refresh-300);\n      --interactive-color: var(--google-blue-refresh-300);\n}\n\n}\n\n</style>\n</custom-style>\n<!--_html_template_end_--><dom-module id=\"paper-spinner-styles\">\n  <template></template>\n</dom-module></head>\n<body>\n  <bookmarks-app></bookmarks-app>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/text_defaults_md.css\">\n  <script type=\"module\" src=\"chrome://bookmarks/bookmarks.js\"></script>\n\n\n<dom-module id=\"cr-hidden-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-icons\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-shared-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"shared-style\"><!--_html_template_start_-->\n<template></template>\n<!--_html_template_end_--></dom-module>\n<dom-module id=\"cr-input-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<iron-a11y-announcer></iron-a11y-announcer></body></html>","date":"2023-03-04T14:18:16.334Z","updated":"2021-06-14T12:17:56.000Z","path":"img/page/กฃกฃjnbhvgกขกฎกฃฃฌlkmnjbhgvcfxdzsazกฏ.html","title":"","comments":1,"layout":"page","_id":"cleu1wyun0002s2y2akfk5esx","content":"<!DOCTYPE html>\n<!-- saved from url=(0203)chrome://bookmarks/?q=bbbbbbbbbbbbbbbbbb%20v%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%2C%2C%2C%2Cxzz -->\n<html dir=\"ltr\" lang=\"zh\" class=\"\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n  \n  <!--<base href=\"chrome://bookmarks\">--><base href=\".\">\n  <title>书签</title>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/md_colors.css\">\n  <style>\n    html {\n      /* Remove 300ms delay for 'click' event, when using touch interface. */\n      touch-action: manipulation;\n    }\n\n    html,\n    body {\n      background: var(--md-background-color);\n      height: 100%;\n      margin: 0;\n      overflow: hidden;\n    }\n\n    html.loading::before {\n      background-color: var(--md-toolbar-color);\n      border-bottom: var(--md-toolbar-border);\n      box-sizing: border-box;\n      content: '';\n      display: block;\n      height: var(--md-toolbar-height);\n    }\n  </style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">[hidden] {\n  display: none !important;\n}\n\n</style>\n</custom-style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --layout_-_display:  flex;;\n\n      --layout-inline_-_display:  inline-flex;;\n\n      --layout-horizontal_-_display:  var(--layout_-_display); --layout-horizontal_-_flex-direction:  row;;\n\n      --layout-horizontal-reverse_-_display:  var(--layout_-_display); --layout-horizontal-reverse_-_flex-direction:  row-reverse;;\n\n      --layout-vertical_-_display:  var(--layout_-_display); --layout-vertical_-_flex-direction:  column;;\n\n      --layout-vertical-reverse_-_display:  var(--layout_-_display); --layout-vertical-reverse_-_flex-direction:  column-reverse;;\n\n      --layout-wrap_-_flex-wrap:  wrap;;\n\n      --layout-wrap-reverse_-_flex-wrap:  wrap-reverse;;\n\n      --layout-flex-auto_-_flex:  1 1 auto;;\n\n      --layout-flex-none_-_flex:  none;;\n\n      --layout-flex_-_flex:  1; --layout-flex_-_flex-basis:  0.000000001px;;\n\n      --layout-flex-2_-_flex:  2;;\n\n      --layout-flex-3_-_flex:  3;;\n\n      --layout-flex-4_-_flex:  4;;\n\n      --layout-flex-5_-_flex:  5;;\n\n      --layout-flex-6_-_flex:  6;;\n\n      --layout-flex-7_-_flex:  7;;\n\n      --layout-flex-8_-_flex:  8;;\n\n      --layout-flex-9_-_flex:  9;;\n\n      --layout-flex-10_-_flex:  10;;\n\n      --layout-flex-11_-_flex:  11;;\n\n      --layout-flex-12_-_flex:  12;;\n\n      \n\n      --layout-start_-_align-items:  flex-start;;\n\n      --layout-center_-_align-items:  center;;\n\n      --layout-end_-_align-items:  flex-end;;\n\n      --layout-baseline_-_align-items:  baseline;;\n\n      \n\n      --layout-start-justified_-_justify-content:  flex-start;;\n\n      --layout-center-justified_-_justify-content:  center;;\n\n      --layout-end-justified_-_justify-content:  flex-end;;\n\n      --layout-around-justified_-_justify-content:  space-around;;\n\n      --layout-justified_-_justify-content:  space-between;;\n\n      --layout-center-center_-_align-items:  var(--layout-center_-_align-items); --layout-center-center_-_justify-content:  var(--layout-center-justified_-_justify-content);;\n\n      \n\n      --layout-self-start_-_align-self:  flex-start;;\n\n      --layout-self-center_-_align-self:  center;;\n\n      --layout-self-end_-_align-self:  flex-end;;\n\n      --layout-self-stretch_-_align-self:  stretch;;\n\n      --layout-self-baseline_-_align-self:  baseline;;\n\n      \n\n      --layout-start-aligned_-_align-content:  flex-start;;\n\n      --layout-end-aligned_-_align-content:  flex-end;;\n\n      --layout-center-aligned_-_align-content:  center;;\n\n      --layout-between-aligned_-_align-content:  space-between;;\n\n      --layout-around-aligned_-_align-content:  space-around;;\n\n      \n\n      --layout-block_-_display:  block;;\n\n      --layout-invisible_-_visibility:  hidden !important;;\n\n      --layout-relative_-_position:  relative;;\n\n      --layout-fit_-_position:  absolute; --layout-fit_-_top:  0; --layout-fit_-_right:  0; --layout-fit_-_bottom:  0; --layout-fit_-_left:  0;;\n\n      --layout-scroll_-_-webkit-overflow-scrolling:  touch; --layout-scroll_-_overflow:  auto;;\n\n      --layout-fullbleed_-_margin:  0; --layout-fullbleed_-_height:  100vh;;\n\n      \n\n      --layout-fixed-top_-_position:  fixed; --layout-fixed-top_-_top:  0; --layout-fixed-top_-_left:  0; --layout-fixed-top_-_right:  0;;\n\n      --layout-fixed-right_-_position:  fixed; --layout-fixed-right_-_top:  0; --layout-fixed-right_-_right:  0; --layout-fixed-right_-_bottom:  0;;\n\n      --layout-fixed-bottom_-_position:  fixed; --layout-fixed-bottom_-_right:  0; --layout-fixed-bottom_-_bottom:  0; --layout-fixed-bottom_-_left:  0;;\n\n      --layout-fixed-left_-_position:  fixed; --layout-fixed-left_-_top:  0; --layout-fixed-left_-_bottom:  0; --layout-fixed-left_-_left:  0;;\n}\n\n</style>\n</custom-style><style>[hidden] { display: none !important; }</style><custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-red-100-rgb: 244, 199, 195;  \n      --google-red-100: rgb(var(--google-red-100-rgb));\n      --google-red-300-rgb: 230, 124, 115;  \n      --google-red-300: rgb(var(--google-red-300-rgb));\n      --google-red-500-rgb: 219, 68, 55;  \n      --google-red-500: rgb(var(--google-red-500-rgb));\n      --google-red-700-rgb: 197, 57, 41;  \n      --google-red-700: rgb(var(--google-red-700-rgb));\n\n      --google-blue-100-rgb: 198, 218, 252;  \n      --google-blue-100: rgb(var(--google-blue-100-rgb));\n      --google-blue-300-rgb: 123, 170, 247;  \n      --google-blue-300: rgb(var(--google-blue-300-rgb));\n      --google-blue-500-rgb: 66, 133, 244;  \n      --google-blue-500: rgb(var(--google-blue-500-rgb));\n      --google-blue-700-rgb: 51, 103, 214;  \n      --google-blue-700: rgb(var(--google-blue-700-rgb));\n\n      --google-green-100-rgb: 183, 225, 205;  \n      --google-green-100: rgb(var(--google-green-100-rgb));\n      --google-green-300-rgb: 87, 187, 138;  \n      --google-green-300: rgb(var(--google-green-300-rgb));\n      --google-green-500-rgb: 15, 157, 88;  \n      --google-green-500: rgb(var(--google-green-500-rgb));\n      --google-green-700-rgb: 11, 128, 67;  \n      --google-green-700: rgb(var(--google-green-700-rgb));\n\n      --google-yellow-100-rgb: 252, 232, 178;  \n      --google-yellow-100: rgb(var(--google-yellow-100-rgb));\n      --google-yellow-300-rgb: 247, 203, 77;  \n      --google-yellow-300: rgb(var(--google-yellow-300-rgb));\n      --google-yellow-500-rgb: 244, 180, 0;  \n      --google-yellow-500: rgb(var(--google-yellow-500-rgb));\n      --google-yellow-700-rgb: 240, 147, 0;  \n      --google-yellow-700: rgb(var(--google-yellow-700-rgb));\n\n      --google-grey-100-rgb: 245, 245, 245;  \n      --google-grey-100: rgb(var(--google-grey-100-rgb));\n      --google-grey-300-rgb: 224, 224, 224;  \n      --google-grey-300: rgb(var(--google-grey-300-rgb));\n      --google-grey-500-rgb: 158, 158, 158;  \n      --google-grey-500: rgb(var(--google-grey-500-rgb));\n      --google-grey-700-rgb: 97, 97, 97;  \n      --google-grey-700: rgb(var(--google-grey-700-rgb));\n\n      \n\n      --paper-red-50: #ffebee;\n      --paper-red-100: #ffcdd2;\n      --paper-red-200: #ef9a9a;\n      --paper-red-300: #e57373;\n      --paper-red-400: #ef5350;\n      --paper-red-500: #f44336;\n      --paper-red-600: #e53935;\n      --paper-red-700: #d32f2f;\n      --paper-red-800: #c62828;\n      --paper-red-900: #b71c1c;\n      --paper-red-a100: #ff8a80;\n      --paper-red-a200: #ff5252;\n      --paper-red-a400: #ff1744;\n      --paper-red-a700: #d50000;\n\n      --paper-light-blue-50: #e1f5fe;\n      --paper-light-blue-100: #b3e5fc;\n      --paper-light-blue-200: #81d4fa;\n      --paper-light-blue-300: #4fc3f7;\n      --paper-light-blue-400: #29b6f6;\n      --paper-light-blue-500: #03a9f4;\n      --paper-light-blue-600: #039be5;\n      --paper-light-blue-700: #0288d1;\n      --paper-light-blue-800: #0277bd;\n      --paper-light-blue-900: #01579b;\n      --paper-light-blue-a100: #80d8ff;\n      --paper-light-blue-a200: #40c4ff;\n      --paper-light-blue-a400: #00b0ff;\n      --paper-light-blue-a700: #0091ea;\n\n      --paper-yellow-50: #fffde7;\n      --paper-yellow-100: #fff9c4;\n      --paper-yellow-200: #fff59d;\n      --paper-yellow-300: #fff176;\n      --paper-yellow-400: #ffee58;\n      --paper-yellow-500: #ffeb3b;\n      --paper-yellow-600: #fdd835;\n      --paper-yellow-700: #fbc02d;\n      --paper-yellow-800: #f9a825;\n      --paper-yellow-900: #f57f17;\n      --paper-yellow-a100: #ffff8d;\n      --paper-yellow-a200: #ffff00;\n      --paper-yellow-a400: #ffea00;\n      --paper-yellow-a700: #ffd600;\n\n      --paper-orange-50: #fff3e0;\n      --paper-orange-100: #ffe0b2;\n      --paper-orange-200: #ffcc80;\n      --paper-orange-300: #ffb74d;\n      --paper-orange-400: #ffa726;\n      --paper-orange-500: #ff9800;\n      --paper-orange-600: #fb8c00;\n      --paper-orange-700: #f57c00;\n      --paper-orange-800: #ef6c00;\n      --paper-orange-900: #e65100;\n      --paper-orange-a100: #ffd180;\n      --paper-orange-a200: #ffab40;\n      --paper-orange-a400: #ff9100;\n      --paper-orange-a700: #ff6500;\n\n      --paper-grey-50: #fafafa;\n      --paper-grey-100: #f5f5f5;\n      --paper-grey-200: #eeeeee;\n      --paper-grey-300: #e0e0e0;\n      --paper-grey-400: #bdbdbd;\n      --paper-grey-500: #9e9e9e;\n      --paper-grey-600: #757575;\n      --paper-grey-700: #616161;\n      --paper-grey-800: #424242;\n      --paper-grey-900: #212121;\n\n      --paper-blue-grey-50: #eceff1;\n      --paper-blue-grey-100: #cfd8dc;\n      --paper-blue-grey-200: #b0bec5;\n      --paper-blue-grey-300: #90a4ae;\n      --paper-blue-grey-400: #78909c;\n      --paper-blue-grey-500: #607d8b;\n      --paper-blue-grey-600: #546e7a;\n      --paper-blue-grey-700: #455a64;\n      --paper-blue-grey-800: #37474f;\n      --paper-blue-grey-900: #263238;\n\n      \n      --dark-divider-opacity: 0.12;\n      --dark-disabled-opacity: 0.38; \n      --dark-secondary-opacity: 0.54;\n      --dark-primary-opacity: 0.87;\n\n      \n      --light-divider-opacity: 0.12;\n      --light-disabled-opacity: 0.3; \n      --light-secondary-opacity: 0.7;\n      --light-primary-opacity: 1.0;\n}\n\n</style>\n</custom-style>\n<iron-iconset-svg name=\"cr20\" size=\"20\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      Keep these in sorted order by id=\"\". See also http://goo.gl/Y1OdAq\n      -->\n      <g id=\"domain\">\n        <path d=\"M2,3 L2,17 L11.8267655,17 L13.7904799,17 L18,17 L18,7 L12,7 L12,3 L2,3 Z M8,13 L10,13 L10,15 L8,15 L8,13 Z M4,13 L6,13 L6,15 L4,15 L4,13 Z M8,9 L10,9 L10,11 L8,11 L8,9 Z M4,9 L6,9 L6,11 L4,11 L4,9 Z M12,9 L16,9 L16,15 L12,15 L12,9 Z M12,11 L14,11 L14,13 L12,13 L12,11 Z M8,5 L10,5 L10,7 L8,7 L8,5 Z M4,5 L6,5 L6,7 L4,7 L4,5 Z\">\n        </path>\n      </g>\n      <g id=\"kite\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.6327 8.00094L10.3199 2L16 8.00094L10.1848 16.8673C10.0995 16.9873 10.0071 17.1074 9.90047 17.2199C9.42417 17.7225 8.79147 18 8.11611 18C7.44076 18 6.80806 17.7225 6.33175 17.2199C5.85545 16.7173 5.59242 16.0497 5.59242 15.3371C5.59242 14.977 5.46445 14.647 5.22275 14.3919C4.98104 14.1369 4.66825 14.0019 4.32701 14.0019H4V12.6667H4.32701C5.00237 12.6667 5.63507 12.9442 6.11137 13.4468C6.58768 13.9494 6.85071 14.617 6.85071 15.3296C6.85071 15.6896 6.97867 16.0197 7.22038 16.2747C7.46209 16.5298 7.77488 16.6648 8.11611 16.6648C8.45735 16.6648 8.77014 16.5223 9.01185 16.2747C9.02396 16.2601 9.03607 16.246 9.04808 16.2319C9.08541 16.1883 9.12176 16.1458 9.15403 16.0947L9.55213 15.4946L4.6327 8.00094ZM10.3199 13.9371L6.53802 8.17116L10.3199 4.1814L14.0963 8.17103L10.3199 13.9371Z\">\n        </path>\n      </g>\n      <g id=\"menu\">\n        <path d=\"M2 4h16v2H2zM2 9h16v2H2zM2 14h16v2H2z\"></path>\n      </g>\n      \n  </defs></svg>\n</iron-iconset-svg>\n<iron-iconset-svg name=\"cr\" size=\"24\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      These icons are copied from Polymer's iron-icons and kept in sorted order.\n      See http://goo.gl/Y1OdAq for instructions on adding additional icons.\n      -->\n      <g id=\"account-child-invert\" viewBox=\"0 0 48 48\">\n        <path d=\"M24 4c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6 2.69-6 6-6z\"></path>\n        <path fill=\"none\" d=\"M0 0h48v48H0V0z\"></path>\n        <circle fill=\"none\" cx=\"24\" cy=\"26\" r=\"4\"></circle>\n        <path d=\"M24 18c-6.16 0-13 3.12-13 7.23v11.54c0 2.32 2.19 4.33 5.2 5.63 2.32 1 5.12 1.59 7.8 1.59.66 0 1.33-.06 2-.14v-5.2c-.67.08-1.34.14-2 .14-2.63 0-5.39-.57-7.68-1.55.67-2.12 4.34-3.65 7.68-3.65.86 0 1.75.11 2.6.29 2.79.62 5.2 2.15 5.2 4.04v4.47c3.01-1.31 5.2-3.31 5.2-5.63V25.23C37 21.12 30.16 18 24 18zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z\">\n        </path>\n      </g>\n      <g id=\"add\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n      </g>\n      <g id=\"arrow-back\">\n        <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"></path>\n      </g>\n      <g id=\"arrow-drop-up\">\n        <path d=\"M7 14l5-5 5 5z\">\n      </path></g>\n      <g id=\"arrow-drop-down\">\n        <path d=\"M7 10l5 5 5-5z\"></path>\n      </g>\n      <g id=\"arrow-forward\">\n        <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"></path>\n      </g>\n      <g id=\"arrow-right\">\n        <path d=\"M10 7l5 5-5 5z\"></path>\n      </g>\n      \n      <g id=\"cancel\">\n        <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\">\n        </path>\n      </g>\n      <g id=\"check\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"></path>\n      </g>\n      <g id=\"chevron-left\">\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path>\n      </g>\n      <g id=\"chevron-right\">\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path>\n      </g>\n      <g id=\"clear\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"close\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"computer\">\n        <path d=\"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\">\n        </path>\n      </g>\n      <g id=\"delete\">\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n      </g>\n      <g id=\"domain\">\n        <path d=\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\">\n        </path>\n      </g>\n      <g id=\"error\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\">\n        </path>\n      </g>\n      <g id=\"error-outline\">\n        <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\">\n        </path>\n      </g>\n      <g id=\"expand-less\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"></path>\n      </g>\n      <g id=\"expand-more\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n      </g>\n      <g id=\"extension\">\n        <path d=\"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z\">\n        </path>\n      </g>\n      <g id=\"file-download\">\n        <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"></path>\n      </g>\n      \n      <g id=\"fullscreen\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"></path>\n      </g>\n      <g id=\"group\">\n        <path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\">\n        </path>\n      </g>\n      <g id=\"help-outline\">\n        <path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\">\n        </path>\n      </g>\n      <g id=\"info\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\">\n        </path>\n      </g>\n      <g id=\"info-outline\">\n        <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\">\n        </path>\n      </g>\n      <g id=\"insert-drive-file\">\n        <path d=\"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\">\n        </path>\n      </g>\n      <g id=\"location-on\">\n        <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\">\n        </path>\n      </g>\n      <g id=\"mic\">\n        <path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\">\n        </path>\n      </g>\n      <g id=\"more-vert\">\n        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\">\n        </path>\n      </g>\n      <g id=\"open-in-new\">\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\">\n        </path>\n      </g>\n      <g id=\"person\">\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\">\n        </path>\n      </g>\n      <g id=\"print\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\">\n        </path>\n      </g>\n      <g id=\"search\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\">\n        </path>\n      </g>\n      <g id=\"security\">\n        <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z\">\n        </path>\n      </g>\n      \n      <!-- The <g> IDs are exposed as global variables in Vulcanized mode, which\n        conflicts with the \"settings\" namespace of MD Settings. Using an \"_icon\"\n        suffix prevents the naming conflict. -->\n      <g id=\"settings_icon\">\n        <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\">\n        </path>\n      </g>\n      <g id=\"star\">\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"></path>\n      </g>\n      <g id=\"sync\">\n        <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\">\n        </path>\n      </g>\n      <g id=\"videocam\">\n        <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\">\n        </path>\n      </g>\n      <g id=\"warning\">\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"></path>\n      </g>\n    </defs>\n  </svg>\n</iron-iconset-svg>\n<custom-style>\n<style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-blue-50-rgb: 232, 240, 254;  \n    --google-blue-50: rgb(var(--google-blue-50-rgb));\n    --google-blue-200-rgb: 174, 203, 250;  \n    --google-blue-200: rgb(var(--google-blue-200-rgb));\n    --google-blue-600-rgb: 26, 115, 232;  \n    --google-blue-600: rgb(var(--google-blue-600-rgb));\n\n    --google-grey-50-rgb: 248, 249, 250;  \n    --google-grey-50: rgb(var(--google-grey-50-rgb));\n    --google-grey-200-rgb: 232, 234, 237;  \n    --google-grey-200: rgb(var(--google-grey-200-rgb));\n    --google-grey-400-rgb: 189, 193, 198;  \n    --google-grey-400: rgb(var(--google-grey-400-rgb));\n    --google-grey-600-rgb: 128, 134, 139;  \n    --google-grey-600: rgb(var(--google-grey-600-rgb));\n    --google-grey-800-rgb: 60, 64, 67;  \n    --google-grey-800: rgb(var(--google-grey-800-rgb));\n    --google-grey-900-rgb: 32, 33, 36;  \n    --google-grey-900: rgb(var(--google-grey-900-rgb));\n    \n    --google-grey-900-white-4-percent: #292a2d;\n\n    --google-red-600-rgb: 217, 48, 37;  \n    --google-red-600: rgb(var(--google-red-600-rgb));\n\n    --google-yellow-50-rgb: 254, 247, 224;  \n    --google-yellow-50: rgb(var(--google-yellow-50-rgb));\n\n    \n    --google-blue-refresh-100-rgb: 210, 227, 252;  \n    --google-blue-refresh-100: rgb(var(--google-blue-refresh-100-rgb));\n    --google-blue-refresh-300-rgb: 138, 180, 248;  \n    --google-blue-refresh-300: rgb(var(--google-blue-refresh-300-rgb));\n    --google-blue-refresh-500-rgb: 66, 133, 244;  \n    --google-blue-refresh-500: rgb(var(--google-blue-refresh-500-rgb));\n    --google-blue-refresh-700-rgb: 25, 103, 210;  \n    --google-blue-refresh-700: rgb(var(--google-blue-refresh-700-rgb));\n\n    --google-green-refresh-300-rgb: 129, 201, 149;  \n    --google-green-refresh-300: rgb(var(--google-green-refresh-300-rgb));\n    --google-green-refresh-700-rgb: 24, 128, 56;  \n    --google-green-refresh-700: rgb(var(--google-green-refresh-700-rgb));\n\n    --google-grey-refresh-100-rgb: 241, 243, 244;  \n    --google-grey-refresh-100: rgb(var(--google-grey-refresh-100-rgb));\n    --google-grey-refresh-300-rgb: 218, 220, 224;  \n    --google-grey-refresh-300: rgb(var(--google-grey-refresh-300-rgb));\n    --google-grey-refresh-500-rgb: 154, 160, 166;  \n    --google-grey-refresh-500: rgb(var(--google-grey-refresh-500-rgb));\n    --google-grey-refresh-700-rgb: 95, 99, 104;  \n    --google-grey-refresh-700: rgb(var(--google-grey-refresh-700-rgb));\n\n    --google-red-refresh-300-rgb: 242, 139, 130;  \n    --google-red-refresh-300: rgb(var(--google-red-refresh-300-rgb));\n    --google-red-refresh-500-rgb: 234, 67, 53;  \n    --google-red-refresh-500: rgb(var(--google-red-refresh-500-rgb));\n\n    --google-yellow-refresh-300-rgb: 253, 214, 51;  \n    --google-yellow-refresh-300: rgb(var(--google-yellow-refresh-300-rgb));\n\n    --cr-primary-text-color: var(--google-grey-900);\n    --cr-secondary-text-color: var(--google-grey-refresh-700);\n\n    --cr-card-background-color: white;\n    --cr-card-shadow-color-rgb: var(--google-grey-800-rgb);\n\n    --cr-elevation-1: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 1px 3px 1px;\n    --cr-elevation-2: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 2px 6px 2px;\n    --cr-elevation-3: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 4px 8px 3px;\n    --cr-elevation-4: rgba(var(--cr-card-shadow-color-rgb), .3) 0 2px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 6px 10px 4px;\n    --cr-elevation-5: rgba(var(--cr-card-shadow-color-rgb), .3) 0 4px 4px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 8px 12px 6px;\n\n    --cr-card-shadow: var(--cr-elevation-1);\n\n    --cr-checked-color: var(--google-blue-600);\n    --cr-focused-item-color: var(--google-grey-300);\n    --cr-form-field-label-color: var(--google-grey-refresh-700);\n    --cr-hairline-rgb: 0, 0, 0;\n    --cr-link-color: var(--google-blue-700);\n    --cr-menu-background-color: white;\n    --cr-menu-background-focus-color: var(--google-grey-400);\n    --cr-menu-shadow: 0 2px 6px var(--paper-grey-500);\n    --cr-separator-color: rgba(0, 0, 0, .06);\n    --cr-title-text-color: rgb(90, 90, 90);\n    --cr-toggle-color: var(--google-blue-500);\n    --cr-toolbar-background-color: var(--google-blue-700);\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --cr-primary-text-color: var(--google-grey-200);\n      --cr-secondary-text-color: var(--google-grey-refresh-500);\n\n      --cr-card-background-color: var(--google-grey-900-white-4-percent);\n      --cr-card-shadow-color-rgb: 0, 0, 0;\n\n      --cr-checked-color: var(--google-blue-refresh-300);\n      --cr-form-field-label-color: var(--dark-secondary-color);\n      --cr-hairline-rgb: 255, 255, 255;\n      --cr-link-color: var(--google-blue-refresh-300);\n      --cr-menu-background-color: var(--google-grey-900);\n      --cr-menu-background-focus-color: var(--google-grey-refresh-700);\n      --cr-menu-background-sheen: rgba(255, 255, 255, .06);  \n      --cr-menu-shadow: rgba(0, 0, 0, .3) 0 1px 2px 0,\n                        rgba(0, 0, 0, .15) 0 3px 6px 2px;\n      --cr-separator-color: rgba(255, 255, 255, .1);\n      \n      --cr-title-text-color: var(--cr-primary-text-color);\n      --cr-toolbar-background-color: var(--google-grey-900-white-4-percent);\n}\n\n}\n\nhtml {\n  --cr-button-edge-spacing: 12px;\n    --cr-button-height: 32px;\n\n    \n    --cr-controlled-by-spacing: 24px;\n\n    \n    --cr-default-input-max-width: 264px;\n\n    \n    --cr-icon-ripple-size: 36px;\n    --cr-icon-ripple-padding: 8px;\n\n    --cr-icon-size: 20px;\n\n    --cr-icon-button-margin-start: 16px;\n\n    \n    --cr-icon-ripple-margin: calc(var(--cr-icon-ripple-padding) * -1);\n\n    \n    \n    --cr-section-min-height: 48px;\n    --cr-section-two-line-min-height: 64px;\n    --cr-section-three-line-min-height: 84px;\n\n    --cr-section-padding: 20px;\n    --cr-section-vertical-padding: 12px;\n    --cr-section-indent-width: 40px;\n    --cr-section-indent-padding: calc(\n        var(--cr-section-padding) + var(--cr-section-indent-width));\n\n    --cr-section-vertical-margin: 21px;\n\n    --cr-centered-card-max-width: 680px;\n    --cr-centered-card-width-percentage: 0.96;\n\n    --cr-hairline: 1px solid rgba(var(--cr-hairline-rgb), .14);\n\n    --cr-separator-height: 1px;\n    --cr-separator-line: var(--cr-separator-height) solid\n        var(--cr-separator-color);\n\n    --cr-toolbar-overlay-animation-duration: 150ms;\n    --cr-toolbar-height: 56px;\n\n    --cr-container-shadow-height: 6px;\n    --cr-container-shadow-margin: calc(-1 * var(--cr-container-shadow-height));\n\n    --cr-container-shadow-max-opacity: 1;\n\n    \n    --cr-card-border-radius: 4px;\n    --cr-disabled-opacity: .38;\n    --cr-form-field-bottom-spacing: 16px;\n    --cr-form-field-label-font-size: .625rem;\n    --cr-form-field-label-height: 1em;\n    --cr-form-field-label-line-height: 1em;\n}\n\n</style>\n</custom-style>\n<!--_html_template_start_--><custom-style>\n<style css-build=\"shadow\">html {\n  --card-max-width: 960px;\n    --card-padding-side: 32px;\n    --folder-icon-color: #757575;\n    --folder-inactive-color: #5a5a5a;\n    --highlight-color: var(--google-blue-50);\n    --interactive-color: var(--google-blue-500);\n    --iron-icon-height: 20px;\n    --iron-icon-width: 20px;\n    --min-sidebar-width: 256px;\n    --splitter-width: 15px;\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --folder-icon-color: var(--google-grey-refresh-500);\n      --folder-inactive-color: var(--google-grey-refresh-500);\n      --highlight-color: var(--google-blue-refresh-300);\n      --interactive-color: var(--google-blue-refresh-300);\n}\n\n}\n\n</style>\n</custom-style>\n<!--_html_template_end_--><dom-module id=\"paper-spinner-styles\">\n  <template></template>\n</dom-module></head>\n<body>\n  <bookmarks-app></bookmarks-app>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/text_defaults_md.css\">\n  <script type=\"module\" src=\"chrome://bookmarks/bookmarks.js\"></script>\n\n\n<dom-module id=\"cr-hidden-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-icons\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-shared-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"shared-style\"><!--_html_template_start_-->\n<template></template>\n<!--_html_template_end_--></dom-module>\n<dom-module id=\"cr-input-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<iron-a11y-announcer></iron-a11y-announcer></body></html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<!-- saved from url=(0203)chrome://bookmarks/?q=bbbbbbbbbbbbbbbbbb%20v%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%3B%2C%2C%2C%2Cxzz -->\n<html dir=\"ltr\" lang=\"zh\" class=\"\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n  \n  <!--<base href=\"chrome://bookmarks\">--><base href=\".\">\n  <title>书签</title>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/md_colors.css\">\n  <style>\n    html {\n      /* Remove 300ms delay for 'click' event, when using touch interface. */\n      touch-action: manipulation;\n    }\n\n    html,\n    body {\n      background: var(--md-background-color);\n      height: 100%;\n      margin: 0;\n      overflow: hidden;\n    }\n\n    html.loading::before {\n      background-color: var(--md-toolbar-color);\n      border-bottom: var(--md-toolbar-border);\n      box-sizing: border-box;\n      content: '';\n      display: block;\n      height: var(--md-toolbar-height);\n    }\n  </style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">[hidden] {\n  display: none !important;\n}\n\n</style>\n</custom-style>\n<custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --layout_-_display:  flex;;\n\n      --layout-inline_-_display:  inline-flex;;\n\n      --layout-horizontal_-_display:  var(--layout_-_display); --layout-horizontal_-_flex-direction:  row;;\n\n      --layout-horizontal-reverse_-_display:  var(--layout_-_display); --layout-horizontal-reverse_-_flex-direction:  row-reverse;;\n\n      --layout-vertical_-_display:  var(--layout_-_display); --layout-vertical_-_flex-direction:  column;;\n\n      --layout-vertical-reverse_-_display:  var(--layout_-_display); --layout-vertical-reverse_-_flex-direction:  column-reverse;;\n\n      --layout-wrap_-_flex-wrap:  wrap;;\n\n      --layout-wrap-reverse_-_flex-wrap:  wrap-reverse;;\n\n      --layout-flex-auto_-_flex:  1 1 auto;;\n\n      --layout-flex-none_-_flex:  none;;\n\n      --layout-flex_-_flex:  1; --layout-flex_-_flex-basis:  0.000000001px;;\n\n      --layout-flex-2_-_flex:  2;;\n\n      --layout-flex-3_-_flex:  3;;\n\n      --layout-flex-4_-_flex:  4;;\n\n      --layout-flex-5_-_flex:  5;;\n\n      --layout-flex-6_-_flex:  6;;\n\n      --layout-flex-7_-_flex:  7;;\n\n      --layout-flex-8_-_flex:  8;;\n\n      --layout-flex-9_-_flex:  9;;\n\n      --layout-flex-10_-_flex:  10;;\n\n      --layout-flex-11_-_flex:  11;;\n\n      --layout-flex-12_-_flex:  12;;\n\n      \n\n      --layout-start_-_align-items:  flex-start;;\n\n      --layout-center_-_align-items:  center;;\n\n      --layout-end_-_align-items:  flex-end;;\n\n      --layout-baseline_-_align-items:  baseline;;\n\n      \n\n      --layout-start-justified_-_justify-content:  flex-start;;\n\n      --layout-center-justified_-_justify-content:  center;;\n\n      --layout-end-justified_-_justify-content:  flex-end;;\n\n      --layout-around-justified_-_justify-content:  space-around;;\n\n      --layout-justified_-_justify-content:  space-between;;\n\n      --layout-center-center_-_align-items:  var(--layout-center_-_align-items); --layout-center-center_-_justify-content:  var(--layout-center-justified_-_justify-content);;\n\n      \n\n      --layout-self-start_-_align-self:  flex-start;;\n\n      --layout-self-center_-_align-self:  center;;\n\n      --layout-self-end_-_align-self:  flex-end;;\n\n      --layout-self-stretch_-_align-self:  stretch;;\n\n      --layout-self-baseline_-_align-self:  baseline;;\n\n      \n\n      --layout-start-aligned_-_align-content:  flex-start;;\n\n      --layout-end-aligned_-_align-content:  flex-end;;\n\n      --layout-center-aligned_-_align-content:  center;;\n\n      --layout-between-aligned_-_align-content:  space-between;;\n\n      --layout-around-aligned_-_align-content:  space-around;;\n\n      \n\n      --layout-block_-_display:  block;;\n\n      --layout-invisible_-_visibility:  hidden !important;;\n\n      --layout-relative_-_position:  relative;;\n\n      --layout-fit_-_position:  absolute; --layout-fit_-_top:  0; --layout-fit_-_right:  0; --layout-fit_-_bottom:  0; --layout-fit_-_left:  0;;\n\n      --layout-scroll_-_-webkit-overflow-scrolling:  touch; --layout-scroll_-_overflow:  auto;;\n\n      --layout-fullbleed_-_margin:  0; --layout-fullbleed_-_height:  100vh;;\n\n      \n\n      --layout-fixed-top_-_position:  fixed; --layout-fixed-top_-_top:  0; --layout-fixed-top_-_left:  0; --layout-fixed-top_-_right:  0;;\n\n      --layout-fixed-right_-_position:  fixed; --layout-fixed-right_-_top:  0; --layout-fixed-right_-_right:  0; --layout-fixed-right_-_bottom:  0;;\n\n      --layout-fixed-bottom_-_position:  fixed; --layout-fixed-bottom_-_right:  0; --layout-fixed-bottom_-_bottom:  0; --layout-fixed-bottom_-_left:  0;;\n\n      --layout-fixed-left_-_position:  fixed; --layout-fixed-left_-_top:  0; --layout-fixed-left_-_bottom:  0; --layout-fixed-left_-_left:  0;;\n}\n\n</style>\n</custom-style><style>[hidden] { display: none !important; }</style><custom-style>\n  <style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-red-100-rgb: 244, 199, 195;  \n      --google-red-100: rgb(var(--google-red-100-rgb));\n      --google-red-300-rgb: 230, 124, 115;  \n      --google-red-300: rgb(var(--google-red-300-rgb));\n      --google-red-500-rgb: 219, 68, 55;  \n      --google-red-500: rgb(var(--google-red-500-rgb));\n      --google-red-700-rgb: 197, 57, 41;  \n      --google-red-700: rgb(var(--google-red-700-rgb));\n\n      --google-blue-100-rgb: 198, 218, 252;  \n      --google-blue-100: rgb(var(--google-blue-100-rgb));\n      --google-blue-300-rgb: 123, 170, 247;  \n      --google-blue-300: rgb(var(--google-blue-300-rgb));\n      --google-blue-500-rgb: 66, 133, 244;  \n      --google-blue-500: rgb(var(--google-blue-500-rgb));\n      --google-blue-700-rgb: 51, 103, 214;  \n      --google-blue-700: rgb(var(--google-blue-700-rgb));\n\n      --google-green-100-rgb: 183, 225, 205;  \n      --google-green-100: rgb(var(--google-green-100-rgb));\n      --google-green-300-rgb: 87, 187, 138;  \n      --google-green-300: rgb(var(--google-green-300-rgb));\n      --google-green-500-rgb: 15, 157, 88;  \n      --google-green-500: rgb(var(--google-green-500-rgb));\n      --google-green-700-rgb: 11, 128, 67;  \n      --google-green-700: rgb(var(--google-green-700-rgb));\n\n      --google-yellow-100-rgb: 252, 232, 178;  \n      --google-yellow-100: rgb(var(--google-yellow-100-rgb));\n      --google-yellow-300-rgb: 247, 203, 77;  \n      --google-yellow-300: rgb(var(--google-yellow-300-rgb));\n      --google-yellow-500-rgb: 244, 180, 0;  \n      --google-yellow-500: rgb(var(--google-yellow-500-rgb));\n      --google-yellow-700-rgb: 240, 147, 0;  \n      --google-yellow-700: rgb(var(--google-yellow-700-rgb));\n\n      --google-grey-100-rgb: 245, 245, 245;  \n      --google-grey-100: rgb(var(--google-grey-100-rgb));\n      --google-grey-300-rgb: 224, 224, 224;  \n      --google-grey-300: rgb(var(--google-grey-300-rgb));\n      --google-grey-500-rgb: 158, 158, 158;  \n      --google-grey-500: rgb(var(--google-grey-500-rgb));\n      --google-grey-700-rgb: 97, 97, 97;  \n      --google-grey-700: rgb(var(--google-grey-700-rgb));\n\n      \n\n      --paper-red-50: #ffebee;\n      --paper-red-100: #ffcdd2;\n      --paper-red-200: #ef9a9a;\n      --paper-red-300: #e57373;\n      --paper-red-400: #ef5350;\n      --paper-red-500: #f44336;\n      --paper-red-600: #e53935;\n      --paper-red-700: #d32f2f;\n      --paper-red-800: #c62828;\n      --paper-red-900: #b71c1c;\n      --paper-red-a100: #ff8a80;\n      --paper-red-a200: #ff5252;\n      --paper-red-a400: #ff1744;\n      --paper-red-a700: #d50000;\n\n      --paper-light-blue-50: #e1f5fe;\n      --paper-light-blue-100: #b3e5fc;\n      --paper-light-blue-200: #81d4fa;\n      --paper-light-blue-300: #4fc3f7;\n      --paper-light-blue-400: #29b6f6;\n      --paper-light-blue-500: #03a9f4;\n      --paper-light-blue-600: #039be5;\n      --paper-light-blue-700: #0288d1;\n      --paper-light-blue-800: #0277bd;\n      --paper-light-blue-900: #01579b;\n      --paper-light-blue-a100: #80d8ff;\n      --paper-light-blue-a200: #40c4ff;\n      --paper-light-blue-a400: #00b0ff;\n      --paper-light-blue-a700: #0091ea;\n\n      --paper-yellow-50: #fffde7;\n      --paper-yellow-100: #fff9c4;\n      --paper-yellow-200: #fff59d;\n      --paper-yellow-300: #fff176;\n      --paper-yellow-400: #ffee58;\n      --paper-yellow-500: #ffeb3b;\n      --paper-yellow-600: #fdd835;\n      --paper-yellow-700: #fbc02d;\n      --paper-yellow-800: #f9a825;\n      --paper-yellow-900: #f57f17;\n      --paper-yellow-a100: #ffff8d;\n      --paper-yellow-a200: #ffff00;\n      --paper-yellow-a400: #ffea00;\n      --paper-yellow-a700: #ffd600;\n\n      --paper-orange-50: #fff3e0;\n      --paper-orange-100: #ffe0b2;\n      --paper-orange-200: #ffcc80;\n      --paper-orange-300: #ffb74d;\n      --paper-orange-400: #ffa726;\n      --paper-orange-500: #ff9800;\n      --paper-orange-600: #fb8c00;\n      --paper-orange-700: #f57c00;\n      --paper-orange-800: #ef6c00;\n      --paper-orange-900: #e65100;\n      --paper-orange-a100: #ffd180;\n      --paper-orange-a200: #ffab40;\n      --paper-orange-a400: #ff9100;\n      --paper-orange-a700: #ff6500;\n\n      --paper-grey-50: #fafafa;\n      --paper-grey-100: #f5f5f5;\n      --paper-grey-200: #eeeeee;\n      --paper-grey-300: #e0e0e0;\n      --paper-grey-400: #bdbdbd;\n      --paper-grey-500: #9e9e9e;\n      --paper-grey-600: #757575;\n      --paper-grey-700: #616161;\n      --paper-grey-800: #424242;\n      --paper-grey-900: #212121;\n\n      --paper-blue-grey-50: #eceff1;\n      --paper-blue-grey-100: #cfd8dc;\n      --paper-blue-grey-200: #b0bec5;\n      --paper-blue-grey-300: #90a4ae;\n      --paper-blue-grey-400: #78909c;\n      --paper-blue-grey-500: #607d8b;\n      --paper-blue-grey-600: #546e7a;\n      --paper-blue-grey-700: #455a64;\n      --paper-blue-grey-800: #37474f;\n      --paper-blue-grey-900: #263238;\n\n      \n      --dark-divider-opacity: 0.12;\n      --dark-disabled-opacity: 0.38; \n      --dark-secondary-opacity: 0.54;\n      --dark-primary-opacity: 0.87;\n\n      \n      --light-divider-opacity: 0.12;\n      --light-disabled-opacity: 0.3; \n      --light-secondary-opacity: 0.7;\n      --light-primary-opacity: 1.0;\n}\n\n</style>\n</custom-style>\n<iron-iconset-svg name=\"cr20\" size=\"20\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      Keep these in sorted order by id=\"\". See also http://goo.gl/Y1OdAq\n      -->\n      <g id=\"domain\">\n        <path d=\"M2,3 L2,17 L11.8267655,17 L13.7904799,17 L18,17 L18,7 L12,7 L12,3 L2,3 Z M8,13 L10,13 L10,15 L8,15 L8,13 Z M4,13 L6,13 L6,15 L4,15 L4,13 Z M8,9 L10,9 L10,11 L8,11 L8,9 Z M4,9 L6,9 L6,11 L4,11 L4,9 Z M12,9 L16,9 L16,15 L12,15 L12,9 Z M12,11 L14,11 L14,13 L12,13 L12,11 Z M8,5 L10,5 L10,7 L8,7 L8,5 Z M4,5 L6,5 L6,7 L4,7 L4,5 Z\">\n        </path>\n      </g>\n      <g id=\"kite\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.6327 8.00094L10.3199 2L16 8.00094L10.1848 16.8673C10.0995 16.9873 10.0071 17.1074 9.90047 17.2199C9.42417 17.7225 8.79147 18 8.11611 18C7.44076 18 6.80806 17.7225 6.33175 17.2199C5.85545 16.7173 5.59242 16.0497 5.59242 15.3371C5.59242 14.977 5.46445 14.647 5.22275 14.3919C4.98104 14.1369 4.66825 14.0019 4.32701 14.0019H4V12.6667H4.32701C5.00237 12.6667 5.63507 12.9442 6.11137 13.4468C6.58768 13.9494 6.85071 14.617 6.85071 15.3296C6.85071 15.6896 6.97867 16.0197 7.22038 16.2747C7.46209 16.5298 7.77488 16.6648 8.11611 16.6648C8.45735 16.6648 8.77014 16.5223 9.01185 16.2747C9.02396 16.2601 9.03607 16.246 9.04808 16.2319C9.08541 16.1883 9.12176 16.1458 9.15403 16.0947L9.55213 15.4946L4.6327 8.00094ZM10.3199 13.9371L6.53802 8.17116L10.3199 4.1814L14.0963 8.17103L10.3199 13.9371Z\">\n        </path>\n      </g>\n      <g id=\"menu\">\n        <path d=\"M2 4h16v2H2zM2 9h16v2H2zM2 14h16v2H2z\"></path>\n      </g>\n      \n  </defs></svg>\n</iron-iconset-svg>\n<iron-iconset-svg name=\"cr\" size=\"24\" style=\"display: none;\">\n  <svg>\n    <defs>\n      <!--\n      These icons are copied from Polymer's iron-icons and kept in sorted order.\n      See http://goo.gl/Y1OdAq for instructions on adding additional icons.\n      -->\n      <g id=\"account-child-invert\" viewBox=\"0 0 48 48\">\n        <path d=\"M24 4c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6 2.69-6 6-6z\"></path>\n        <path fill=\"none\" d=\"M0 0h48v48H0V0z\"></path>\n        <circle fill=\"none\" cx=\"24\" cy=\"26\" r=\"4\"></circle>\n        <path d=\"M24 18c-6.16 0-13 3.12-13 7.23v11.54c0 2.32 2.19 4.33 5.2 5.63 2.32 1 5.12 1.59 7.8 1.59.66 0 1.33-.06 2-.14v-5.2c-.67.08-1.34.14-2 .14-2.63 0-5.39-.57-7.68-1.55.67-2.12 4.34-3.65 7.68-3.65.86 0 1.75.11 2.6.29 2.79.62 5.2 2.15 5.2 4.04v4.47c3.01-1.31 5.2-3.31 5.2-5.63V25.23C37 21.12 30.16 18 24 18zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z\">\n        </path>\n      </g>\n      <g id=\"add\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n      </g>\n      <g id=\"arrow-back\">\n        <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"></path>\n      </g>\n      <g id=\"arrow-drop-up\">\n        <path d=\"M7 14l5-5 5 5z\">\n      </path></g>\n      <g id=\"arrow-drop-down\">\n        <path d=\"M7 10l5 5 5-5z\"></path>\n      </g>\n      <g id=\"arrow-forward\">\n        <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"></path>\n      </g>\n      <g id=\"arrow-right\">\n        <path d=\"M10 7l5 5-5 5z\"></path>\n      </g>\n      \n      <g id=\"cancel\">\n        <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\">\n        </path>\n      </g>\n      <g id=\"check\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"></path>\n      </g>\n      <g id=\"chevron-left\">\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path>\n      </g>\n      <g id=\"chevron-right\">\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path>\n      </g>\n      <g id=\"clear\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"close\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\">\n        </path>\n      </g>\n      <g id=\"computer\">\n        <path d=\"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\">\n        </path>\n      </g>\n      <g id=\"delete\">\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n      </g>\n      <g id=\"domain\">\n        <path d=\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\">\n        </path>\n      </g>\n      <g id=\"error\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\">\n        </path>\n      </g>\n      <g id=\"error-outline\">\n        <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\">\n        </path>\n      </g>\n      <g id=\"expand-less\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"></path>\n      </g>\n      <g id=\"expand-more\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n      </g>\n      <g id=\"extension\">\n        <path d=\"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z\">\n        </path>\n      </g>\n      <g id=\"file-download\">\n        <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"></path>\n      </g>\n      \n      <g id=\"fullscreen\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"></path>\n      </g>\n      <g id=\"group\">\n        <path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\">\n        </path>\n      </g>\n      <g id=\"help-outline\">\n        <path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\">\n        </path>\n      </g>\n      <g id=\"info\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\">\n        </path>\n      </g>\n      <g id=\"info-outline\">\n        <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\">\n        </path>\n      </g>\n      <g id=\"insert-drive-file\">\n        <path d=\"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\">\n        </path>\n      </g>\n      <g id=\"location-on\">\n        <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\">\n        </path>\n      </g>\n      <g id=\"mic\">\n        <path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\">\n        </path>\n      </g>\n      <g id=\"more-vert\">\n        <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\">\n        </path>\n      </g>\n      <g id=\"open-in-new\">\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\">\n        </path>\n      </g>\n      <g id=\"person\">\n        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\">\n        </path>\n      </g>\n      <g id=\"print\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\">\n        </path>\n      </g>\n      <g id=\"search\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\">\n        </path>\n      </g>\n      <g id=\"security\">\n        <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z\">\n        </path>\n      </g>\n      \n      <!-- The <g> IDs are exposed as global variables in Vulcanized mode, which\n        conflicts with the \"settings\" namespace of MD Settings. Using an \"_icon\"\n        suffix prevents the naming conflict. -->\n      <g id=\"settings_icon\">\n        <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\">\n        </path>\n      </g>\n      <g id=\"star\">\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"></path>\n      </g>\n      <g id=\"sync\">\n        <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\">\n        </path>\n      </g>\n      <g id=\"videocam\">\n        <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\">\n        </path>\n      </g>\n      <g id=\"warning\">\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"></path>\n      </g>\n    </defs>\n  </svg>\n</iron-iconset-svg>\n<custom-style>\n<style is=\"custom-style\" css-build=\"shadow\">html {\n  --google-blue-50-rgb: 232, 240, 254;  \n    --google-blue-50: rgb(var(--google-blue-50-rgb));\n    --google-blue-200-rgb: 174, 203, 250;  \n    --google-blue-200: rgb(var(--google-blue-200-rgb));\n    --google-blue-600-rgb: 26, 115, 232;  \n    --google-blue-600: rgb(var(--google-blue-600-rgb));\n\n    --google-grey-50-rgb: 248, 249, 250;  \n    --google-grey-50: rgb(var(--google-grey-50-rgb));\n    --google-grey-200-rgb: 232, 234, 237;  \n    --google-grey-200: rgb(var(--google-grey-200-rgb));\n    --google-grey-400-rgb: 189, 193, 198;  \n    --google-grey-400: rgb(var(--google-grey-400-rgb));\n    --google-grey-600-rgb: 128, 134, 139;  \n    --google-grey-600: rgb(var(--google-grey-600-rgb));\n    --google-grey-800-rgb: 60, 64, 67;  \n    --google-grey-800: rgb(var(--google-grey-800-rgb));\n    --google-grey-900-rgb: 32, 33, 36;  \n    --google-grey-900: rgb(var(--google-grey-900-rgb));\n    \n    --google-grey-900-white-4-percent: #292a2d;\n\n    --google-red-600-rgb: 217, 48, 37;  \n    --google-red-600: rgb(var(--google-red-600-rgb));\n\n    --google-yellow-50-rgb: 254, 247, 224;  \n    --google-yellow-50: rgb(var(--google-yellow-50-rgb));\n\n    \n    --google-blue-refresh-100-rgb: 210, 227, 252;  \n    --google-blue-refresh-100: rgb(var(--google-blue-refresh-100-rgb));\n    --google-blue-refresh-300-rgb: 138, 180, 248;  \n    --google-blue-refresh-300: rgb(var(--google-blue-refresh-300-rgb));\n    --google-blue-refresh-500-rgb: 66, 133, 244;  \n    --google-blue-refresh-500: rgb(var(--google-blue-refresh-500-rgb));\n    --google-blue-refresh-700-rgb: 25, 103, 210;  \n    --google-blue-refresh-700: rgb(var(--google-blue-refresh-700-rgb));\n\n    --google-green-refresh-300-rgb: 129, 201, 149;  \n    --google-green-refresh-300: rgb(var(--google-green-refresh-300-rgb));\n    --google-green-refresh-700-rgb: 24, 128, 56;  \n    --google-green-refresh-700: rgb(var(--google-green-refresh-700-rgb));\n\n    --google-grey-refresh-100-rgb: 241, 243, 244;  \n    --google-grey-refresh-100: rgb(var(--google-grey-refresh-100-rgb));\n    --google-grey-refresh-300-rgb: 218, 220, 224;  \n    --google-grey-refresh-300: rgb(var(--google-grey-refresh-300-rgb));\n    --google-grey-refresh-500-rgb: 154, 160, 166;  \n    --google-grey-refresh-500: rgb(var(--google-grey-refresh-500-rgb));\n    --google-grey-refresh-700-rgb: 95, 99, 104;  \n    --google-grey-refresh-700: rgb(var(--google-grey-refresh-700-rgb));\n\n    --google-red-refresh-300-rgb: 242, 139, 130;  \n    --google-red-refresh-300: rgb(var(--google-red-refresh-300-rgb));\n    --google-red-refresh-500-rgb: 234, 67, 53;  \n    --google-red-refresh-500: rgb(var(--google-red-refresh-500-rgb));\n\n    --google-yellow-refresh-300-rgb: 253, 214, 51;  \n    --google-yellow-refresh-300: rgb(var(--google-yellow-refresh-300-rgb));\n\n    --cr-primary-text-color: var(--google-grey-900);\n    --cr-secondary-text-color: var(--google-grey-refresh-700);\n\n    --cr-card-background-color: white;\n    --cr-card-shadow-color-rgb: var(--google-grey-800-rgb);\n\n    --cr-elevation-1: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 1px 3px 1px;\n    --cr-elevation-2: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 2px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 2px 6px 2px;\n    --cr-elevation-3: rgba(var(--cr-card-shadow-color-rgb), .3) 0 1px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 4px 8px 3px;\n    --cr-elevation-4: rgba(var(--cr-card-shadow-color-rgb), .3) 0 2px 3px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 6px 10px 4px;\n    --cr-elevation-5: rgba(var(--cr-card-shadow-color-rgb), .3) 0 4px 4px 0,\n                      rgba(var(--cr-card-shadow-color-rgb), .15) 0 8px 12px 6px;\n\n    --cr-card-shadow: var(--cr-elevation-1);\n\n    --cr-checked-color: var(--google-blue-600);\n    --cr-focused-item-color: var(--google-grey-300);\n    --cr-form-field-label-color: var(--google-grey-refresh-700);\n    --cr-hairline-rgb: 0, 0, 0;\n    --cr-link-color: var(--google-blue-700);\n    --cr-menu-background-color: white;\n    --cr-menu-background-focus-color: var(--google-grey-400);\n    --cr-menu-shadow: 0 2px 6px var(--paper-grey-500);\n    --cr-separator-color: rgba(0, 0, 0, .06);\n    --cr-title-text-color: rgb(90, 90, 90);\n    --cr-toggle-color: var(--google-blue-500);\n    --cr-toolbar-background-color: var(--google-blue-700);\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --cr-primary-text-color: var(--google-grey-200);\n      --cr-secondary-text-color: var(--google-grey-refresh-500);\n\n      --cr-card-background-color: var(--google-grey-900-white-4-percent);\n      --cr-card-shadow-color-rgb: 0, 0, 0;\n\n      --cr-checked-color: var(--google-blue-refresh-300);\n      --cr-form-field-label-color: var(--dark-secondary-color);\n      --cr-hairline-rgb: 255, 255, 255;\n      --cr-link-color: var(--google-blue-refresh-300);\n      --cr-menu-background-color: var(--google-grey-900);\n      --cr-menu-background-focus-color: var(--google-grey-refresh-700);\n      --cr-menu-background-sheen: rgba(255, 255, 255, .06);  \n      --cr-menu-shadow: rgba(0, 0, 0, .3) 0 1px 2px 0,\n                        rgba(0, 0, 0, .15) 0 3px 6px 2px;\n      --cr-separator-color: rgba(255, 255, 255, .1);\n      \n      --cr-title-text-color: var(--cr-primary-text-color);\n      --cr-toolbar-background-color: var(--google-grey-900-white-4-percent);\n}\n\n}\n\nhtml {\n  --cr-button-edge-spacing: 12px;\n    --cr-button-height: 32px;\n\n    \n    --cr-controlled-by-spacing: 24px;\n\n    \n    --cr-default-input-max-width: 264px;\n\n    \n    --cr-icon-ripple-size: 36px;\n    --cr-icon-ripple-padding: 8px;\n\n    --cr-icon-size: 20px;\n\n    --cr-icon-button-margin-start: 16px;\n\n    \n    --cr-icon-ripple-margin: calc(var(--cr-icon-ripple-padding) * -1);\n\n    \n    \n    --cr-section-min-height: 48px;\n    --cr-section-two-line-min-height: 64px;\n    --cr-section-three-line-min-height: 84px;\n\n    --cr-section-padding: 20px;\n    --cr-section-vertical-padding: 12px;\n    --cr-section-indent-width: 40px;\n    --cr-section-indent-padding: calc(\n        var(--cr-section-padding) + var(--cr-section-indent-width));\n\n    --cr-section-vertical-margin: 21px;\n\n    --cr-centered-card-max-width: 680px;\n    --cr-centered-card-width-percentage: 0.96;\n\n    --cr-hairline: 1px solid rgba(var(--cr-hairline-rgb), .14);\n\n    --cr-separator-height: 1px;\n    --cr-separator-line: var(--cr-separator-height) solid\n        var(--cr-separator-color);\n\n    --cr-toolbar-overlay-animation-duration: 150ms;\n    --cr-toolbar-height: 56px;\n\n    --cr-container-shadow-height: 6px;\n    --cr-container-shadow-margin: calc(-1 * var(--cr-container-shadow-height));\n\n    --cr-container-shadow-max-opacity: 1;\n\n    \n    --cr-card-border-radius: 4px;\n    --cr-disabled-opacity: .38;\n    --cr-form-field-bottom-spacing: 16px;\n    --cr-form-field-label-font-size: .625rem;\n    --cr-form-field-label-height: 1em;\n    --cr-form-field-label-line-height: 1em;\n}\n\n</style>\n</custom-style>\n<!--_html_template_start_--><custom-style>\n<style css-build=\"shadow\">html {\n  --card-max-width: 960px;\n    --card-padding-side: 32px;\n    --folder-icon-color: #757575;\n    --folder-inactive-color: #5a5a5a;\n    --highlight-color: var(--google-blue-50);\n    --interactive-color: var(--google-blue-500);\n    --iron-icon-height: 20px;\n    --iron-icon-width: 20px;\n    --min-sidebar-width: 256px;\n    --splitter-width: 15px;\n}\n\n@media (prefers-color-scheme: dark) {\nhtml {\n  --folder-icon-color: var(--google-grey-refresh-500);\n      --folder-inactive-color: var(--google-grey-refresh-500);\n      --highlight-color: var(--google-blue-refresh-300);\n      --interactive-color: var(--google-blue-refresh-300);\n}\n\n}\n\n</style>\n</custom-style>\n<!--_html_template_end_--><dom-module id=\"paper-spinner-styles\">\n  <template></template>\n</dom-module></head>\n<body>\n  <bookmarks-app></bookmarks-app>\n  <link rel=\"stylesheet\" href=\"chrome://resources/css/text_defaults_md.css\">\n  <script type=\"module\" src=\"chrome://bookmarks/bookmarks.js\"></script>\n\n\n<dom-module id=\"cr-hidden-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-icons\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"cr-shared-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<dom-module id=\"shared-style\"><!--_html_template_start_-->\n<template></template>\n<!--_html_template_end_--></dom-module>\n<dom-module id=\"cr-input-style\" assetpath=\"chrome://resources/\">\n  <template></template>\n</dom-module>\n<iron-a11y-announcer></iron-a11y-announcer></body></html>"}],"Post":[{"title":"C++ std::priority_queue优先队列详解","date":"2021-03-14T19:57:54.000Z","index_img":"/img/page/cpp.png","_content":"\n## STL priority_queue优先队列\n\n优先队列是一种容器适配器，队列元素要求实现了严格弱排序（Strict Weak Ordering），保证队列顶点（top）元素始终为最大值（最小值）。\n\n优先队列本质上是一种堆，默认最大堆，即每一个父节点的值都比其子节点要大，因此根节点中的元素总是树中的最大值，因此常用于最值的读取。在时间复杂度上，优先队列实现单个元素的增删都是O(log n)，而读取队列顶点则为O(1)\n\n## 接口原型 🔎\n\n如下接口定义可以看出，优先队列的定义包含三个元素：\n\n- 元素类型T；\n- 存储元素的基础容器类型，要求为拥有连续内存分布的[SequenceContainer](https://en.cppreference.com/w/cpp/named_req/SequenceContainer)， STL中满足的就是std::vector and std::deque两种了；\n- 元素比较函数Compare， Compare函数主要用于元素比较，实现严格的弱排序，由于排序，优先队列已经不满足“先进先出”的特性了。\n\n```cpp\ntemplate <class T, class Container = vector<T>,\n  class Compare = less<typename Container::value_type> > class priority_queue;\n```\n\n\n\n## 主要成员函数\n\n所有STL标准库实现的数据结构，都有对应的CRUD（增删改查）接口，形式也基本类似.\n\n![优先队列出入示意图](/img/priority_queues_feat.png)\n\n![成员函数详解表](/img/priority_queue_member_function.png)\n\n\n\n## **Comp函数**\n\ncomp函数默认为使用仿函数`std::less<int>`,表示最大堆 ，这里less是降序，但由于优先队列将top指向了队列尾；同理，`std::greater<T>`,表示最小堆.\n\n```cpp\n  class Compare = less<typename Container::value_type> \n```\n\ncomp函数要求严格弱排序，那么什么是严格弱排序\n\n维基百科给出了如下定义，简言之就是内置类型会通过`!(a < b) && !( b < a ) `来判断ab是否相等，如果判断中携带了`=`如`>=`、`<=`，将导致相等判断逻辑出现错误。\n\n> A Strict Weak Ordering is a Binary Predicate that compares two objects, returning true if the first precedes the second. This predicate must satisfy the standard mathematical definition of a strict weak ordering. The precise requirements are stated below, but what they roughly mean is that a Strict Weak Ordering has to behave the way that \"less than\" behaves: if a is less than b then b is not less than a, if a is less than b and b is less than c then a is less than c, and so on.\n\n另外当元素类型T为自定义类型时，那就需要自定义的comp函数，一般有实现后缀运算`()`函数 和 重载关系运算符 `<`、 `>` 两种方式\n\n```cpp\n#include<queue> // priority_queue头文件\n#include<functional> // 仿函数头文件\n\nstruct Node {\n\t\tint x, y; \n\t\tnode(int x, int y) : x(x), y(y) {} \n};\n \n// <操作符用于仿函数std::less\n// node比较先按照x降序，x相等时，再按照y降序\nbool operator < (Node a, Node b) \n{ \n      if (a.x > b.x) {\n\t\t\t\t\treturn true;\n\t\t\t} else if (a.x == b.x) {\n\t\t\t\t\treturn a.y > b.y; // 严格弱排序\n\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t}      \n}\n\nstd::priority_queue<Node, std::vector<Node>, std::less<Node>> pq; // 大顶堆\n\n// >操作符用于仿函数std::greater\nbool operator > (Node a, Node b)\n{\n    return a.x> b.x;\n}\n\nstd::priority_queue<Node, std::vector<Node>, std::greater<Node>> pq; // 小顶堆\n\n// 自定义后缀操作符\nstruct cmp\n{\n    bool operator()(Node a,Node b)\n    {\n\t\t  return a.x > b.x;\n    }\n};\n\nstd::priority_queue<Node, std::vector<Node>, cmp> pq;\n\n```\n\n## 例子\n\n优先队列作为数据结构中堆的一种具体实现，在leetcode算法题中出现频率较高。比如这题[leetcode 1792. Maximum Average Pass Ratio](https://leetcode.com/problems/maximum-average-pass-ratio/)\n\n在如下解答中，可以发现priority_queue的几个关键接口的使用。\n\n另外算法层面可以看到，通过对优先队列进行增删读元素，使得每次都对最值进行操作，也就保证了每次操作都为最优解。实际上这就是**贪心算法，通过求解每个子问题的最优解，来得到整个问题的最终最优解**。也正因如此，优先队列就常在一些有约束条件下的分配问题。\n\n```cpp\nclass Solution {\npublic:\n    // !!整数除法一定先转double, 注意检查括号\n    // !!乘法注意溢出，少量的除法误差可以容忍\n    #define cal(xy) ((double)(xy[0] +1) / (xy[1] + 1) - (double)(xy[0]) / (xy[1]))\n\n    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {\n        priority_queue<pair<double, int>> qu; // 默认最大堆\n        \n        // 入队列，按照分配1个之后的差值，排序\n        for (int i = 0; i < classes.size(); i++) {            \n            qu.emplace(cal(classes[i]), i); // !!优先使用emplace/emplace_back， 比push/push_back更高效\n        }\n        \n        while (extraStudents--) {\n            auto [diff, i] = qu.top();\n            qu.pop();\n            \n            \n            // 从队列中取出差值最大的一项，即分配给它后结果最大的\n            classes[i][0]++;\n            classes[i][1]++;\n            \n            // 分配后重新塞回队列\n            qu.push({cal(classes[i]), i});\n        }\n        \n        auto maxsum = 0.0;\n        for (auto c : classes) {           \n            //cout << cal(c) << \"-\" << c[0] << \"-\" << c[1] << endl;\n            maxsum += (double)c[0] / c[1];\n        }\n        \n        return maxsum / classes.size();\n    }    \n};\n```\n\n⚠ **Note**: 转载请注明出处","source":"_posts/C-std-priority-queue优先队列详解.md","raw":"---\ntitle: 'C++ std::priority_queue优先队列详解'\ndate: 2021-03-14 20:57:54\ntags: C++\nindex_img: /img/page/cpp.png\n---\n\n## STL priority_queue优先队列\n\n优先队列是一种容器适配器，队列元素要求实现了严格弱排序（Strict Weak Ordering），保证队列顶点（top）元素始终为最大值（最小值）。\n\n优先队列本质上是一种堆，默认最大堆，即每一个父节点的值都比其子节点要大，因此根节点中的元素总是树中的最大值，因此常用于最值的读取。在时间复杂度上，优先队列实现单个元素的增删都是O(log n)，而读取队列顶点则为O(1)\n\n## 接口原型 🔎\n\n如下接口定义可以看出，优先队列的定义包含三个元素：\n\n- 元素类型T；\n- 存储元素的基础容器类型，要求为拥有连续内存分布的[SequenceContainer](https://en.cppreference.com/w/cpp/named_req/SequenceContainer)， STL中满足的就是std::vector and std::deque两种了；\n- 元素比较函数Compare， Compare函数主要用于元素比较，实现严格的弱排序，由于排序，优先队列已经不满足“先进先出”的特性了。\n\n```cpp\ntemplate <class T, class Container = vector<T>,\n  class Compare = less<typename Container::value_type> > class priority_queue;\n```\n\n\n\n## 主要成员函数\n\n所有STL标准库实现的数据结构，都有对应的CRUD（增删改查）接口，形式也基本类似.\n\n![优先队列出入示意图](/img/priority_queues_feat.png)\n\n![成员函数详解表](/img/priority_queue_member_function.png)\n\n\n\n## **Comp函数**\n\ncomp函数默认为使用仿函数`std::less<int>`,表示最大堆 ，这里less是降序，但由于优先队列将top指向了队列尾；同理，`std::greater<T>`,表示最小堆.\n\n```cpp\n  class Compare = less<typename Container::value_type> \n```\n\ncomp函数要求严格弱排序，那么什么是严格弱排序\n\n维基百科给出了如下定义，简言之就是内置类型会通过`!(a < b) && !( b < a ) `来判断ab是否相等，如果判断中携带了`=`如`>=`、`<=`，将导致相等判断逻辑出现错误。\n\n> A Strict Weak Ordering is a Binary Predicate that compares two objects, returning true if the first precedes the second. This predicate must satisfy the standard mathematical definition of a strict weak ordering. The precise requirements are stated below, but what they roughly mean is that a Strict Weak Ordering has to behave the way that \"less than\" behaves: if a is less than b then b is not less than a, if a is less than b and b is less than c then a is less than c, and so on.\n\n另外当元素类型T为自定义类型时，那就需要自定义的comp函数，一般有实现后缀运算`()`函数 和 重载关系运算符 `<`、 `>` 两种方式\n\n```cpp\n#include<queue> // priority_queue头文件\n#include<functional> // 仿函数头文件\n\nstruct Node {\n\t\tint x, y; \n\t\tnode(int x, int y) : x(x), y(y) {} \n};\n \n// <操作符用于仿函数std::less\n// node比较先按照x降序，x相等时，再按照y降序\nbool operator < (Node a, Node b) \n{ \n      if (a.x > b.x) {\n\t\t\t\t\treturn true;\n\t\t\t} else if (a.x == b.x) {\n\t\t\t\t\treturn a.y > b.y; // 严格弱排序\n\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t}      \n}\n\nstd::priority_queue<Node, std::vector<Node>, std::less<Node>> pq; // 大顶堆\n\n// >操作符用于仿函数std::greater\nbool operator > (Node a, Node b)\n{\n    return a.x> b.x;\n}\n\nstd::priority_queue<Node, std::vector<Node>, std::greater<Node>> pq; // 小顶堆\n\n// 自定义后缀操作符\nstruct cmp\n{\n    bool operator()(Node a,Node b)\n    {\n\t\t  return a.x > b.x;\n    }\n};\n\nstd::priority_queue<Node, std::vector<Node>, cmp> pq;\n\n```\n\n## 例子\n\n优先队列作为数据结构中堆的一种具体实现，在leetcode算法题中出现频率较高。比如这题[leetcode 1792. Maximum Average Pass Ratio](https://leetcode.com/problems/maximum-average-pass-ratio/)\n\n在如下解答中，可以发现priority_queue的几个关键接口的使用。\n\n另外算法层面可以看到，通过对优先队列进行增删读元素，使得每次都对最值进行操作，也就保证了每次操作都为最优解。实际上这就是**贪心算法，通过求解每个子问题的最优解，来得到整个问题的最终最优解**。也正因如此，优先队列就常在一些有约束条件下的分配问题。\n\n```cpp\nclass Solution {\npublic:\n    // !!整数除法一定先转double, 注意检查括号\n    // !!乘法注意溢出，少量的除法误差可以容忍\n    #define cal(xy) ((double)(xy[0] +1) / (xy[1] + 1) - (double)(xy[0]) / (xy[1]))\n\n    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {\n        priority_queue<pair<double, int>> qu; // 默认最大堆\n        \n        // 入队列，按照分配1个之后的差值，排序\n        for (int i = 0; i < classes.size(); i++) {            \n            qu.emplace(cal(classes[i]), i); // !!优先使用emplace/emplace_back， 比push/push_back更高效\n        }\n        \n        while (extraStudents--) {\n            auto [diff, i] = qu.top();\n            qu.pop();\n            \n            \n            // 从队列中取出差值最大的一项，即分配给它后结果最大的\n            classes[i][0]++;\n            classes[i][1]++;\n            \n            // 分配后重新塞回队列\n            qu.push({cal(classes[i]), i});\n        }\n        \n        auto maxsum = 0.0;\n        for (auto c : classes) {           \n            //cout << cal(c) << \"-\" << c[0] << \"-\" << c[1] << endl;\n            maxsum += (double)c[0] / c[1];\n        }\n        \n        return maxsum / classes.size();\n    }    \n};\n```\n\n⚠ **Note**: 转载请注明出处","slug":"C-std-priority-queue优先队列详解","published":1,"updated":"2023-03-05T10:42:53.959Z","_id":"cleu1wyur0006s2y29qas34fs","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"STL-priority-queue优先队列\"><a href=\"#STL-priority-queue优先队列\" class=\"headerlink\" title=\"STL priority_queue优先队列\"></a>STL priority_queue优先队列</h2><p>优先队列是一种容器适配器，队列元素要求实现了严格弱排序（Strict Weak Ordering），保证队列顶点（top）元素始终为最大值（最小值）。</p>\n<p>优先队列本质上是一种堆，默认最大堆，即每一个父节点的值都比其子节点要大，因此根节点中的元素总是树中的最大值，因此常用于最值的读取。在时间复杂度上，优先队列实现单个元素的增删都是O(log n)，而读取队列顶点则为O(1)</p>\n<h2 id=\"接口原型-🔎\"><a href=\"#接口原型-🔎\" class=\"headerlink\" title=\"接口原型 🔎\"></a>接口原型 🔎</h2><p>如下接口定义可以看出，优先队列的定义包含三个元素：</p>\n<ul>\n<li>元素类型T；</li>\n<li>存储元素的基础容器类型，要求为拥有连续内存分布的<a href=\"https://en.cppreference.com/w/cpp/named_req/SequenceContainer\">SequenceContainer</a>， STL中满足的就是std::vector and std::deque两种了；</li>\n<li>元素比较函数Compare， Compare函数主要用于元素比较，实现严格的弱排序，由于排序，优先队列已经不满足“先进先出”的特性了。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">T</span>, <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Container</span> = vector&lt;T&gt;,<br>  <span class=\"hljs-keyword\">class</span> Compare = less&lt;<span class=\"hljs-keyword\">typename</span> Container::value_type&gt; &gt; <span class=\"hljs-keyword\">class</span> priority_queue;<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"主要成员函数\"><a href=\"#主要成员函数\" class=\"headerlink\" title=\"主要成员函数\"></a>主要成员函数</h2><p>所有STL标准库实现的数据结构，都有对应的CRUD（增删改查）接口，形式也基本类似.</p>\n<p><img src=\"/img/priority_queues_feat.png\" alt=\"优先队列出入示意图\"></p>\n<p><img src=\"/img/priority_queue_member_function.png\" alt=\"成员函数详解表\"></p>\n<h2 id=\"Comp函数\"><a href=\"#Comp函数\" class=\"headerlink\" title=\"Comp函数\"></a><strong>Comp函数</strong></h2><p>comp函数默认为使用仿函数<code>std::less&lt;int&gt;</code>,表示最大堆 ，这里less是降序，但由于优先队列将top指向了队列尾；同理，<code>std::greater&lt;T&gt;</code>,表示最小堆.</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Compare</span> = less&lt;<span class=\"hljs-keyword\">typename</span> Container::value_type&gt; <br></code></pre></td></tr></table></figure>\n\n<p>comp函数要求严格弱排序，那么什么是严格弱排序</p>\n<p>维基百科给出了如下定义，简言之就是内置类型会通过<code>!(a &lt; b) &amp;&amp; !( b &lt; a ) </code>来判断ab是否相等，如果判断中携带了<code>=</code>如<code>&gt;=</code>、<code>&lt;=</code>，将导致相等判断逻辑出现错误。</p>\n<blockquote>\n<p>A Strict Weak Ordering is a Binary Predicate that compares two objects, returning true if the first precedes the second. This predicate must satisfy the standard mathematical definition of a strict weak ordering. The precise requirements are stated below, but what they roughly mean is that a Strict Weak Ordering has to behave the way that “less than” behaves: if a is less than b then b is not less than a, if a is less than b and b is less than c then a is less than c, and so on.</p>\n</blockquote>\n<p>另外当元素类型T为自定义类型时，那就需要自定义的comp函数，一般有实现后缀运算<code>()</code>函数 和 重载关系运算符 <code>&lt;</code>、 <code>&gt;</code> 两种方式</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;queue&gt;</span> <span class=\"hljs-comment\">// priority_queue头文件</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;functional&gt;</span> <span class=\"hljs-comment\">// 仿函数头文件</span></span><br><br><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Node</span> &#123;<br>\t\t<span class=\"hljs-type\">int</span> x, y; <br>\t\t<span class=\"hljs-built_in\">node</span>(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y) : <span class=\"hljs-built_in\">x</span>(x), <span class=\"hljs-built_in\">y</span>(y) &#123;&#125; <br>&#125;;<br> <br><span class=\"hljs-comment\">// &lt;操作符用于仿函数std::less</span><br><span class=\"hljs-comment\">// node比较先按照x降序，x相等时，再按照y降序</span><br><span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &lt; (Node a, Node b) <br>&#123; <br>      <span class=\"hljs-keyword\">if</span> (a.x &gt; b.x) &#123;<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a.x == b.x) &#123;<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> a.y &gt; b.y; <span class=\"hljs-comment\">// 严格弱排序</span><br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>\t\t\t&#125;      <br>&#125;<br><br>std::priority_queue&lt;Node, std::vector&lt;Node&gt;, std::less&lt;Node&gt;&gt; pq; <span class=\"hljs-comment\">// 大顶堆</span><br><br><span class=\"hljs-comment\">// &gt;操作符用于仿函数std::greater</span><br><span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &gt; (Node a, Node b)<br>&#123;<br>    <span class=\"hljs-keyword\">return</span> a.x&gt; b.x;<br>&#125;<br><br>std::priority_queue&lt;Node, std::vector&lt;Node&gt;, std::greater&lt;Node&gt;&gt; pq; <span class=\"hljs-comment\">// 小顶堆</span><br><br><span class=\"hljs-comment\">// 自定义后缀操作符</span><br><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">cmp</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">operator</span><span class=\"hljs-params\">()</span><span class=\"hljs-params\">(Node a,Node b)</span></span><br><span class=\"hljs-function\">    </span>&#123;<br>\t\t  <span class=\"hljs-keyword\">return</span> a.x &gt; b.x;<br>    &#125;<br>&#125;;<br><br>std::priority_queue&lt;Node, std::vector&lt;Node&gt;, cmp&gt; pq;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><p>优先队列作为数据结构中堆的一种具体实现，在leetcode算法题中出现频率较高。比如这题<a href=\"https://leetcode.com/problems/maximum-average-pass-ratio/\">leetcode 1792. Maximum Average Pass Ratio</a></p>\n<p>在如下解答中，可以发现priority_queue的几个关键接口的使用。</p>\n<p>另外算法层面可以看到，通过对优先队列进行增删读元素，使得每次都对最值进行操作，也就保证了每次操作都为最优解。实际上这就是<strong>贪心算法，通过求解每个子问题的最优解，来得到整个问题的最终最优解</strong>。也正因如此，优先队列就常在一些有约束条件下的分配问题。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Solution</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-comment\">// !!整数除法一定先转double, 注意检查括号</span><br>    <span class=\"hljs-comment\">// !!乘法注意溢出，少量的除法误差可以容忍</span><br>    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> cal(xy) ((double)(xy[0] +1) / (xy[1] + 1) - (double)(xy[0]) / (xy[1]))</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">maxAverageRatio</span><span class=\"hljs-params\">(vector&lt;vector&lt;<span class=\"hljs-type\">int</span>&gt;&gt;&amp; classes, <span class=\"hljs-type\">int</span> extraStudents)</span> </span>&#123;<br>        priority_queue&lt;pair&lt;<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">int</span>&gt;&gt; qu; <span class=\"hljs-comment\">// 默认最大堆</span><br>        <br>        <span class=\"hljs-comment\">// 入队列，按照分配1个之后的差值，排序</span><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; classes.<span class=\"hljs-built_in\">size</span>(); i++) &#123;            <br>            qu.<span class=\"hljs-built_in\">emplace</span>(<span class=\"hljs-built_in\">cal</span>(classes[i]), i); <span class=\"hljs-comment\">// !!优先使用emplace/emplace_back， 比push/push_back更高效</span><br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">while</span> (extraStudents--) &#123;<br>            <span class=\"hljs-keyword\">auto</span> [diff, i] = qu.<span class=\"hljs-built_in\">top</span>();<br>            qu.<span class=\"hljs-built_in\">pop</span>();<br>            <br>            <br>            <span class=\"hljs-comment\">// 从队列中取出差值最大的一项，即分配给它后结果最大的</span><br>            classes[i][<span class=\"hljs-number\">0</span>]++;<br>            classes[i][<span class=\"hljs-number\">1</span>]++;<br>            <br>            <span class=\"hljs-comment\">// 分配后重新塞回队列</span><br>            qu.<span class=\"hljs-built_in\">push</span>(&#123;<span class=\"hljs-built_in\">cal</span>(classes[i]), i&#125;);<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">auto</span> maxsum = <span class=\"hljs-number\">0.0</span>;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">auto</span> c : classes) &#123;           <br>            <span class=\"hljs-comment\">//cout &lt;&lt; cal(c) &lt;&lt; &quot;-&quot; &lt;&lt; c[0] &lt;&lt; &quot;-&quot; &lt;&lt; c[1] &lt;&lt; endl;</span><br>            maxsum += (<span class=\"hljs-type\">double</span>)c[<span class=\"hljs-number\">0</span>] / c[<span class=\"hljs-number\">1</span>];<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">return</span> maxsum / classes.<span class=\"hljs-built_in\">size</span>();<br>    &#125;    <br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"STL-priority-queue优先队列\"><a href=\"#STL-priority-queue优先队列\" class=\"headerlink\" title=\"STL priority_queue优先队列\"></a>STL priority_queue优先队列</h2><p>优先队列是一种容器适配器，队列元素要求实现了严格弱排序（Strict Weak Ordering），保证队列顶点（top）元素始终为最大值（最小值）。</p>\n<p>优先队列本质上是一种堆，默认最大堆，即每一个父节点的值都比其子节点要大，因此根节点中的元素总是树中的最大值，因此常用于最值的读取。在时间复杂度上，优先队列实现单个元素的增删都是O(log n)，而读取队列顶点则为O(1)</p>\n<h2 id=\"接口原型-🔎\"><a href=\"#接口原型-🔎\" class=\"headerlink\" title=\"接口原型 🔎\"></a>接口原型 🔎</h2><p>如下接口定义可以看出，优先队列的定义包含三个元素：</p>\n<ul>\n<li>元素类型T；</li>\n<li>存储元素的基础容器类型，要求为拥有连续内存分布的<a href=\"https://en.cppreference.com/w/cpp/named_req/SequenceContainer\">SequenceContainer</a>， STL中满足的就是std::vector and std::deque两种了；</li>\n<li>元素比较函数Compare， Compare函数主要用于元素比较，实现严格的弱排序，由于排序，优先队列已经不满足“先进先出”的特性了。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">T</span>, <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Container</span> = vector&lt;T&gt;,<br>  <span class=\"hljs-keyword\">class</span> Compare = less&lt;<span class=\"hljs-keyword\">typename</span> Container::value_type&gt; &gt; <span class=\"hljs-keyword\">class</span> priority_queue;<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"主要成员函数\"><a href=\"#主要成员函数\" class=\"headerlink\" title=\"主要成员函数\"></a>主要成员函数</h2><p>所有STL标准库实现的数据结构，都有对应的CRUD（增删改查）接口，形式也基本类似.</p>\n<p><img src=\"/img/priority_queues_feat.png\" alt=\"优先队列出入示意图\"></p>\n<p><img src=\"/img/priority_queue_member_function.png\" alt=\"成员函数详解表\"></p>\n<h2 id=\"Comp函数\"><a href=\"#Comp函数\" class=\"headerlink\" title=\"Comp函数\"></a><strong>Comp函数</strong></h2><p>comp函数默认为使用仿函数<code>std::less&lt;int&gt;</code>,表示最大堆 ，这里less是降序，但由于优先队列将top指向了队列尾；同理，<code>std::greater&lt;T&gt;</code>,表示最小堆.</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Compare</span> = less&lt;<span class=\"hljs-keyword\">typename</span> Container::value_type&gt; <br></code></pre></td></tr></table></figure>\n\n<p>comp函数要求严格弱排序，那么什么是严格弱排序</p>\n<p>维基百科给出了如下定义，简言之就是内置类型会通过<code>!(a &lt; b) &amp;&amp; !( b &lt; a ) </code>来判断ab是否相等，如果判断中携带了<code>=</code>如<code>&gt;=</code>、<code>&lt;=</code>，将导致相等判断逻辑出现错误。</p>\n<blockquote>\n<p>A Strict Weak Ordering is a Binary Predicate that compares two objects, returning true if the first precedes the second. This predicate must satisfy the standard mathematical definition of a strict weak ordering. The precise requirements are stated below, but what they roughly mean is that a Strict Weak Ordering has to behave the way that “less than” behaves: if a is less than b then b is not less than a, if a is less than b and b is less than c then a is less than c, and so on.</p>\n</blockquote>\n<p>另外当元素类型T为自定义类型时，那就需要自定义的comp函数，一般有实现后缀运算<code>()</code>函数 和 重载关系运算符 <code>&lt;</code>、 <code>&gt;</code> 两种方式</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;queue&gt;</span> <span class=\"hljs-comment\">// priority_queue头文件</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span><span class=\"hljs-string\">&lt;functional&gt;</span> <span class=\"hljs-comment\">// 仿函数头文件</span></span><br><br><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Node</span> &#123;<br>\t\t<span class=\"hljs-type\">int</span> x, y; <br>\t\t<span class=\"hljs-built_in\">node</span>(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y) : <span class=\"hljs-built_in\">x</span>(x), <span class=\"hljs-built_in\">y</span>(y) &#123;&#125; <br>&#125;;<br> <br><span class=\"hljs-comment\">// &lt;操作符用于仿函数std::less</span><br><span class=\"hljs-comment\">// node比较先按照x降序，x相等时，再按照y降序</span><br><span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &lt; (Node a, Node b) <br>&#123; <br>      <span class=\"hljs-keyword\">if</span> (a.x &gt; b.x) &#123;<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a.x == b.x) &#123;<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> a.y &gt; b.y; <span class=\"hljs-comment\">// 严格弱排序</span><br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>\t\t\t&#125;      <br>&#125;<br><br>std::priority_queue&lt;Node, std::vector&lt;Node&gt;, std::less&lt;Node&gt;&gt; pq; <span class=\"hljs-comment\">// 大顶堆</span><br><br><span class=\"hljs-comment\">// &gt;操作符用于仿函数std::greater</span><br><span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &gt; (Node a, Node b)<br>&#123;<br>    <span class=\"hljs-keyword\">return</span> a.x&gt; b.x;<br>&#125;<br><br>std::priority_queue&lt;Node, std::vector&lt;Node&gt;, std::greater&lt;Node&gt;&gt; pq; <span class=\"hljs-comment\">// 小顶堆</span><br><br><span class=\"hljs-comment\">// 自定义后缀操作符</span><br><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">cmp</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">operator</span><span class=\"hljs-params\">()</span><span class=\"hljs-params\">(Node a,Node b)</span></span><br><span class=\"hljs-function\">    </span>&#123;<br>\t\t  <span class=\"hljs-keyword\">return</span> a.x &gt; b.x;<br>    &#125;<br>&#125;;<br><br>std::priority_queue&lt;Node, std::vector&lt;Node&gt;, cmp&gt; pq;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><p>优先队列作为数据结构中堆的一种具体实现，在leetcode算法题中出现频率较高。比如这题<a href=\"https://leetcode.com/problems/maximum-average-pass-ratio/\">leetcode 1792. Maximum Average Pass Ratio</a></p>\n<p>在如下解答中，可以发现priority_queue的几个关键接口的使用。</p>\n<p>另外算法层面可以看到，通过对优先队列进行增删读元素，使得每次都对最值进行操作，也就保证了每次操作都为最优解。实际上这就是<strong>贪心算法，通过求解每个子问题的最优解，来得到整个问题的最终最优解</strong>。也正因如此，优先队列就常在一些有约束条件下的分配问题。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Solution</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-comment\">// !!整数除法一定先转double, 注意检查括号</span><br>    <span class=\"hljs-comment\">// !!乘法注意溢出，少量的除法误差可以容忍</span><br>    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> cal(xy) ((double)(xy[0] +1) / (xy[1] + 1) - (double)(xy[0]) / (xy[1]))</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">maxAverageRatio</span><span class=\"hljs-params\">(vector&lt;vector&lt;<span class=\"hljs-type\">int</span>&gt;&gt;&amp; classes, <span class=\"hljs-type\">int</span> extraStudents)</span> </span>&#123;<br>        priority_queue&lt;pair&lt;<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">int</span>&gt;&gt; qu; <span class=\"hljs-comment\">// 默认最大堆</span><br>        <br>        <span class=\"hljs-comment\">// 入队列，按照分配1个之后的差值，排序</span><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; classes.<span class=\"hljs-built_in\">size</span>(); i++) &#123;            <br>            qu.<span class=\"hljs-built_in\">emplace</span>(<span class=\"hljs-built_in\">cal</span>(classes[i]), i); <span class=\"hljs-comment\">// !!优先使用emplace/emplace_back， 比push/push_back更高效</span><br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">while</span> (extraStudents--) &#123;<br>            <span class=\"hljs-keyword\">auto</span> [diff, i] = qu.<span class=\"hljs-built_in\">top</span>();<br>            qu.<span class=\"hljs-built_in\">pop</span>();<br>            <br>            <br>            <span class=\"hljs-comment\">// 从队列中取出差值最大的一项，即分配给它后结果最大的</span><br>            classes[i][<span class=\"hljs-number\">0</span>]++;<br>            classes[i][<span class=\"hljs-number\">1</span>]++;<br>            <br>            <span class=\"hljs-comment\">// 分配后重新塞回队列</span><br>            qu.<span class=\"hljs-built_in\">push</span>(&#123;<span class=\"hljs-built_in\">cal</span>(classes[i]), i&#125;);<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">auto</span> maxsum = <span class=\"hljs-number\">0.0</span>;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">auto</span> c : classes) &#123;           <br>            <span class=\"hljs-comment\">//cout &lt;&lt; cal(c) &lt;&lt; &quot;-&quot; &lt;&lt; c[0] &lt;&lt; &quot;-&quot; &lt;&lt; c[1] &lt;&lt; endl;</span><br>            maxsum += (<span class=\"hljs-type\">double</span>)c[<span class=\"hljs-number\">0</span>] / c[<span class=\"hljs-number\">1</span>];<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">return</span> maxsum / classes.<span class=\"hljs-built_in\">size</span>();<br>    &#125;    <br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n"},{"title":"高频VIM命令","date":"2021-11-15T10:09:13.000Z","index_img":"/img/page/vim.png","_content":"\n## VIM命令\n\n#### 查找\n\n+ normal模式下用/\n+ 用n查找下一个，N查找上一个\n+ 尾部加\\c表示大小写不敏感，\\C敏感，如/foll\\C\n+ 按下*，可查找光标所在单词（前后有空白），g\\*则可查光标所在字符序列\n\n#### 替换\n\n+ ```\n  :{作用范围}s/{目标}/{替换}/{替换标志}\n  ```\n\n+ ```\n  :%s/foo/bar/gc \n  # %表示作用全文\n  替换标志中g表示替换所有，没有表示只替换第一个\n  替换标志中c表示需确认\n  ```\n\n  \n\n#### 复制粘贴\n\n+ **从windows复制到vim**，需先按a/i/insert键进入插入模式，再右键粘贴，否则在命令模式下将识别为vim命令直至遇到i/a\n\n+ **复制选中区**，光标在复制开始地方按v进入可视模式，结束地方按y复制，直待粘贴处按p粘贴\n\n+ 复制整行，yy\n\n+ 剪切整行，dd\n\n+ 粘贴,p， 粘贴在光标前为P\n\n  \n\n#### 光标跳转\n\n+ 文件首： gg\n+ 文件尾： shift + g\n+ 文件指定行： 行号（命令行模式）\n+ 行首： home键\n+ 行尾： end键\n\n\n\n#### 查历史命令\n\n窗口中ctrl + R，输入关键词如`git commit`，将出现以该关键词为首的历史命令，通过多次ctrl + R来选择切换历史命令，然后通过右箭头选中命令\n\n![历史命令](/img/linux-cmd.png)\n\n#### tab设置\n\n+ 显示tab  命令模式下`set list`\n\n+ 设置tab为4空格，且自动缩进， /etc/vimrc中添加\n\n  ```\n  set ts=4\n  set softtabstop=4\n  set shiftwidth=4\n  set expandtab\n  set autoindent\n  ```\n\n  ","source":"_posts/高频VIM命令.md","raw":"---\ntitle: 高频VIM命令\ndate: 2021-11-15 11:09:13\ntags: Linux\nindex_img: /img/page/vim.png\n---\n\n## VIM命令\n\n#### 查找\n\n+ normal模式下用/\n+ 用n查找下一个，N查找上一个\n+ 尾部加\\c表示大小写不敏感，\\C敏感，如/foll\\C\n+ 按下*，可查找光标所在单词（前后有空白），g\\*则可查光标所在字符序列\n\n#### 替换\n\n+ ```\n  :{作用范围}s/{目标}/{替换}/{替换标志}\n  ```\n\n+ ```\n  :%s/foo/bar/gc \n  # %表示作用全文\n  替换标志中g表示替换所有，没有表示只替换第一个\n  替换标志中c表示需确认\n  ```\n\n  \n\n#### 复制粘贴\n\n+ **从windows复制到vim**，需先按a/i/insert键进入插入模式，再右键粘贴，否则在命令模式下将识别为vim命令直至遇到i/a\n\n+ **复制选中区**，光标在复制开始地方按v进入可视模式，结束地方按y复制，直待粘贴处按p粘贴\n\n+ 复制整行，yy\n\n+ 剪切整行，dd\n\n+ 粘贴,p， 粘贴在光标前为P\n\n  \n\n#### 光标跳转\n\n+ 文件首： gg\n+ 文件尾： shift + g\n+ 文件指定行： 行号（命令行模式）\n+ 行首： home键\n+ 行尾： end键\n\n\n\n#### 查历史命令\n\n窗口中ctrl + R，输入关键词如`git commit`，将出现以该关键词为首的历史命令，通过多次ctrl + R来选择切换历史命令，然后通过右箭头选中命令\n\n![历史命令](/img/linux-cmd.png)\n\n#### tab设置\n\n+ 显示tab  命令模式下`set list`\n\n+ 设置tab为4空格，且自动缩进， /etc/vimrc中添加\n\n  ```\n  set ts=4\n  set softtabstop=4\n  set shiftwidth=4\n  set expandtab\n  set autoindent\n  ```\n\n  ","slug":"高频VIM命令","published":1,"updated":"2023-03-04T14:33:03.610Z","_id":"cleu1wyuw000is2y26hwza8k8","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"VIM命令\"><a href=\"#VIM命令\" class=\"headerlink\" title=\"VIM命令\"></a>VIM命令</h2><h4 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h4><ul>\n<li>normal模式下用&#x2F;</li>\n<li>用n查找下一个，N查找上一个</li>\n<li>尾部加\\c表示大小写不敏感，\\C敏感，如&#x2F;foll\\C</li>\n<li>按下*，可查找光标所在单词（前后有空白），g*则可查光标所在字符序列</li>\n</ul>\n<h4 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h4><ul>\n<li>&#96;&#96;&#96;<br>:{作用范围}s&#x2F;{目标}&#x2F;{替换}&#x2F;{替换标志}<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><br>+ ```<br>  <span class=\"hljs-symbol\">:%s/foo/bar/gc</span> <br>  <span class=\"hljs-comment\"># %表示作用全文</span><br>  替换标志中g表示替换所有，没有表示只替换第一个<br>  替换标志中c表示需确认<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"复制粘贴\"><a href=\"#复制粘贴\" class=\"headerlink\" title=\"复制粘贴\"></a>复制粘贴</h4><ul>\n<li><p><strong>从windows复制到vim</strong>，需先按a&#x2F;i&#x2F;insert键进入插入模式，再右键粘贴，否则在命令模式下将识别为vim命令直至遇到i&#x2F;a</p>\n</li>\n<li><p><strong>复制选中区</strong>，光标在复制开始地方按v进入可视模式，结束地方按y复制，直待粘贴处按p粘贴</p>\n</li>\n<li><p>复制整行，yy</p>\n</li>\n<li><p>剪切整行，dd</p>\n</li>\n<li><p>粘贴,p， 粘贴在光标前为P</p>\n</li>\n</ul>\n<h4 id=\"光标跳转\"><a href=\"#光标跳转\" class=\"headerlink\" title=\"光标跳转\"></a>光标跳转</h4><ul>\n<li>文件首： gg</li>\n<li>文件尾： shift + g</li>\n<li>文件指定行： 行号（命令行模式）</li>\n<li>行首： home键</li>\n<li>行尾： end键</li>\n</ul>\n<h4 id=\"查历史命令\"><a href=\"#查历史命令\" class=\"headerlink\" title=\"查历史命令\"></a>查历史命令</h4><p>窗口中ctrl + R，输入关键词如<code>git commit</code>，将出现以该关键词为首的历史命令，通过多次ctrl + R来选择切换历史命令，然后通过右箭头选中命令</p>\n<p><img src=\"/img/linux-cmd.png\" alt=\"历史命令\"></p>\n<h4 id=\"tab设置\"><a href=\"#tab设置\" class=\"headerlink\" title=\"tab设置\"></a>tab设置</h4><ul>\n<li><p>显示tab  命令模式下<code>set list</code></p>\n</li>\n<li><p>设置tab为4空格，且自动缩进， &#x2F;etc&#x2F;vimrc中添加</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">ts</span>=4<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">softtabstop</span>=4<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">shiftwidth</span>=4<br><span class=\"hljs-built_in\">set</span> expandtab<br><span class=\"hljs-built_in\">set</span> autoindent<br></code></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"VIM命令\"><a href=\"#VIM命令\" class=\"headerlink\" title=\"VIM命令\"></a>VIM命令</h2><h4 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h4><ul>\n<li>normal模式下用&#x2F;</li>\n<li>用n查找下一个，N查找上一个</li>\n<li>尾部加\\c表示大小写不敏感，\\C敏感，如&#x2F;foll\\C</li>\n<li>按下*，可查找光标所在单词（前后有空白），g*则可查光标所在字符序列</li>\n</ul>\n<h4 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h4><ul>\n<li>&#96;&#96;&#96;<br>:{作用范围}s&#x2F;{目标}&#x2F;{替换}&#x2F;{替换标志}<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><br>+ ```<br>  <span class=\"hljs-symbol\">:%s/foo/bar/gc</span> <br>  <span class=\"hljs-comment\"># %表示作用全文</span><br>  替换标志中g表示替换所有，没有表示只替换第一个<br>  替换标志中c表示需确认<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"复制粘贴\"><a href=\"#复制粘贴\" class=\"headerlink\" title=\"复制粘贴\"></a>复制粘贴</h4><ul>\n<li><p><strong>从windows复制到vim</strong>，需先按a&#x2F;i&#x2F;insert键进入插入模式，再右键粘贴，否则在命令模式下将识别为vim命令直至遇到i&#x2F;a</p>\n</li>\n<li><p><strong>复制选中区</strong>，光标在复制开始地方按v进入可视模式，结束地方按y复制，直待粘贴处按p粘贴</p>\n</li>\n<li><p>复制整行，yy</p>\n</li>\n<li><p>剪切整行，dd</p>\n</li>\n<li><p>粘贴,p， 粘贴在光标前为P</p>\n</li>\n</ul>\n<h4 id=\"光标跳转\"><a href=\"#光标跳转\" class=\"headerlink\" title=\"光标跳转\"></a>光标跳转</h4><ul>\n<li>文件首： gg</li>\n<li>文件尾： shift + g</li>\n<li>文件指定行： 行号（命令行模式）</li>\n<li>行首： home键</li>\n<li>行尾： end键</li>\n</ul>\n<h4 id=\"查历史命令\"><a href=\"#查历史命令\" class=\"headerlink\" title=\"查历史命令\"></a>查历史命令</h4><p>窗口中ctrl + R，输入关键词如<code>git commit</code>，将出现以该关键词为首的历史命令，通过多次ctrl + R来选择切换历史命令，然后通过右箭头选中命令</p>\n<p><img src=\"/img/linux-cmd.png\" alt=\"历史命令\"></p>\n<h4 id=\"tab设置\"><a href=\"#tab设置\" class=\"headerlink\" title=\"tab设置\"></a>tab设置</h4><ul>\n<li><p>显示tab  命令模式下<code>set list</code></p>\n</li>\n<li><p>设置tab为4空格，且自动缩进， &#x2F;etc&#x2F;vimrc中添加</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">ts</span>=4<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">softtabstop</span>=4<br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">shiftwidth</span>=4<br><span class=\"hljs-built_in\">set</span> expandtab<br><span class=\"hljs-built_in\">set</span> autoindent<br></code></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"shell语法总结（2）","date":"2022-07-11T10:15:17.000Z","index_img":"/img/page/shell.png","_content":"\n## Shell语法\n\n#### 运行\n\n+ `./aa.sh`\n  + 打开一个**subshell**去读取、执行aa.sh，而aa.sh**需要有执行权限**\n  + 依赖首行明确解释器类型，否则就不在subshell中执行\n  + 通知系统在当前目录找aa.sh,而直接执行aa.sh`，linux 系统将在 PATH里的目录里找aa.sh\n+ `sh/bash aa.sh`  \n  + 打开一个**subshell**运行解释器去读取、执行aa.sh，文件名作为参数，**无需执行权限**\n  + 无需在首行写类似`#!/bin/bash*`来明确解释器\n+ `source aa.sh`\n  + **当前shell内**读取、执行aa.sh，会保留和改变当前shell中的变量，**无需执行权限**\n  + soure可以简化为点号\".\"，推荐点号\n\n#### 变量\n\n+ \\$aa与\\${aa}没有区别，但是{}可以用来明确变量边界，同时支持拼接\n\n+ `readonly aa` 设置变量aa为只读\n\n+ `unset aa` 删除变量aa, 不能删只读变量\n\n+ shell变量\n\n  + ```\n    $$ // shell本身PID\n    $* $@  参数列表（不包括脚本文件名）\n    $# 参数列表中参数个数\n    $0 脚本文件名\n    $n 第n个参数\n    ```\n\n#### 字符串\n\n+ 单引号里的任何字符都会原样输出，因而变量是无效的\n+ 字符串长度 `${#string}`\n+ 截取子串 `${string:1:4}` 截取string位置1开始的4个字符\n\n#### 数组\n\n```shell\narray_name=(value0 value1 value2 value3) #不限定长度，下标从0开始，空格分割\narray_name[n]=valuen \n${array_name[@]} # 使用 @ 符号可以获取数组中的所有元素\nlength=${#array_name[@]} # 取得数组元素的个数\nlengthn=${#array_name[n]} # 取得数组单个元素的长度\n```\n\n\n\n#### 多行注释\n\n+ ```shell\n  : <<'COMMENT'  \n  something\n  COMMENT\n  或者\n  : <<! \n  something\n  !\n  ```\n\n#### Shell编码\n\n#### cd安全\n\n+ cd可能由于错误路径、无权限等问题而失败，一旦失败后续操作将在错误目录上继续执行，引发误操作。\n+ 通过添加错误判断并exit方式避免错误操作。\n\n```shell\ncd foo || exit // exit返回cd错误码\ncd foo || { echo \"Failure\"; exit 1; }\n```\n\n#### 路径\n\n进入当前脚本路径\n\n```shell\n$(cd \"$(dirname $0)\";pwd)\n```\n\n进入当前函数执行路径，如脚本A调用脚本B，在B中执行则得到B的路径\n\n```shell\n$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\n```\n\n\n\n## 静波代码检视\n\n#### 离线检测\n\n```shell\napt-get install shellcheck\nshellcheck file.sh\n```\n\n#### 在线检测\n\n+ 在线检测https://www.shellcheck.net/，贴入代码，自动检测\n\n+ 注意加上 `#!/bin/bash`，否则报错\n\n![shellcheck示意](/img/shell-check.png)","source":"_posts/shell语法总结.md","raw":"---\ntitle: shell语法总结（2）\ndate: 2022-07-11 12:15:17\ntags: Linux\nindex_img: /img/page/shell.png\n---\n\n## Shell语法\n\n#### 运行\n\n+ `./aa.sh`\n  + 打开一个**subshell**去读取、执行aa.sh，而aa.sh**需要有执行权限**\n  + 依赖首行明确解释器类型，否则就不在subshell中执行\n  + 通知系统在当前目录找aa.sh,而直接执行aa.sh`，linux 系统将在 PATH里的目录里找aa.sh\n+ `sh/bash aa.sh`  \n  + 打开一个**subshell**运行解释器去读取、执行aa.sh，文件名作为参数，**无需执行权限**\n  + 无需在首行写类似`#!/bin/bash*`来明确解释器\n+ `source aa.sh`\n  + **当前shell内**读取、执行aa.sh，会保留和改变当前shell中的变量，**无需执行权限**\n  + soure可以简化为点号\".\"，推荐点号\n\n#### 变量\n\n+ \\$aa与\\${aa}没有区别，但是{}可以用来明确变量边界，同时支持拼接\n\n+ `readonly aa` 设置变量aa为只读\n\n+ `unset aa` 删除变量aa, 不能删只读变量\n\n+ shell变量\n\n  + ```\n    $$ // shell本身PID\n    $* $@  参数列表（不包括脚本文件名）\n    $# 参数列表中参数个数\n    $0 脚本文件名\n    $n 第n个参数\n    ```\n\n#### 字符串\n\n+ 单引号里的任何字符都会原样输出，因而变量是无效的\n+ 字符串长度 `${#string}`\n+ 截取子串 `${string:1:4}` 截取string位置1开始的4个字符\n\n#### 数组\n\n```shell\narray_name=(value0 value1 value2 value3) #不限定长度，下标从0开始，空格分割\narray_name[n]=valuen \n${array_name[@]} # 使用 @ 符号可以获取数组中的所有元素\nlength=${#array_name[@]} # 取得数组元素的个数\nlengthn=${#array_name[n]} # 取得数组单个元素的长度\n```\n\n\n\n#### 多行注释\n\n+ ```shell\n  : <<'COMMENT'  \n  something\n  COMMENT\n  或者\n  : <<! \n  something\n  !\n  ```\n\n#### Shell编码\n\n#### cd安全\n\n+ cd可能由于错误路径、无权限等问题而失败，一旦失败后续操作将在错误目录上继续执行，引发误操作。\n+ 通过添加错误判断并exit方式避免错误操作。\n\n```shell\ncd foo || exit // exit返回cd错误码\ncd foo || { echo \"Failure\"; exit 1; }\n```\n\n#### 路径\n\n进入当前脚本路径\n\n```shell\n$(cd \"$(dirname $0)\";pwd)\n```\n\n进入当前函数执行路径，如脚本A调用脚本B，在B中执行则得到B的路径\n\n```shell\n$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\n```\n\n\n\n## 静波代码检视\n\n#### 离线检测\n\n```shell\napt-get install shellcheck\nshellcheck file.sh\n```\n\n#### 在线检测\n\n+ 在线检测https://www.shellcheck.net/，贴入代码，自动检测\n\n+ 注意加上 `#!/bin/bash`，否则报错\n\n![shellcheck示意](/img/shell-check.png)","slug":"shell语法总结","published":1,"updated":"2023-03-04T14:45:28.555Z","_id":"cleu1wyuw000ks2y24ld51se6","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Shell语法\"><a href=\"#Shell语法\" class=\"headerlink\" title=\"Shell语法\"></a>Shell语法</h2><h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><ul>\n<li><code>./aa.sh</code><ul>\n<li>打开一个<strong>subshell</strong>去读取、执行aa.sh，而aa.sh<strong>需要有执行权限</strong></li>\n<li>依赖首行明确解释器类型，否则就不在subshell中执行</li>\n<li>通知系统在当前目录找aa.sh,而直接执行aa.sh&#96;，linux 系统将在 PATH里的目录里找aa.sh</li>\n</ul>\n</li>\n<li><code>sh/bash aa.sh</code>  <ul>\n<li>打开一个<strong>subshell</strong>运行解释器去读取、执行aa.sh，文件名作为参数，<strong>无需执行权限</strong></li>\n<li>无需在首行写类似<code>#!/bin/bash*</code>来明确解释器</li>\n</ul>\n</li>\n<li><code>source aa.sh</code><ul>\n<li><strong>当前shell内</strong>读取、执行aa.sh，会保留和改变当前shell中的变量，<strong>无需执行权限</strong></li>\n<li>soure可以简化为点号”.”，推荐点号</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h4><ul>\n<li><p>$aa与${aa}没有区别，但是{}可以用来明确变量边界，同时支持拼接</p>\n</li>\n<li><p><code>readonly aa</code> 设置变量aa为只读</p>\n</li>\n<li><p><code>unset aa</code> 删除变量aa, 不能删只读变量</p>\n</li>\n<li><p>shell变量</p>\n<ul>\n<li>&#96;&#96;&#96;<br>$$ &#x2F;&#x2F; shell本身PID<br>$* $@  参数列表（不包括脚本文件名）<br>$# 参数列表中参数个数<br>$0 脚本文件名<br>$n 第n个参数<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\"><br>#### 字符串<br><br>+ 单引号里的任何字符都会原样输出，因而变量是无效的<br>+ 字符串长度 `$&#123;#string&#125;`<br>+ 截取子串 `$&#123;string:<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">4</span>&#125;` 截取string位置<span class=\"hljs-number\">1</span>开始的<span class=\"hljs-number\">4</span>个字符<br><br>#### 数组<br><br>```shell<br>array_name=(value0 value1 value2 value3) #不限定长度，下标从<span class=\"hljs-number\">0</span>开始，空格分割<br>array_name[n]=valuen <br>$&#123;array_name[@]&#125; # 使用 @ 符号可以获取数组中的所有元素<br>length=$&#123;#array_name[@]&#125; # 取得数组元素的个数<br>lengthn=$&#123;#array_name[n]&#125; # 取得数组单个元素的长度<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"多行注释\"><a href=\"#多行注释\" class=\"headerlink\" title=\"多行注释\"></a>多行注释</h4><ul>\n<li>&#96;&#96;&#96;shell<br>: &lt;&lt;’COMMENT’<br>something<br>COMMENT<br>或者<br>: &lt;&lt;!<br>something<br>!<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><span class=\"hljs-comment\">#### Shell编码</span><br><br><span class=\"hljs-comment\">#### cd安全</span><br><br>+ cd可能由于错误路径、无权限等问题而失败，一旦失败后续操作将在错误目录上继续执行，引发误操作。<br>+ 通过添加错误判断并<span class=\"hljs-keyword\">exit</span>方式避免错误操作。<br><br>```shell<br>cd foo || <span class=\"hljs-keyword\">exit</span> <span class=\"hljs-regexp\">//</span> <span class=\"hljs-keyword\">exit</span>返回cd错误码<br>cd foo || &#123; echo <span class=\"hljs-string\">&quot;Failure&quot;</span>; <span class=\"hljs-keyword\">exit</span> <span class=\"hljs-number\">1</span>; &#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"路径\"><a href=\"#路径\" class=\"headerlink\" title=\"路径\"></a>路径</h4><p>进入当前脚本路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">(<span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(dirname $0)</span>&quot;</span>;<span class=\"hljs-built_in\">pwd</span>)</span><br></code></pre></td></tr></table></figure>\n\n<p>进入当前函数执行路径，如脚本A调用脚本B，在B中执行则得到B的路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">( <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$( dirname <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&amp; <span class=\"hljs-built_in\">pwd</span> )</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"静波代码检视\"><a href=\"#静波代码检视\" class=\"headerlink\" title=\"静波代码检视\"></a>静波代码检视</h2><h4 id=\"离线检测\"><a href=\"#离线检测\" class=\"headerlink\" title=\"离线检测\"></a>离线检测</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt-get install shellcheck<br>shellcheck file.sh<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"在线检测\"><a href=\"#在线检测\" class=\"headerlink\" title=\"在线检测\"></a>在线检测</h4><ul>\n<li><p>在线检测<a href=\"https://www.shellcheck.net/%EF%BC%8C%E8%B4%B4%E5%85%A5%E4%BB%A3%E7%A0%81%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%A3%80%E6%B5%8B\">https://www.shellcheck.net/，贴入代码，自动检测</a></p>\n</li>\n<li><p>注意加上 <code>#!/bin/bash</code>，否则报错</p>\n</li>\n</ul>\n<p><img src=\"/img/shell-check.png\" alt=\"shellcheck示意\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Shell语法\"><a href=\"#Shell语法\" class=\"headerlink\" title=\"Shell语法\"></a>Shell语法</h2><h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><ul>\n<li><code>./aa.sh</code><ul>\n<li>打开一个<strong>subshell</strong>去读取、执行aa.sh，而aa.sh<strong>需要有执行权限</strong></li>\n<li>依赖首行明确解释器类型，否则就不在subshell中执行</li>\n<li>通知系统在当前目录找aa.sh,而直接执行aa.sh&#96;，linux 系统将在 PATH里的目录里找aa.sh</li>\n</ul>\n</li>\n<li><code>sh/bash aa.sh</code>  <ul>\n<li>打开一个<strong>subshell</strong>运行解释器去读取、执行aa.sh，文件名作为参数，<strong>无需执行权限</strong></li>\n<li>无需在首行写类似<code>#!/bin/bash*</code>来明确解释器</li>\n</ul>\n</li>\n<li><code>source aa.sh</code><ul>\n<li><strong>当前shell内</strong>读取、执行aa.sh，会保留和改变当前shell中的变量，<strong>无需执行权限</strong></li>\n<li>soure可以简化为点号”.”，推荐点号</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h4><ul>\n<li><p>$aa与${aa}没有区别，但是{}可以用来明确变量边界，同时支持拼接</p>\n</li>\n<li><p><code>readonly aa</code> 设置变量aa为只读</p>\n</li>\n<li><p><code>unset aa</code> 删除变量aa, 不能删只读变量</p>\n</li>\n<li><p>shell变量</p>\n<ul>\n<li>&#96;&#96;&#96;<br>$$ &#x2F;&#x2F; shell本身PID<br>$* $@  参数列表（不包括脚本文件名）<br>$# 参数列表中参数个数<br>$0 脚本文件名<br>$n 第n个参数<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\"><br>#### 字符串<br><br>+ 单引号里的任何字符都会原样输出，因而变量是无效的<br>+ 字符串长度 `$&#123;#string&#125;`<br>+ 截取子串 `$&#123;string:<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">4</span>&#125;` 截取string位置<span class=\"hljs-number\">1</span>开始的<span class=\"hljs-number\">4</span>个字符<br><br>#### 数组<br><br>```shell<br>array_name=(value0 value1 value2 value3) #不限定长度，下标从<span class=\"hljs-number\">0</span>开始，空格分割<br>array_name[n]=valuen <br>$&#123;array_name[@]&#125; # 使用 @ 符号可以获取数组中的所有元素<br>length=$&#123;#array_name[@]&#125; # 取得数组元素的个数<br>lengthn=$&#123;#array_name[n]&#125; # 取得数组单个元素的长度<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"多行注释\"><a href=\"#多行注释\" class=\"headerlink\" title=\"多行注释\"></a>多行注释</h4><ul>\n<li>&#96;&#96;&#96;shell<br>: &lt;&lt;’COMMENT’<br>something<br>COMMENT<br>或者<br>: &lt;&lt;!<br>something<br>!<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><span class=\"hljs-comment\">#### Shell编码</span><br><br><span class=\"hljs-comment\">#### cd安全</span><br><br>+ cd可能由于错误路径、无权限等问题而失败，一旦失败后续操作将在错误目录上继续执行，引发误操作。<br>+ 通过添加错误判断并<span class=\"hljs-keyword\">exit</span>方式避免错误操作。<br><br>```shell<br>cd foo || <span class=\"hljs-keyword\">exit</span> <span class=\"hljs-regexp\">//</span> <span class=\"hljs-keyword\">exit</span>返回cd错误码<br>cd foo || &#123; echo <span class=\"hljs-string\">&quot;Failure&quot;</span>; <span class=\"hljs-keyword\">exit</span> <span class=\"hljs-number\">1</span>; &#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"路径\"><a href=\"#路径\" class=\"headerlink\" title=\"路径\"></a>路径</h4><p>进入当前脚本路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">(<span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(dirname $0)</span>&quot;</span>;<span class=\"hljs-built_in\">pwd</span>)</span><br></code></pre></td></tr></table></figure>\n\n<p>进入当前函数执行路径，如脚本A调用脚本B，在B中执行则得到B的路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">( <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$( dirname <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&amp; <span class=\"hljs-built_in\">pwd</span> )</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"静波代码检视\"><a href=\"#静波代码检视\" class=\"headerlink\" title=\"静波代码检视\"></a>静波代码检视</h2><h4 id=\"离线检测\"><a href=\"#离线检测\" class=\"headerlink\" title=\"离线检测\"></a>离线检测</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt-get install shellcheck<br>shellcheck file.sh<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"在线检测\"><a href=\"#在线检测\" class=\"headerlink\" title=\"在线检测\"></a>在线检测</h4><ul>\n<li><p>在线检测<a href=\"https://www.shellcheck.net/%EF%BC%8C%E8%B4%B4%E5%85%A5%E4%BB%A3%E7%A0%81%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%A3%80%E6%B5%8B\">https://www.shellcheck.net/，贴入代码，自动检测</a></p>\n</li>\n<li><p>注意加上 <code>#!/bin/bash</code>，否则报错</p>\n</li>\n</ul>\n<p><img src=\"/img/shell-check.png\" alt=\"shellcheck示意\"></p>\n"},{"title":"Git常用操作总结","date":"2022-02-28T15:58:57.000Z","index_img":"/img/page/git.png","_content":"\n## 批量删除Git分支\n\n### 删本地分支\n\ngit branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git branch -D 本地分支强制删除命令中，实现**批量删除包含keyname字符串的本地分支**\n\n```\ngit branch |grep 'keyname' | xargs git branch -D\n```\n\n#### 删远程分支\n\ngit branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git push origin --delete 远端分支强制删除命令中，实现**批量删除包含keyname字符串的远端分支**\n\n```\ngit branch |grep 'keyname' | xargs git push origin --delete\n```\n\n## 误删分支找回\n\ngit reflog查看所有分支的commit记录,根据commit记录创建分支\n\n```\ngit branch newBranchName HEAD@{**}\n```\n\n切换到新分支后，push到远端即可恢复远端分支\n\n![找回分支](/img/findback-branch.png)\n\n## Git快捷命令配置（别名）\n\ngit bash窗口中vi /etc/bash.bashrc，在尾部添加如下代码\n\n```\nalias gst='git status'\nalias gdiff='git diff'\nalias gadd='git add'\nalias gci='git commit -m \"hello world\"'\nalias gthis='git rev-parse --abbrev-ref HEAD'\nalias gpush='git push origin `gthis`'\nalias gco='git checkout'\nalias gbr='git branch'\nalias gname='vi /etc/bash.bashrc'\n```\n\n保存后重启bash窗口，生效快捷命令映射\n\n若保存时，遇到[/etc/bashrc Permission denied，则用管理员权限打开git bash重试即可\n\n![管理员权限运行bash](/img/bash-run.png)\n\n## 记录Git用户名密码\n\ngit 默认每次pull等操作时要求输入密码，比较麻烦，可通过如下命令永久保存密码，再输入一次后就无需输入了。\n\n```\ngit config credential.helper store\n```\n\n\n\n","source":"_posts/Git常用总结.md","raw":"---\ntitle: Git常用操作总结\ndate: 2022-02-28 16:58:57\ntags: Git\nindex_img: /img/page/git.png\n---\n\n## 批量删除Git分支\n\n### 删本地分支\n\ngit branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git branch -D 本地分支强制删除命令中，实现**批量删除包含keyname字符串的本地分支**\n\n```\ngit branch |grep 'keyname' | xargs git branch -D\n```\n\n#### 删远程分支\n\ngit branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git push origin --delete 远端分支强制删除命令中，实现**批量删除包含keyname字符串的远端分支**\n\n```\ngit branch |grep 'keyname' | xargs git push origin --delete\n```\n\n## 误删分支找回\n\ngit reflog查看所有分支的commit记录,根据commit记录创建分支\n\n```\ngit branch newBranchName HEAD@{**}\n```\n\n切换到新分支后，push到远端即可恢复远端分支\n\n![找回分支](/img/findback-branch.png)\n\n## Git快捷命令配置（别名）\n\ngit bash窗口中vi /etc/bash.bashrc，在尾部添加如下代码\n\n```\nalias gst='git status'\nalias gdiff='git diff'\nalias gadd='git add'\nalias gci='git commit -m \"hello world\"'\nalias gthis='git rev-parse --abbrev-ref HEAD'\nalias gpush='git push origin `gthis`'\nalias gco='git checkout'\nalias gbr='git branch'\nalias gname='vi /etc/bash.bashrc'\n```\n\n保存后重启bash窗口，生效快捷命令映射\n\n若保存时，遇到[/etc/bashrc Permission denied，则用管理员权限打开git bash重试即可\n\n![管理员权限运行bash](/img/bash-run.png)\n\n## 记录Git用户名密码\n\ngit 默认每次pull等操作时要求输入密码，比较麻烦，可通过如下命令永久保存密码，再输入一次后就无需输入了。\n\n```\ngit config credential.helper store\n```\n\n\n\n","slug":"Git常用总结","published":1,"updated":"2023-03-04T14:26:49.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cleu2frqo000009y2d2x8aw2z","content":"<h2 id=\"批量删除Git分支\"><a href=\"#批量删除Git分支\" class=\"headerlink\" title=\"批量删除Git分支\"></a>批量删除Git分支</h2><h3 id=\"删本地分支\"><a href=\"#删本地分支\" class=\"headerlink\" title=\"删本地分支\"></a>删本地分支</h3><p>git branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git branch -D 本地分支强制删除命令中，实现<strong>批量删除包含keyname字符串的本地分支</strong></p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">git branch |<span class=\"hljs-type\">grep</span> &#x27;keyname&#x27; | <span class=\"hljs-type\">xargs</span> git branch -D<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"删远程分支\"><a href=\"#删远程分支\" class=\"headerlink\" title=\"删远程分支\"></a>删远程分支</h4><p>git branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git push origin –delete 远端分支强制删除命令中，实现<strong>批量删除包含keyname字符串的远端分支</strong></p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">git branch |<span class=\"hljs-keyword\">grep</span> <span class=\"hljs-string\">&#x27;keyname&#x27;</span> | xargs git <span class=\"hljs-keyword\">push</span> origin --<span class=\"hljs-keyword\">delete</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"误删分支找回\"><a href=\"#误删分支找回\" class=\"headerlink\" title=\"误删分支找回\"></a>误删分支找回</h2><p>git reflog查看所有分支的commit记录,根据commit记录创建分支</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haxe\">git branch <span class=\"hljs-keyword\">new</span><span class=\"hljs-type\">BranchName</span> HEAD@&#123;**&#125;<br></code></pre></td></tr></table></figure>\n\n<p>切换到新分支后，push到远端即可恢复远端分支</p>\n<p><img src=\"/img/findback-branch.png\" alt=\"找回分支\"></p>\n<h2 id=\"Git快捷命令配置（别名）\"><a href=\"#Git快捷命令配置（别名）\" class=\"headerlink\" title=\"Git快捷命令配置（别名）\"></a>Git快捷命令配置（别名）</h2><p>git bash窗口中vi &#x2F;etc&#x2F;bash.bashrc，在尾部添加如下代码</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">alias <span class=\"hljs-attribute\">gst</span>=<span class=\"hljs-string\">&#x27;git status&#x27;</span><br>alias <span class=\"hljs-attribute\">gdiff</span>=<span class=\"hljs-string\">&#x27;git diff&#x27;</span><br>alias <span class=\"hljs-attribute\">gadd</span>=<span class=\"hljs-string\">&#x27;git add&#x27;</span><br>alias <span class=\"hljs-attribute\">gci</span>=<span class=\"hljs-string\">&#x27;git commit -m &quot;hello world&quot;&#x27;</span><br>alias <span class=\"hljs-attribute\">gthis</span>=<span class=\"hljs-string\">&#x27;git rev-parse --abbrev-ref HEAD&#x27;</span><br>alias <span class=\"hljs-attribute\">gpush</span>=<span class=\"hljs-string\">&#x27;git push origin `gthis`&#x27;</span><br>alias <span class=\"hljs-attribute\">gco</span>=<span class=\"hljs-string\">&#x27;git checkout&#x27;</span><br>alias <span class=\"hljs-attribute\">gbr</span>=<span class=\"hljs-string\">&#x27;git branch&#x27;</span><br>alias <span class=\"hljs-attribute\">gname</span>=<span class=\"hljs-string\">&#x27;vi /etc/bash.bashrc&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<p>保存后重启bash窗口，生效快捷命令映射</p>\n<p>若保存时，遇到[&#x2F;etc&#x2F;bashrc Permission denied，则用管理员权限打开git bash重试即可</p>\n<p><img src=\"/img/bash-run.png\" alt=\"管理员权限运行bash\"></p>\n<h2 id=\"记录Git用户名密码\"><a href=\"#记录Git用户名密码\" class=\"headerlink\" title=\"记录Git用户名密码\"></a>记录Git用户名密码</h2><p>git 默认每次pull等操作时要求输入密码，比较麻烦，可通过如下命令永久保存密码，再输入一次后就无需输入了。</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">git config credential.helper store<br></code></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"批量删除Git分支\"><a href=\"#批量删除Git分支\" class=\"headerlink\" title=\"批量删除Git分支\"></a>批量删除Git分支</h2><h3 id=\"删本地分支\"><a href=\"#删本地分支\" class=\"headerlink\" title=\"删本地分支\"></a>删本地分支</h3><p>git branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git branch -D 本地分支强制删除命令中，实现<strong>批量删除包含keyname字符串的本地分支</strong></p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">git branch |<span class=\"hljs-type\">grep</span> &#x27;keyname&#x27; | <span class=\"hljs-type\">xargs</span> git branch -D<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"删远程分支\"><a href=\"#删远程分支\" class=\"headerlink\" title=\"删远程分支\"></a>删远程分支</h4><p>git branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git push origin –delete 远端分支强制删除命令中，实现<strong>批量删除包含keyname字符串的远端分支</strong></p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">git branch |<span class=\"hljs-keyword\">grep</span> <span class=\"hljs-string\">&#x27;keyname&#x27;</span> | xargs git <span class=\"hljs-keyword\">push</span> origin --<span class=\"hljs-keyword\">delete</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"误删分支找回\"><a href=\"#误删分支找回\" class=\"headerlink\" title=\"误删分支找回\"></a>误删分支找回</h2><p>git reflog查看所有分支的commit记录,根据commit记录创建分支</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haxe\">git branch <span class=\"hljs-keyword\">new</span><span class=\"hljs-type\">BranchName</span> HEAD@&#123;**&#125;<br></code></pre></td></tr></table></figure>\n\n<p>切换到新分支后，push到远端即可恢复远端分支</p>\n<p><img src=\"/img/findback-branch.png\" alt=\"找回分支\"></p>\n<h2 id=\"Git快捷命令配置（别名）\"><a href=\"#Git快捷命令配置（别名）\" class=\"headerlink\" title=\"Git快捷命令配置（别名）\"></a>Git快捷命令配置（别名）</h2><p>git bash窗口中vi &#x2F;etc&#x2F;bash.bashrc，在尾部添加如下代码</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">alias <span class=\"hljs-attribute\">gst</span>=<span class=\"hljs-string\">&#x27;git status&#x27;</span><br>alias <span class=\"hljs-attribute\">gdiff</span>=<span class=\"hljs-string\">&#x27;git diff&#x27;</span><br>alias <span class=\"hljs-attribute\">gadd</span>=<span class=\"hljs-string\">&#x27;git add&#x27;</span><br>alias <span class=\"hljs-attribute\">gci</span>=<span class=\"hljs-string\">&#x27;git commit -m &quot;hello world&quot;&#x27;</span><br>alias <span class=\"hljs-attribute\">gthis</span>=<span class=\"hljs-string\">&#x27;git rev-parse --abbrev-ref HEAD&#x27;</span><br>alias <span class=\"hljs-attribute\">gpush</span>=<span class=\"hljs-string\">&#x27;git push origin `gthis`&#x27;</span><br>alias <span class=\"hljs-attribute\">gco</span>=<span class=\"hljs-string\">&#x27;git checkout&#x27;</span><br>alias <span class=\"hljs-attribute\">gbr</span>=<span class=\"hljs-string\">&#x27;git branch&#x27;</span><br>alias <span class=\"hljs-attribute\">gname</span>=<span class=\"hljs-string\">&#x27;vi /etc/bash.bashrc&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<p>保存后重启bash窗口，生效快捷命令映射</p>\n<p>若保存时，遇到[&#x2F;etc&#x2F;bashrc Permission denied，则用管理员权限打开git bash重试即可</p>\n<p><img src=\"/img/bash-run.png\" alt=\"管理员权限运行bash\"></p>\n<h2 id=\"记录Git用户名密码\"><a href=\"#记录Git用户名密码\" class=\"headerlink\" title=\"记录Git用户名密码\"></a>记录Git用户名密码</h2><p>git 默认每次pull等操作时要求输入密码，比较麻烦，可通过如下命令永久保存密码，再输入一次后就无需输入了。</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">git config credential.helper store<br></code></pre></td></tr></table></figure>\n\n\n\n"},{"title":"CMake常用操作总结","date":"2022-03-08T09:31:27.000Z","index_img":"/img/page/cmake.png","_content":"\n参考：  \n[https://blog.csdn.net/comedate/article/details/108544656](https://blog.csdn.net/comedate/article/details/108544656)  \n[https://blog.csdn.net/qq_37431083/article/details/125885308](https://blog.csdn.net/qq_37431083/article/details/125885308)\n# 一、CMake介绍\n- makefile: 源文件一个一个编译太麻烦，Makefile通过编写规则文件指定工程中哪些文件需要先编译，哪些需要后编译进行批处理编译；可以指定只编译新写出的代码，而不用全部重新编译，提高了开发效率。 \n- CMake：是一个开源、跨平台的编译、测试和打包工具，它使用比较简单的语言描述编译、安装的过程，**自动输出**Makefile或者project文件。\n  \n  为什么不自己写Makefile：对于大型工程，Makefile很复杂，cmake可自动生成Makefile。\n\n  跨平台编译，也叫交叉编译，可在win平台上开发，编译成linux平台可执行的文件。\n\n  Project文件（即Object文件）: 由源文件通过编译过程产生，是一种中间代码文件，其文件格式在Windows下为 .obj 文件，UNIX下是 .o 文件。大量的Object文件组合在一起（该过程称为\"链接\"）组成了可执行文件。\n\n# 二、CMakeLists.txt语法\n### 内部变量\n|变量名|\t意义|\n|---|---|\nPROJECT_NAME|project名称，即使用PROJECT命令设置的名称\nCMAKE_CXX_COMPILER\t|指定C++编译器\nCMAKE_CXX_FLAGS\t|编译C++文件时的选项\nCMAKE_CXX_STANDARD| C++标准\nadd_definitions|添加编译选项\nEXECUTABLE_OUTPUT_PATH\t|可执行文件的存放路径\nLIBRARY_OUTPUT_PATH\t|库文件的存放路径\nCMAKE_BUILD_TYPE\t|build 类型(Debug, Release, …)，CMAKE_BUILD_TYPE=Debug\nBUILD_SHARED_LIBS\t|指定编译成静态库还是动态库\n\n\n1. 设置最低Cmake版本要求\n``` cmake\ncmake_minimum_required(VERSION 3.5)  \n```\n2. **project()**\n- PROJECT_NAME: 必选——用来设置工程名，设置后，会把设置的值存储在CMAKE_PROJECT_NAME变量中\n- VERSION：可选，工程版本号，有主版本号、次版本号、补丁版本号\n- DESCRIPTION：工程简单的的描述\n- HOMEPAGE_URL：工程主页url\n- LANGUAGES：工程使用的语言\n\n``` cmake\n# 指定项目名和编程语言,默认为C和C++（cxx），LANGUAGE关键字可省略\nproject(cmaketest cxx)\n# 跟在其他关键字后不可省略\nproject (camketest VERSION 10.2.1.3 LANGUAGES “CXX”)\n```\n3. message 打印消息  \n   `message([FATAL_ERROR] “message to display” …)`\n4. set 可设置普通变量、环境变量、缓存条目  \n    `set (normal_var a) #普通变量`\n5. 生成可执行程序  \n   #同一个文件夹下多个源文件的编译  \n   `add_executable (helloDemo demo.cxx demo_b.cxx)`     \n6. 指定头文件搜索路径  \n   `include_directories (${HELLO_SOURCE_DIR}/Hello)`\n7. 查找当前目录下所有源文件名，并将其存储到\tDIR_CURR中\n    `aux_source_directory(. DIR_CURR)`\n8. 添加链接库，指明可执行文件helloDemo需要连接一个名为 function 的链接库  \n   `target_link_libraries(helloDemo function)`\n# 三、cmake命令\n|参数|含义|\n|--|--|  \n|-S|指定源文件根目录，必须包含一个CMakeLists.txt文件|  \n|-B|指定构建目录，构建生成的中间文件和目标文件的生成路径|  \n|-D|使用变量，格式为-D \\<var>=\\<value>，-D后面的空格**可省略**,变量在CMakeLists.txt中定义|\n``` shell\n# 指明使用当前目录作为源文件目录，其中包含CMakeLists.txt文件；\n#使用build目录作为构建目录；\n#设定变量CMAKE_BUILD_TYPE的值为Debug，变量AUTHOR的值为RealCoolEngineer\ncmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DAUTHOR=RealCoolEngineer\n```\n# 四、CMake使用  \n1. 生成Makefile文件\n> cmake \\`CMakeLists.txt所在路径`  //会在当前文件夹生成build文件    \n1. 编译:进入build文件，里面会有Makefile文件，执行make，即会生成可执行文件\n> make\n1. 直接输入可执行文件文件名，执行。\n# 五、项目CMakeList.txt实例\n项目来源：[https://github.com/CandyConfident/HighPerformanceConcurrentServer](https://github.com/CandyConfident/HighPerformanceConcurrentServer)  \n\nout-of-source build，与in-source build相对，即将编译输出文件与源文件放到不同目录中。此项目为out-of-source build。\n### build.sh\n``` shell\n#!/bin/sh\n\nset -x\n\nSOURCE_DIR=`pwd`\nBUILD_DIR=${BUILD_DIR:-../build}\nBUILD_TYPE=${BUILD_TYPE:-Debug} #表示是debug版本，不是release版本\nDEBUG_FLAG=${DEBUG_FLAG:-1}\n\nmkdir -p $BUILD_DIR/$BUILD_TYPE \\\n    && cd $BUILD_DIR/$BUILD_TYPE \\\n    && cmake \\\n            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\\n            -DCMAKE_DEBUG_FLAG=$DEBUG_FLAG \\\n            $SOURCE_DIR \\\n    && make $*\n```\n### 总CMakeLists.txt\n``` cmake\ncmake_minimum_required(VERSION 3.16) #指定cmake最小版本\nproject(MyServer CXX) #指定项目名和程序语言,cxx=c++\n\nset(CMAKE_CXX_STANDARD 20) #指定C++标准\n\nif(CMAKE_DEBUG_FLAG) \n    set(CMAKE_CXX_FLAGS \" ${CMAKE_CXX_FLAGS} -g\")\nendif()\n\nmessage(STATUS \"CMAKE_CXX_FLAGS = \" ${CMAKE_CXX_FLAGS}) #打印消息\n\n# 添加子目录,同时将子目录下的CMakeLists.txt文件执行\nadd_subdirectory(log/tests)\nadd_subdirectory(threadpool/tests)\nadd_subdirectory(timer/tests)\nadd_subdirectory(memory/tests)\nadd_subdirectory(net/tests)\n```\n### 子CMakeLists.txt\n``` cmake\naux_source_directory(.. native_source) #将当前文件夹所有源文件名添加到上一级目录中native_source中\nset(SRCS  #设置SRCS变量为多个值\n    test_mem.cpp\n    ../../log/pr.cpp\n    ../../log/log.cpp\n)\nlist(APPEND SRCS ${native_source})\n\nset(INCS\n    ../\n    ../../log\n)\ninclude_directories(${INCS}) #指定头文件路径\n\nadd_executable(mem_test ${SRCS}) #将SRCS中源文件生成可执行文件mem_test\ntarget_link_libraries(mem_test pthread) #添加链接库\n\nlist(REMOVE_ITEM SRCS test_mem.cpp)\nlist(APPEND SRCS test_buf.cpp)\nadd_executable(buf_test ${SRCS})\ntarget_link_libraries(buf_test pthread)\n```\n\n\n  \n\n","source":"_posts/cmake_note.md","raw":"---\ntitle: CMake常用操作总结\ndate: 2022-03-08 10:31:27\ntags: Cmake\nindex_img: /img/page/cmake.png\n---\n\n参考：  \n[https://blog.csdn.net/comedate/article/details/108544656](https://blog.csdn.net/comedate/article/details/108544656)  \n[https://blog.csdn.net/qq_37431083/article/details/125885308](https://blog.csdn.net/qq_37431083/article/details/125885308)\n# 一、CMake介绍\n- makefile: 源文件一个一个编译太麻烦，Makefile通过编写规则文件指定工程中哪些文件需要先编译，哪些需要后编译进行批处理编译；可以指定只编译新写出的代码，而不用全部重新编译，提高了开发效率。 \n- CMake：是一个开源、跨平台的编译、测试和打包工具，它使用比较简单的语言描述编译、安装的过程，**自动输出**Makefile或者project文件。\n  \n  为什么不自己写Makefile：对于大型工程，Makefile很复杂，cmake可自动生成Makefile。\n\n  跨平台编译，也叫交叉编译，可在win平台上开发，编译成linux平台可执行的文件。\n\n  Project文件（即Object文件）: 由源文件通过编译过程产生，是一种中间代码文件，其文件格式在Windows下为 .obj 文件，UNIX下是 .o 文件。大量的Object文件组合在一起（该过程称为\"链接\"）组成了可执行文件。\n\n# 二、CMakeLists.txt语法\n### 内部变量\n|变量名|\t意义|\n|---|---|\nPROJECT_NAME|project名称，即使用PROJECT命令设置的名称\nCMAKE_CXX_COMPILER\t|指定C++编译器\nCMAKE_CXX_FLAGS\t|编译C++文件时的选项\nCMAKE_CXX_STANDARD| C++标准\nadd_definitions|添加编译选项\nEXECUTABLE_OUTPUT_PATH\t|可执行文件的存放路径\nLIBRARY_OUTPUT_PATH\t|库文件的存放路径\nCMAKE_BUILD_TYPE\t|build 类型(Debug, Release, …)，CMAKE_BUILD_TYPE=Debug\nBUILD_SHARED_LIBS\t|指定编译成静态库还是动态库\n\n\n1. 设置最低Cmake版本要求\n``` cmake\ncmake_minimum_required(VERSION 3.5)  \n```\n2. **project()**\n- PROJECT_NAME: 必选——用来设置工程名，设置后，会把设置的值存储在CMAKE_PROJECT_NAME变量中\n- VERSION：可选，工程版本号，有主版本号、次版本号、补丁版本号\n- DESCRIPTION：工程简单的的描述\n- HOMEPAGE_URL：工程主页url\n- LANGUAGES：工程使用的语言\n\n``` cmake\n# 指定项目名和编程语言,默认为C和C++（cxx），LANGUAGE关键字可省略\nproject(cmaketest cxx)\n# 跟在其他关键字后不可省略\nproject (camketest VERSION 10.2.1.3 LANGUAGES “CXX”)\n```\n3. message 打印消息  \n   `message([FATAL_ERROR] “message to display” …)`\n4. set 可设置普通变量、环境变量、缓存条目  \n    `set (normal_var a) #普通变量`\n5. 生成可执行程序  \n   #同一个文件夹下多个源文件的编译  \n   `add_executable (helloDemo demo.cxx demo_b.cxx)`     \n6. 指定头文件搜索路径  \n   `include_directories (${HELLO_SOURCE_DIR}/Hello)`\n7. 查找当前目录下所有源文件名，并将其存储到\tDIR_CURR中\n    `aux_source_directory(. DIR_CURR)`\n8. 添加链接库，指明可执行文件helloDemo需要连接一个名为 function 的链接库  \n   `target_link_libraries(helloDemo function)`\n# 三、cmake命令\n|参数|含义|\n|--|--|  \n|-S|指定源文件根目录，必须包含一个CMakeLists.txt文件|  \n|-B|指定构建目录，构建生成的中间文件和目标文件的生成路径|  \n|-D|使用变量，格式为-D \\<var>=\\<value>，-D后面的空格**可省略**,变量在CMakeLists.txt中定义|\n``` shell\n# 指明使用当前目录作为源文件目录，其中包含CMakeLists.txt文件；\n#使用build目录作为构建目录；\n#设定变量CMAKE_BUILD_TYPE的值为Debug，变量AUTHOR的值为RealCoolEngineer\ncmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DAUTHOR=RealCoolEngineer\n```\n# 四、CMake使用  \n1. 生成Makefile文件\n> cmake \\`CMakeLists.txt所在路径`  //会在当前文件夹生成build文件    \n1. 编译:进入build文件，里面会有Makefile文件，执行make，即会生成可执行文件\n> make\n1. 直接输入可执行文件文件名，执行。\n# 五、项目CMakeList.txt实例\n项目来源：[https://github.com/CandyConfident/HighPerformanceConcurrentServer](https://github.com/CandyConfident/HighPerformanceConcurrentServer)  \n\nout-of-source build，与in-source build相对，即将编译输出文件与源文件放到不同目录中。此项目为out-of-source build。\n### build.sh\n``` shell\n#!/bin/sh\n\nset -x\n\nSOURCE_DIR=`pwd`\nBUILD_DIR=${BUILD_DIR:-../build}\nBUILD_TYPE=${BUILD_TYPE:-Debug} #表示是debug版本，不是release版本\nDEBUG_FLAG=${DEBUG_FLAG:-1}\n\nmkdir -p $BUILD_DIR/$BUILD_TYPE \\\n    && cd $BUILD_DIR/$BUILD_TYPE \\\n    && cmake \\\n            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\\n            -DCMAKE_DEBUG_FLAG=$DEBUG_FLAG \\\n            $SOURCE_DIR \\\n    && make $*\n```\n### 总CMakeLists.txt\n``` cmake\ncmake_minimum_required(VERSION 3.16) #指定cmake最小版本\nproject(MyServer CXX) #指定项目名和程序语言,cxx=c++\n\nset(CMAKE_CXX_STANDARD 20) #指定C++标准\n\nif(CMAKE_DEBUG_FLAG) \n    set(CMAKE_CXX_FLAGS \" ${CMAKE_CXX_FLAGS} -g\")\nendif()\n\nmessage(STATUS \"CMAKE_CXX_FLAGS = \" ${CMAKE_CXX_FLAGS}) #打印消息\n\n# 添加子目录,同时将子目录下的CMakeLists.txt文件执行\nadd_subdirectory(log/tests)\nadd_subdirectory(threadpool/tests)\nadd_subdirectory(timer/tests)\nadd_subdirectory(memory/tests)\nadd_subdirectory(net/tests)\n```\n### 子CMakeLists.txt\n``` cmake\naux_source_directory(.. native_source) #将当前文件夹所有源文件名添加到上一级目录中native_source中\nset(SRCS  #设置SRCS变量为多个值\n    test_mem.cpp\n    ../../log/pr.cpp\n    ../../log/log.cpp\n)\nlist(APPEND SRCS ${native_source})\n\nset(INCS\n    ../\n    ../../log\n)\ninclude_directories(${INCS}) #指定头文件路径\n\nadd_executable(mem_test ${SRCS}) #将SRCS中源文件生成可执行文件mem_test\ntarget_link_libraries(mem_test pthread) #添加链接库\n\nlist(REMOVE_ITEM SRCS test_mem.cpp)\nlist(APPEND SRCS test_buf.cpp)\nadd_executable(buf_test ${SRCS})\ntarget_link_libraries(buf_test pthread)\n```\n\n\n  \n\n","slug":"cmake_note","published":1,"updated":"2023-03-04T14:42:11.252Z","_id":"cleu2frqp000109y27b3075l2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>参考：<br><a href=\"https://blog.csdn.net/comedate/article/details/108544656\">https://blog.csdn.net/comedate/article/details/108544656</a><br><a href=\"https://blog.csdn.net/qq_37431083/article/details/125885308\">https://blog.csdn.net/qq_37431083&#x2F;article&#x2F;details&#x2F;125885308</a></p>\n<h1 id=\"一、CMake介绍\"><a href=\"#一、CMake介绍\" class=\"headerlink\" title=\"一、CMake介绍\"></a>一、CMake介绍</h1><ul>\n<li><p>makefile: 源文件一个一个编译太麻烦，Makefile通过编写规则文件指定工程中哪些文件需要先编译，哪些需要后编译进行批处理编译；可以指定只编译新写出的代码，而不用全部重新编译，提高了开发效率。 </p>\n</li>\n<li><p>CMake：是一个开源、跨平台的编译、测试和打包工具，它使用比较简单的语言描述编译、安装的过程，<strong>自动输出</strong>Makefile或者project文件。</p>\n<p>为什么不自己写Makefile：对于大型工程，Makefile很复杂，cmake可自动生成Makefile。</p>\n<p>跨平台编译，也叫交叉编译，可在win平台上开发，编译成linux平台可执行的文件。</p>\n<p>Project文件（即Object文件）: 由源文件通过编译过程产生，是一种中间代码文件，其文件格式在Windows下为 .obj 文件，UNIX下是 .o 文件。大量的Object文件组合在一起（该过程称为”链接”）组成了可执行文件。</p>\n</li>\n</ul>\n<h1 id=\"二、CMakeLists-txt语法\"><a href=\"#二、CMakeLists-txt语法\" class=\"headerlink\" title=\"二、CMakeLists.txt语法\"></a>二、CMakeLists.txt语法</h1><h3 id=\"内部变量\"><a href=\"#内部变量\" class=\"headerlink\" title=\"内部变量\"></a>内部变量</h3><table>\n<thead>\n<tr>\n<th>变量名</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PROJECT_NAME</td>\n<td>project名称，即使用PROJECT命令设置的名称</td>\n</tr>\n<tr>\n<td>CMAKE_CXX_COMPILER</td>\n<td>指定C++编译器</td>\n</tr>\n<tr>\n<td>CMAKE_CXX_FLAGS</td>\n<td>编译C++文件时的选项</td>\n</tr>\n<tr>\n<td>CMAKE_CXX_STANDARD</td>\n<td>C++标准</td>\n</tr>\n<tr>\n<td>add_definitions</td>\n<td>添加编译选项</td>\n</tr>\n<tr>\n<td>EXECUTABLE_OUTPUT_PATH</td>\n<td>可执行文件的存放路径</td>\n</tr>\n<tr>\n<td>LIBRARY_OUTPUT_PATH</td>\n<td>库文件的存放路径</td>\n</tr>\n<tr>\n<td>CMAKE_BUILD_TYPE</td>\n<td>build 类型(Debug, Release, …)，CMAKE_BUILD_TYPE&#x3D;Debug</td>\n</tr>\n<tr>\n<td>BUILD_SHARED_LIBS</td>\n<td>指定编译成静态库还是动态库</td>\n</tr>\n</tbody></table>\n<ol>\n<li>设置最低Cmake版本要求<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-keyword\">cmake_minimum_required</span>(VERSION <span class=\"hljs-number\">3.5</span>)  <br></code></pre></td></tr></table></figure></li>\n<li><strong>project()</strong></li>\n</ol>\n<ul>\n<li>PROJECT_NAME: 必选——用来设置工程名，设置后，会把设置的值存储在CMAKE_PROJECT_NAME变量中</li>\n<li>VERSION：可选，工程版本号，有主版本号、次版本号、补丁版本号</li>\n<li>DESCRIPTION：工程简单的的描述</li>\n<li>HOMEPAGE_URL：工程主页url</li>\n<li>LANGUAGES：工程使用的语言</li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-comment\"># 指定项目名和编程语言,默认为C和C++（cxx），LANGUAGE关键字可省略</span><br><span class=\"hljs-keyword\">project</span>(cmaketest cxx)<br><span class=\"hljs-comment\"># 跟在其他关键字后不可省略</span><br><span class=\"hljs-keyword\">project</span> (camketest VERSION <span class=\"hljs-number\">10.2</span>.<span class=\"hljs-number\">1.3</span> LANGUAGES “CXX”)<br></code></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>message 打印消息<br><code>message([FATAL_ERROR] “message to display” …)</code></li>\n<li>set 可设置普通变量、环境变量、缓存条目<br> <code>set (normal_var a) #普通变量</code></li>\n<li>生成可执行程序<br>#同一个文件夹下多个源文件的编译<br><code>add_executable (helloDemo demo.cxx demo_b.cxx)</code>     </li>\n<li>指定头文件搜索路径<br><code>include_directories ($&#123;HELLO_SOURCE_DIR&#125;/Hello)</code></li>\n<li>查找当前目录下所有源文件名，并将其存储到\tDIR_CURR中<br> <code>aux_source_directory(. DIR_CURR)</code></li>\n<li>添加链接库，指明可执行文件helloDemo需要连接一个名为 function 的链接库<br><code>target_link_libraries(helloDemo function)</code></li>\n</ol>\n<h1 id=\"三、cmake命令\"><a href=\"#三、cmake命令\" class=\"headerlink\" title=\"三、cmake命令\"></a>三、cmake命令</h1><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-S</td>\n<td>指定源文件根目录，必须包含一个CMakeLists.txt文件</td>\n</tr>\n<tr>\n<td>-B</td>\n<td>指定构建目录，构建生成的中间文件和目标文件的生成路径</td>\n</tr>\n<tr>\n<td>-D</td>\n<td>使用变量，格式为-D &lt;var&gt;&#x3D;&lt;value&gt;，-D后面的空格<strong>可省略</strong>,变量在CMakeLists.txt中定义</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指明使用当前目录作为源文件目录，其中包含CMakeLists.txt文件；</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">使用build目录作为构建目录；</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">设定变量CMAKE_BUILD_TYPE的值为Debug，变量AUTHOR的值为RealCoolEngineer</span><br>cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DAUTHOR=RealCoolEngineer<br></code></pre></td></tr></table></figure>\n<h1 id=\"四、CMake使用\"><a href=\"#四、CMake使用\" class=\"headerlink\" title=\"四、CMake使用\"></a>四、CMake使用</h1><ol>\n<li>生成Makefile文件<blockquote>\n<p>cmake `CMakeLists.txt所在路径&#96;  &#x2F;&#x2F;会在当前文件夹生成build文件    </p>\n</blockquote>\n</li>\n<li>编译:进入build文件，里面会有Makefile文件，执行make，即会生成可执行文件<blockquote>\n<p>make</p>\n</blockquote>\n</li>\n<li>直接输入可执行文件文件名，执行。</li>\n</ol>\n<h1 id=\"五、项目CMakeList-txt实例\"><a href=\"#五、项目CMakeList-txt实例\" class=\"headerlink\" title=\"五、项目CMakeList.txt实例\"></a>五、项目CMakeList.txt实例</h1><p>项目来源：<a href=\"https://github.com/CandyConfident/HighPerformanceConcurrentServer\">https://github.com/CandyConfident/HighPerformanceConcurrentServer</a>  </p>\n<p>out-of-source build，与in-source build相对，即将编译输出文件与源文件放到不同目录中。此项目为out-of-source build。</p>\n<h3 id=\"build-sh\"><a href=\"#build-sh\" class=\"headerlink\" title=\"build.sh\"></a>build.sh</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span><br><br>set -x<br><br>SOURCE_DIR=`pwd`<br>BUILD_DIR=$&#123;BUILD_DIR:-../build&#125;<br>BUILD_TYPE=$&#123;BUILD_TYPE:-Debug&#125; #表示是debug版本，不是release版本<br>DEBUG_FLAG=$&#123;DEBUG_FLAG:-1&#125;<br><br>mkdir -p $BUILD_DIR/$BUILD_TYPE \\<br>    &amp;&amp; cd $BUILD_DIR/$BUILD_TYPE \\<br>    &amp;&amp; cmake \\<br>            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\<br>            -DCMAKE_DEBUG_FLAG=$DEBUG_FLAG \\<br>            $SOURCE_DIR \\<br>    &amp;&amp; make $*<br></code></pre></td></tr></table></figure>\n<h3 id=\"总CMakeLists-txt\"><a href=\"#总CMakeLists-txt\" class=\"headerlink\" title=\"总CMakeLists.txt\"></a>总CMakeLists.txt</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-keyword\">cmake_minimum_required</span>(VERSION <span class=\"hljs-number\">3.16</span>) <span class=\"hljs-comment\">#指定cmake最小版本</span><br><span class=\"hljs-keyword\">project</span>(MyServer CXX) <span class=\"hljs-comment\">#指定项目名和程序语言,cxx=c++</span><br><br><span class=\"hljs-keyword\">set</span>(CMAKE_CXX_STANDARD <span class=\"hljs-number\">20</span>) <span class=\"hljs-comment\">#指定C++标准</span><br><br><span class=\"hljs-keyword\">if</span>(CMAKE_DEBUG_FLAG) <br>    <span class=\"hljs-keyword\">set</span>(CMAKE_CXX_FLAGS <span class=\"hljs-string\">&quot; $&#123;CMAKE_CXX_FLAGS&#125; -g&quot;</span>)<br><span class=\"hljs-keyword\">endif</span>()<br><br><span class=\"hljs-keyword\">message</span>(STATUS <span class=\"hljs-string\">&quot;CMAKE_CXX_FLAGS = &quot;</span> <span class=\"hljs-variable\">$&#123;CMAKE_CXX_FLAGS&#125;</span>) <span class=\"hljs-comment\">#打印消息</span><br><br><span class=\"hljs-comment\"># 添加子目录,同时将子目录下的CMakeLists.txt文件执行</span><br><span class=\"hljs-keyword\">add_subdirectory</span>(log/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(threadpool/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(timer/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(memory/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(net/tests)<br></code></pre></td></tr></table></figure>\n<h3 id=\"子CMakeLists-txt\"><a href=\"#子CMakeLists-txt\" class=\"headerlink\" title=\"子CMakeLists.txt\"></a>子CMakeLists.txt</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-keyword\">aux_source_directory</span>(.. native_source) <span class=\"hljs-comment\">#将当前文件夹所有源文件名添加到上一级目录中native_source中</span><br><span class=\"hljs-keyword\">set</span>(SRCS  <span class=\"hljs-comment\">#设置SRCS变量为多个值</span><br>    test_mem.cpp<br>    ../../log/pr.cpp<br>    ../../log/log.cpp<br>)<br><span class=\"hljs-keyword\">list</span>(APPEND SRCS <span class=\"hljs-variable\">$&#123;native_source&#125;</span>)<br><br><span class=\"hljs-keyword\">set</span>(INCS<br>    ../<br>    ../../log<br>)<br><span class=\"hljs-keyword\">include_directories</span>(<span class=\"hljs-variable\">$&#123;INCS&#125;</span>) <span class=\"hljs-comment\">#指定头文件路径</span><br><br><span class=\"hljs-keyword\">add_executable</span>(mem_test <span class=\"hljs-variable\">$&#123;SRCS&#125;</span>) <span class=\"hljs-comment\">#将SRCS中源文件生成可执行文件mem_test</span><br><span class=\"hljs-keyword\">target_link_libraries</span>(mem_test pthread) <span class=\"hljs-comment\">#添加链接库</span><br><br><span class=\"hljs-keyword\">list</span>(REMOVE_ITEM SRCS test_mem.cpp)<br><span class=\"hljs-keyword\">list</span>(APPEND SRCS test_buf.cpp)<br><span class=\"hljs-keyword\">add_executable</span>(buf_test <span class=\"hljs-variable\">$&#123;SRCS&#125;</span>)<br><span class=\"hljs-keyword\">target_link_libraries</span>(buf_test pthread)<br></code></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>参考：<br><a href=\"https://blog.csdn.net/comedate/article/details/108544656\">https://blog.csdn.net/comedate/article/details/108544656</a><br><a href=\"https://blog.csdn.net/qq_37431083/article/details/125885308\">https://blog.csdn.net/qq_37431083&#x2F;article&#x2F;details&#x2F;125885308</a></p>\n<h1 id=\"一、CMake介绍\"><a href=\"#一、CMake介绍\" class=\"headerlink\" title=\"一、CMake介绍\"></a>一、CMake介绍</h1><ul>\n<li><p>makefile: 源文件一个一个编译太麻烦，Makefile通过编写规则文件指定工程中哪些文件需要先编译，哪些需要后编译进行批处理编译；可以指定只编译新写出的代码，而不用全部重新编译，提高了开发效率。 </p>\n</li>\n<li><p>CMake：是一个开源、跨平台的编译、测试和打包工具，它使用比较简单的语言描述编译、安装的过程，<strong>自动输出</strong>Makefile或者project文件。</p>\n<p>为什么不自己写Makefile：对于大型工程，Makefile很复杂，cmake可自动生成Makefile。</p>\n<p>跨平台编译，也叫交叉编译，可在win平台上开发，编译成linux平台可执行的文件。</p>\n<p>Project文件（即Object文件）: 由源文件通过编译过程产生，是一种中间代码文件，其文件格式在Windows下为 .obj 文件，UNIX下是 .o 文件。大量的Object文件组合在一起（该过程称为”链接”）组成了可执行文件。</p>\n</li>\n</ul>\n<h1 id=\"二、CMakeLists-txt语法\"><a href=\"#二、CMakeLists-txt语法\" class=\"headerlink\" title=\"二、CMakeLists.txt语法\"></a>二、CMakeLists.txt语法</h1><h3 id=\"内部变量\"><a href=\"#内部变量\" class=\"headerlink\" title=\"内部变量\"></a>内部变量</h3><table>\n<thead>\n<tr>\n<th>变量名</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PROJECT_NAME</td>\n<td>project名称，即使用PROJECT命令设置的名称</td>\n</tr>\n<tr>\n<td>CMAKE_CXX_COMPILER</td>\n<td>指定C++编译器</td>\n</tr>\n<tr>\n<td>CMAKE_CXX_FLAGS</td>\n<td>编译C++文件时的选项</td>\n</tr>\n<tr>\n<td>CMAKE_CXX_STANDARD</td>\n<td>C++标准</td>\n</tr>\n<tr>\n<td>add_definitions</td>\n<td>添加编译选项</td>\n</tr>\n<tr>\n<td>EXECUTABLE_OUTPUT_PATH</td>\n<td>可执行文件的存放路径</td>\n</tr>\n<tr>\n<td>LIBRARY_OUTPUT_PATH</td>\n<td>库文件的存放路径</td>\n</tr>\n<tr>\n<td>CMAKE_BUILD_TYPE</td>\n<td>build 类型(Debug, Release, …)，CMAKE_BUILD_TYPE&#x3D;Debug</td>\n</tr>\n<tr>\n<td>BUILD_SHARED_LIBS</td>\n<td>指定编译成静态库还是动态库</td>\n</tr>\n</tbody></table>\n<ol>\n<li>设置最低Cmake版本要求<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-keyword\">cmake_minimum_required</span>(VERSION <span class=\"hljs-number\">3.5</span>)  <br></code></pre></td></tr></table></figure></li>\n<li><strong>project()</strong></li>\n</ol>\n<ul>\n<li>PROJECT_NAME: 必选——用来设置工程名，设置后，会把设置的值存储在CMAKE_PROJECT_NAME变量中</li>\n<li>VERSION：可选，工程版本号，有主版本号、次版本号、补丁版本号</li>\n<li>DESCRIPTION：工程简单的的描述</li>\n<li>HOMEPAGE_URL：工程主页url</li>\n<li>LANGUAGES：工程使用的语言</li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-comment\"># 指定项目名和编程语言,默认为C和C++（cxx），LANGUAGE关键字可省略</span><br><span class=\"hljs-keyword\">project</span>(cmaketest cxx)<br><span class=\"hljs-comment\"># 跟在其他关键字后不可省略</span><br><span class=\"hljs-keyword\">project</span> (camketest VERSION <span class=\"hljs-number\">10.2</span>.<span class=\"hljs-number\">1.3</span> LANGUAGES “CXX”)<br></code></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>message 打印消息<br><code>message([FATAL_ERROR] “message to display” …)</code></li>\n<li>set 可设置普通变量、环境变量、缓存条目<br> <code>set (normal_var a) #普通变量</code></li>\n<li>生成可执行程序<br>#同一个文件夹下多个源文件的编译<br><code>add_executable (helloDemo demo.cxx demo_b.cxx)</code>     </li>\n<li>指定头文件搜索路径<br><code>include_directories ($&#123;HELLO_SOURCE_DIR&#125;/Hello)</code></li>\n<li>查找当前目录下所有源文件名，并将其存储到\tDIR_CURR中<br> <code>aux_source_directory(. DIR_CURR)</code></li>\n<li>添加链接库，指明可执行文件helloDemo需要连接一个名为 function 的链接库<br><code>target_link_libraries(helloDemo function)</code></li>\n</ol>\n<h1 id=\"三、cmake命令\"><a href=\"#三、cmake命令\" class=\"headerlink\" title=\"三、cmake命令\"></a>三、cmake命令</h1><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-S</td>\n<td>指定源文件根目录，必须包含一个CMakeLists.txt文件</td>\n</tr>\n<tr>\n<td>-B</td>\n<td>指定构建目录，构建生成的中间文件和目标文件的生成路径</td>\n</tr>\n<tr>\n<td>-D</td>\n<td>使用变量，格式为-D &lt;var&gt;&#x3D;&lt;value&gt;，-D后面的空格<strong>可省略</strong>,变量在CMakeLists.txt中定义</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指明使用当前目录作为源文件目录，其中包含CMakeLists.txt文件；</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">使用build目录作为构建目录；</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">设定变量CMAKE_BUILD_TYPE的值为Debug，变量AUTHOR的值为RealCoolEngineer</span><br>cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DAUTHOR=RealCoolEngineer<br></code></pre></td></tr></table></figure>\n<h1 id=\"四、CMake使用\"><a href=\"#四、CMake使用\" class=\"headerlink\" title=\"四、CMake使用\"></a>四、CMake使用</h1><ol>\n<li>生成Makefile文件<blockquote>\n<p>cmake `CMakeLists.txt所在路径&#96;  &#x2F;&#x2F;会在当前文件夹生成build文件    </p>\n</blockquote>\n</li>\n<li>编译:进入build文件，里面会有Makefile文件，执行make，即会生成可执行文件<blockquote>\n<p>make</p>\n</blockquote>\n</li>\n<li>直接输入可执行文件文件名，执行。</li>\n</ol>\n<h1 id=\"五、项目CMakeList-txt实例\"><a href=\"#五、项目CMakeList-txt实例\" class=\"headerlink\" title=\"五、项目CMakeList.txt实例\"></a>五、项目CMakeList.txt实例</h1><p>项目来源：<a href=\"https://github.com/CandyConfident/HighPerformanceConcurrentServer\">https://github.com/CandyConfident/HighPerformanceConcurrentServer</a>  </p>\n<p>out-of-source build，与in-source build相对，即将编译输出文件与源文件放到不同目录中。此项目为out-of-source build。</p>\n<h3 id=\"build-sh\"><a href=\"#build-sh\" class=\"headerlink\" title=\"build.sh\"></a>build.sh</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span><br><br>set -x<br><br>SOURCE_DIR=`pwd`<br>BUILD_DIR=$&#123;BUILD_DIR:-../build&#125;<br>BUILD_TYPE=$&#123;BUILD_TYPE:-Debug&#125; #表示是debug版本，不是release版本<br>DEBUG_FLAG=$&#123;DEBUG_FLAG:-1&#125;<br><br>mkdir -p $BUILD_DIR/$BUILD_TYPE \\<br>    &amp;&amp; cd $BUILD_DIR/$BUILD_TYPE \\<br>    &amp;&amp; cmake \\<br>            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\<br>            -DCMAKE_DEBUG_FLAG=$DEBUG_FLAG \\<br>            $SOURCE_DIR \\<br>    &amp;&amp; make $*<br></code></pre></td></tr></table></figure>\n<h3 id=\"总CMakeLists-txt\"><a href=\"#总CMakeLists-txt\" class=\"headerlink\" title=\"总CMakeLists.txt\"></a>总CMakeLists.txt</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-keyword\">cmake_minimum_required</span>(VERSION <span class=\"hljs-number\">3.16</span>) <span class=\"hljs-comment\">#指定cmake最小版本</span><br><span class=\"hljs-keyword\">project</span>(MyServer CXX) <span class=\"hljs-comment\">#指定项目名和程序语言,cxx=c++</span><br><br><span class=\"hljs-keyword\">set</span>(CMAKE_CXX_STANDARD <span class=\"hljs-number\">20</span>) <span class=\"hljs-comment\">#指定C++标准</span><br><br><span class=\"hljs-keyword\">if</span>(CMAKE_DEBUG_FLAG) <br>    <span class=\"hljs-keyword\">set</span>(CMAKE_CXX_FLAGS <span class=\"hljs-string\">&quot; $&#123;CMAKE_CXX_FLAGS&#125; -g&quot;</span>)<br><span class=\"hljs-keyword\">endif</span>()<br><br><span class=\"hljs-keyword\">message</span>(STATUS <span class=\"hljs-string\">&quot;CMAKE_CXX_FLAGS = &quot;</span> <span class=\"hljs-variable\">$&#123;CMAKE_CXX_FLAGS&#125;</span>) <span class=\"hljs-comment\">#打印消息</span><br><br><span class=\"hljs-comment\"># 添加子目录,同时将子目录下的CMakeLists.txt文件执行</span><br><span class=\"hljs-keyword\">add_subdirectory</span>(log/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(threadpool/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(timer/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(memory/tests)<br><span class=\"hljs-keyword\">add_subdirectory</span>(net/tests)<br></code></pre></td></tr></table></figure>\n<h3 id=\"子CMakeLists-txt\"><a href=\"#子CMakeLists-txt\" class=\"headerlink\" title=\"子CMakeLists.txt\"></a>子CMakeLists.txt</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\"><span class=\"hljs-keyword\">aux_source_directory</span>(.. native_source) <span class=\"hljs-comment\">#将当前文件夹所有源文件名添加到上一级目录中native_source中</span><br><span class=\"hljs-keyword\">set</span>(SRCS  <span class=\"hljs-comment\">#设置SRCS变量为多个值</span><br>    test_mem.cpp<br>    ../../log/pr.cpp<br>    ../../log/log.cpp<br>)<br><span class=\"hljs-keyword\">list</span>(APPEND SRCS <span class=\"hljs-variable\">$&#123;native_source&#125;</span>)<br><br><span class=\"hljs-keyword\">set</span>(INCS<br>    ../<br>    ../../log<br>)<br><span class=\"hljs-keyword\">include_directories</span>(<span class=\"hljs-variable\">$&#123;INCS&#125;</span>) <span class=\"hljs-comment\">#指定头文件路径</span><br><br><span class=\"hljs-keyword\">add_executable</span>(mem_test <span class=\"hljs-variable\">$&#123;SRCS&#125;</span>) <span class=\"hljs-comment\">#将SRCS中源文件生成可执行文件mem_test</span><br><span class=\"hljs-keyword\">target_link_libraries</span>(mem_test pthread) <span class=\"hljs-comment\">#添加链接库</span><br><br><span class=\"hljs-keyword\">list</span>(REMOVE_ITEM SRCS test_mem.cpp)<br><span class=\"hljs-keyword\">list</span>(APPEND SRCS test_buf.cpp)<br><span class=\"hljs-keyword\">add_executable</span>(buf_test <span class=\"hljs-variable\">$&#123;SRCS&#125;</span>)<br><span class=\"hljs-keyword\">target_link_libraries</span>(buf_test pthread)<br></code></pre></td></tr></table></figure>\n\n\n"},{"title":"shell语法总结（1）","date":"2022-05-14T19:35:11.000Z","index_img":"/img/page/shell.png","_content":"\n参考资料：[https://www.cnblogs.com/jingmoxukong/p/7867397.html](https://www.cnblogs.com/jingmoxukong/p/7867397.html)\n# 一、简介\n> - Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问 Linux 内核的服务。  \n> - Shell 脚本（shell script），是一种为 shell 编写的脚本程序，一般文件后缀为 .sh。\n# 二、shell语法\n### 1. #!指定解释器 \n``` shell\n# 指定bash解释器\n#!/bin/bash  \n\n# 指定sh解释器\n#!/bin/sh\n```\n**注**：不指定，执行的时候会提示没有权限\n>Shell 的解释器种类众多，常见的有：\n\n- sh - 即 Bourne Shell。sh 是 Unix 标准默认的 shell。\n- bash - 即 Bourne Again Shell。bash 是 Linux 标准默认的 shell。\n- fish - 智能和用户友好的命令行 shell。\n- xiki - 使 shell 控制台更友好，更强大。\n- zsh - 功能强大的 shell 与脚本语言。\n### 2. 注释\n   - 单行注释：#开头\n   - 多行注释：“:<<EOF\"开头，”EOF\"结尾\n### 3. echo：输出\n``` shell\n# 输出hello，world!\necho \"hello, world!\"\n# \\转义字符，输出“hello”\necho \"\\\"hello\\\"\"\n# 输出到文件test.txt,没有则新建\necho \"test\" > test.txt\n```\n**注**：一个echo, 后面自动换行\n### 4. printf输出\n``` shell\n# 格式只指定了一个参数，但多出的参数仍然会按照该格式输出\nprintf \"%s %s %s\\n\" a b c d\n#  Output:\n#  a b c\n#  d \n# 如果没有参数，那么 %s 用 NULL 代替，%d 用 0 代替\nprintf \"%s and %d \\n\"\n#  Output:\n#   and 0\n```\n**注**：需手动添加换行\n### 5. 变量\n> 变量无需声明，直接赋值就会创建  \n> 访问方式，${变量} 或 $变量\n``` shell\ndword=\"hello\"  # 声明变量\necho ${dword}  # 输出变量值\n# Output: hello\n\nreadonly dword # 定义为只读\n# dword=\"bye\"  # 如果放开注释，执行时会报错\n\nunset dword    # 删除变量\necho ${dword}\n# Output: （空）\n```\n### 6. 条件语句写在[[]]中\n``` shell\nx=10\ny=20\nif [[ ${x} > ${y} ]]; then\n   echo \"${x} > ${y}\"\nelif [[ ${x} < ${y} ]]; then\n   echo \"${x} < ${y}\"\nelse\n   echo \"${x} = ${y}\"\nfi\n# Output: 10 < 20\n```\n### 7. Debug\n- -f: 禁止文件名展开（globbing）\n- -i: 让脚本以 交互 模式运行\n- -n: 读取命令，但不执行（语法检查）\n- -t: 执行完第一条命令后退出\n- -v: 在执行每条命令前，向stderr输出该命令 \n- -x: 在执行每条命令前，向stderr输出该命令以及该命令的扩展参数\n``` shell\n# 写法1\n#!/bin/bash -x\n#写法2,使用-启用选项，+禁用选项\nset -x\n```\n\n","source":"_posts/shell_note.md","raw":"---\ntitle: shell语法总结（1）\ndate: 2022-05-14 21:35:11\ntags: Linux\nindex_img: /img/page/shell.png\n---\n\n参考资料：[https://www.cnblogs.com/jingmoxukong/p/7867397.html](https://www.cnblogs.com/jingmoxukong/p/7867397.html)\n# 一、简介\n> - Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问 Linux 内核的服务。  \n> - Shell 脚本（shell script），是一种为 shell 编写的脚本程序，一般文件后缀为 .sh。\n# 二、shell语法\n### 1. #!指定解释器 \n``` shell\n# 指定bash解释器\n#!/bin/bash  \n\n# 指定sh解释器\n#!/bin/sh\n```\n**注**：不指定，执行的时候会提示没有权限\n>Shell 的解释器种类众多，常见的有：\n\n- sh - 即 Bourne Shell。sh 是 Unix 标准默认的 shell。\n- bash - 即 Bourne Again Shell。bash 是 Linux 标准默认的 shell。\n- fish - 智能和用户友好的命令行 shell。\n- xiki - 使 shell 控制台更友好，更强大。\n- zsh - 功能强大的 shell 与脚本语言。\n### 2. 注释\n   - 单行注释：#开头\n   - 多行注释：“:<<EOF\"开头，”EOF\"结尾\n### 3. echo：输出\n``` shell\n# 输出hello，world!\necho \"hello, world!\"\n# \\转义字符，输出“hello”\necho \"\\\"hello\\\"\"\n# 输出到文件test.txt,没有则新建\necho \"test\" > test.txt\n```\n**注**：一个echo, 后面自动换行\n### 4. printf输出\n``` shell\n# 格式只指定了一个参数，但多出的参数仍然会按照该格式输出\nprintf \"%s %s %s\\n\" a b c d\n#  Output:\n#  a b c\n#  d \n# 如果没有参数，那么 %s 用 NULL 代替，%d 用 0 代替\nprintf \"%s and %d \\n\"\n#  Output:\n#   and 0\n```\n**注**：需手动添加换行\n### 5. 变量\n> 变量无需声明，直接赋值就会创建  \n> 访问方式，${变量} 或 $变量\n``` shell\ndword=\"hello\"  # 声明变量\necho ${dword}  # 输出变量值\n# Output: hello\n\nreadonly dword # 定义为只读\n# dword=\"bye\"  # 如果放开注释，执行时会报错\n\nunset dword    # 删除变量\necho ${dword}\n# Output: （空）\n```\n### 6. 条件语句写在[[]]中\n``` shell\nx=10\ny=20\nif [[ ${x} > ${y} ]]; then\n   echo \"${x} > ${y}\"\nelif [[ ${x} < ${y} ]]; then\n   echo \"${x} < ${y}\"\nelse\n   echo \"${x} = ${y}\"\nfi\n# Output: 10 < 20\n```\n### 7. Debug\n- -f: 禁止文件名展开（globbing）\n- -i: 让脚本以 交互 模式运行\n- -n: 读取命令，但不执行（语法检查）\n- -t: 执行完第一条命令后退出\n- -v: 在执行每条命令前，向stderr输出该命令 \n- -x: 在执行每条命令前，向stderr输出该命令以及该命令的扩展参数\n``` shell\n# 写法1\n#!/bin/bash -x\n#写法2,使用-启用选项，+禁用选项\nset -x\n```\n\n","slug":"shell_note","published":1,"updated":"2023-03-04T15:07:17.549Z","_id":"cleu2frqq000309y2d72k0ugo","comments":1,"layout":"post","photos":[],"link":"","content":"<p>参考资料：<a href=\"https://www.cnblogs.com/jingmoxukong/p/7867397.html\">https://www.cnblogs.com/jingmoxukong/p/7867397.html</a></p>\n<h1 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h1><blockquote>\n<ul>\n<li>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问 Linux 内核的服务。  </li>\n<li>Shell 脚本（shell script），是一种为 shell 编写的脚本程序，一般文件后缀为 .sh。</li>\n</ul>\n</blockquote>\n<h1 id=\"二、shell语法\"><a href=\"#二、shell语法\" class=\"headerlink\" title=\"二、shell语法\"></a>二、shell语法</h1><h3 id=\"1-指定解释器\"><a href=\"#1-指定解释器\" class=\"headerlink\" title=\"1. #!指定解释器\"></a>1. #!指定解释器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指定bash解释器</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span>  <br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指定sh解释器</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span><br></code></pre></td></tr></table></figure>\n<p><strong>注</strong>：不指定，执行的时候会提示没有权限</p>\n<blockquote>\n<p>Shell 的解释器种类众多，常见的有：</p>\n</blockquote>\n<ul>\n<li>sh - 即 Bourne Shell。sh 是 Unix 标准默认的 shell。</li>\n<li>bash - 即 Bourne Again Shell。bash 是 Linux 标准默认的 shell。</li>\n<li>fish - 智能和用户友好的命令行 shell。</li>\n<li>xiki - 使 shell 控制台更友好，更强大。</li>\n<li>zsh - 功能强大的 shell 与脚本语言。</li>\n</ul>\n<h3 id=\"2-注释\"><a href=\"#2-注释\" class=\"headerlink\" title=\"2. 注释\"></a>2. 注释</h3><ul>\n<li>单行注释：#开头</li>\n<li>多行注释：“:&lt;&lt;EOF”开头，”EOF”结尾</li>\n</ul>\n<h3 id=\"3-echo：输出\"><a href=\"#3-echo：输出\" class=\"headerlink\" title=\"3. echo：输出\"></a>3. echo：输出</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">输出hello，world!</span><br>echo &quot;hello, world!&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">\\转义字符，输出“hello”</span><br>echo &quot;\\&quot;hello\\&quot;&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">输出到文件test.txt,没有则新建</span><br>echo &quot;test&quot; &gt; test.txt<br></code></pre></td></tr></table></figure>\n<p><strong>注</strong>：一个echo, 后面自动换行</p>\n<h3 id=\"4-printf输出\"><a href=\"#4-printf输出\" class=\"headerlink\" title=\"4. printf输出\"></a>4. printf输出</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">格式只指定了一个参数，但多出的参数仍然会按照该格式输出</span><br>printf &quot;%s %s %s\\n&quot; a b c d<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> Output:</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> a b c</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> d</span> <br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">如果没有参数，那么 %s 用 NULL 代替，%d 用 0 代替</span><br>printf &quot;%s and %d \\n&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> Output:</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">  and 0</span><br></code></pre></td></tr></table></figure>\n<p><strong>注</strong>：需手动添加换行</p>\n<h3 id=\"5-变量\"><a href=\"#5-变量\" class=\"headerlink\" title=\"5. 变量\"></a>5. 变量</h3><blockquote>\n<p>变量无需声明，直接赋值就会创建<br>访问方式，${变量} 或 $变量</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">dword=&quot;hello&quot;  # 声明变量<br>echo $&#123;dword&#125;  # 输出变量值<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Output: hello</span><br><br>readonly dword # 定义为只读<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">dword=<span class=\"hljs-string\">&quot;bye&quot;</span>  <span class=\"hljs-comment\"># 如果放开注释，执行时会报错</span></span><br><br>unset dword    # 删除变量<br>echo $&#123;dword&#125;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Output: （空）</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"6-条件语句写在-中\"><a href=\"#6-条件语句写在-中\" class=\"headerlink\" title=\"6. 条件语句写在[[]]中\"></a>6. 条件语句写在[[]]中</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">x=10<br>y=20<br>if [[ $&#123;x&#125; &gt; $&#123;y&#125; ]]; then<br>   echo &quot;$&#123;x&#125; &gt; $&#123;y&#125;&quot;<br>elif [[ $&#123;x&#125; &lt; $&#123;y&#125; ]]; then<br>   echo &quot;$&#123;x&#125; &lt; $&#123;y&#125;&quot;<br>else<br>   echo &quot;$&#123;x&#125; = $&#123;y&#125;&quot;<br>fi<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Output: 10 &lt; 20</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"7-Debug\"><a href=\"#7-Debug\" class=\"headerlink\" title=\"7. Debug\"></a>7. Debug</h3><ul>\n<li>-f: 禁止文件名展开（globbing）</li>\n<li>-i: 让脚本以 交互 模式运行</li>\n<li>-n: 读取命令，但不执行（语法检查）</li>\n<li>-t: 执行完第一条命令后退出</li>\n<li>-v: 在执行每条命令前，向stderr输出该命令 </li>\n<li>-x: 在执行每条命令前，向stderr输出该命令以及该命令的扩展参数<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">写法1</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash -x</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">写法2,使用-启用选项，+禁用选项</span><br>set -x<br></code></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>参考资料：<a href=\"https://www.cnblogs.com/jingmoxukong/p/7867397.html\">https://www.cnblogs.com/jingmoxukong/p/7867397.html</a></p>\n<h1 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h1><blockquote>\n<ul>\n<li>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问 Linux 内核的服务。  </li>\n<li>Shell 脚本（shell script），是一种为 shell 编写的脚本程序，一般文件后缀为 .sh。</li>\n</ul>\n</blockquote>\n<h1 id=\"二、shell语法\"><a href=\"#二、shell语法\" class=\"headerlink\" title=\"二、shell语法\"></a>二、shell语法</h1><h3 id=\"1-指定解释器\"><a href=\"#1-指定解释器\" class=\"headerlink\" title=\"1. #!指定解释器\"></a>1. #!指定解释器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指定bash解释器</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span>  <br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指定sh解释器</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span><br></code></pre></td></tr></table></figure>\n<p><strong>注</strong>：不指定，执行的时候会提示没有权限</p>\n<blockquote>\n<p>Shell 的解释器种类众多，常见的有：</p>\n</blockquote>\n<ul>\n<li>sh - 即 Bourne Shell。sh 是 Unix 标准默认的 shell。</li>\n<li>bash - 即 Bourne Again Shell。bash 是 Linux 标准默认的 shell。</li>\n<li>fish - 智能和用户友好的命令行 shell。</li>\n<li>xiki - 使 shell 控制台更友好，更强大。</li>\n<li>zsh - 功能强大的 shell 与脚本语言。</li>\n</ul>\n<h3 id=\"2-注释\"><a href=\"#2-注释\" class=\"headerlink\" title=\"2. 注释\"></a>2. 注释</h3><ul>\n<li>单行注释：#开头</li>\n<li>多行注释：“:&lt;&lt;EOF”开头，”EOF”结尾</li>\n</ul>\n<h3 id=\"3-echo：输出\"><a href=\"#3-echo：输出\" class=\"headerlink\" title=\"3. echo：输出\"></a>3. echo：输出</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">输出hello，world!</span><br>echo &quot;hello, world!&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">\\转义字符，输出“hello”</span><br>echo &quot;\\&quot;hello\\&quot;&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">输出到文件test.txt,没有则新建</span><br>echo &quot;test&quot; &gt; test.txt<br></code></pre></td></tr></table></figure>\n<p><strong>注</strong>：一个echo, 后面自动换行</p>\n<h3 id=\"4-printf输出\"><a href=\"#4-printf输出\" class=\"headerlink\" title=\"4. printf输出\"></a>4. printf输出</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">格式只指定了一个参数，但多出的参数仍然会按照该格式输出</span><br>printf &quot;%s %s %s\\n&quot; a b c d<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> Output:</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> a b c</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> d</span> <br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">如果没有参数，那么 %s 用 NULL 代替，%d 用 0 代替</span><br>printf &quot;%s and %d \\n&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"> Output:</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">  and 0</span><br></code></pre></td></tr></table></figure>\n<p><strong>注</strong>：需手动添加换行</p>\n<h3 id=\"5-变量\"><a href=\"#5-变量\" class=\"headerlink\" title=\"5. 变量\"></a>5. 变量</h3><blockquote>\n<p>变量无需声明，直接赋值就会创建<br>访问方式，${变量} 或 $变量</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">dword=&quot;hello&quot;  # 声明变量<br>echo $&#123;dword&#125;  # 输出变量值<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Output: hello</span><br><br>readonly dword # 定义为只读<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">dword=<span class=\"hljs-string\">&quot;bye&quot;</span>  <span class=\"hljs-comment\"># 如果放开注释，执行时会报错</span></span><br><br>unset dword    # 删除变量<br>echo $&#123;dword&#125;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Output: （空）</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"6-条件语句写在-中\"><a href=\"#6-条件语句写在-中\" class=\"headerlink\" title=\"6. 条件语句写在[[]]中\"></a>6. 条件语句写在[[]]中</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">x=10<br>y=20<br>if [[ $&#123;x&#125; &gt; $&#123;y&#125; ]]; then<br>   echo &quot;$&#123;x&#125; &gt; $&#123;y&#125;&quot;<br>elif [[ $&#123;x&#125; &lt; $&#123;y&#125; ]]; then<br>   echo &quot;$&#123;x&#125; &lt; $&#123;y&#125;&quot;<br>else<br>   echo &quot;$&#123;x&#125; = $&#123;y&#125;&quot;<br>fi<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Output: 10 &lt; 20</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"7-Debug\"><a href=\"#7-Debug\" class=\"headerlink\" title=\"7. Debug\"></a>7. Debug</h3><ul>\n<li>-f: 禁止文件名展开（globbing）</li>\n<li>-i: 让脚本以 交互 模式运行</li>\n<li>-n: 读取命令，但不执行（语法检查）</li>\n<li>-t: 执行完第一条命令后退出</li>\n<li>-v: 在执行每条命令前，向stderr输出该命令 </li>\n<li>-x: 在执行每条命令前，向stderr输出该命令以及该命令的扩展参数<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">写法1</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash -x</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">写法2,使用-启用选项，+禁用选项</span><br>set -x<br></code></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"Markdown学习笔记","date":"2021-08-10T18:15:06.000Z","index_img":"/img/page/pc.png","_content":"\n\n#~######：一级标题~六级标题（一级最大）\n\n列表：\n在首部添加 -、+、* 可形成无序列表\n数字加. 可形成有序列表\n\n文字样式：\n加粗：**文字**\n标记：==文字== （文字会变黄）\n删除文本：~~文字~~ （文字会画上一条线）\n\n图片：\n![文字，可省略](链接)\n\n链接:\n[文字](链接)\n或者直接用<>括起来\n\n引用\n>、>>、>>>分别表示一级、二级、三级引用（引用就是用灰框框起来,里面可以放文字、代码、分割线、标题、列表等）\n\n代码：\n行内代码，用``包起来\n代码块，用\n``` \n代码块\n```\n(代码高亮显示在```后面加空格和语言种类)\n\n表格：\n|标题|标题|标题|\n|:---|----|----:|\n|居左|居中|居右|\n|冒号在左边|没有冒号|冒号在右边|\n\n分割线\n用三个以上*或-或_\n\n脚注\n文字后面加[^1]\n并注明 [^1]: xxxx (写在文章末尾)\n\n换行\n两个空格+换行\n\n\n\n","source":"_posts/markdown学习笔记.md","raw":"---\ntitle: Markdown学习笔记\ndate: 2021-08-10 20:15:06\ntags: Markdown\nindex_img: /img/page/pc.png\n---\n\n\n#~######：一级标题~六级标题（一级最大）\n\n列表：\n在首部添加 -、+、* 可形成无序列表\n数字加. 可形成有序列表\n\n文字样式：\n加粗：**文字**\n标记：==文字== （文字会变黄）\n删除文本：~~文字~~ （文字会画上一条线）\n\n图片：\n![文字，可省略](链接)\n\n链接:\n[文字](链接)\n或者直接用<>括起来\n\n引用\n>、>>、>>>分别表示一级、二级、三级引用（引用就是用灰框框起来,里面可以放文字、代码、分割线、标题、列表等）\n\n代码：\n行内代码，用``包起来\n代码块，用\n``` \n代码块\n```\n(代码高亮显示在```后面加空格和语言种类)\n\n表格：\n|标题|标题|标题|\n|:---|----|----:|\n|居左|居中|居右|\n|冒号在左边|没有冒号|冒号在右边|\n\n分割线\n用三个以上*或-或_\n\n脚注\n文字后面加[^1]\n并注明 [^1]: xxxx (写在文章末尾)\n\n换行\n两个空格+换行\n\n\n\n","slug":"markdown学习笔记","published":1,"updated":"2023-03-04T15:07:02.787Z","_id":"cleu2frqs000509y2br1pcrj4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#<del>######：一级标题</del>六级标题（一级最大）</p>\n<p>列表：<br>在首部添加 -、+、* 可形成无序列表<br>数字加. 可形成有序列表</p>\n<p>文字样式：<br>加粗：<strong>文字</strong><br>标记：&#x3D;&#x3D;文字&#x3D;&#x3D; （文字会变黄）<br>删除文本：<del>文字</del> （文字会画上一条线）</p>\n<p>图片：<br><img src=\"/%E9%93%BE%E6%8E%A5\" alt=\"文字，可省略\"></p>\n<p>链接:<br><a href=\"%E9%93%BE%E6%8E%A5\">文字</a><br>或者直接用&lt;&gt;括起来</p>\n<p>引用</p>\n<blockquote>\n<p>、&gt;&gt;、&gt;&gt;&gt;分别表示一级、二级、三级引用（引用就是用灰框框起来,里面可以放文字、代码、分割线、标题、列表等）</p>\n</blockquote>\n<p>代码：<br>行内代码，用&#96;&#96;包起来<br>代码块，用</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">代码块<br></code></pre></td></tr></table></figure>\n<p>(代码高亮显示在&#96;&#96;&#96;后面加空格和语言种类)</p>\n<p>表格：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">标题</th>\n<th>标题</th>\n<th align=\"right\">标题</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">居左</td>\n<td>居中</td>\n<td align=\"right\">居右</td>\n</tr>\n<tr>\n<td align=\"left\">冒号在左边</td>\n<td>没有冒号</td>\n<td align=\"right\">冒号在右边</td>\n</tr>\n</tbody></table>\n<p>分割线<br>用三个以上*或-或_</p>\n<p>脚注<br>文字后面加<sup id=\"fnref:1\" class=\"footnote-ref\"><a href=\"#fn:1\" rel=\"footnote\"><span class=\"hint--top hint--rounded\" aria-label=\"xxxx (写在文章末尾)\">[1]</span></a></sup><br>并注明 </p>\n<p>换行<br>两个空格+换行</p>\n<section class=\"footnotes\"><div class=\"footnote-list\"><ol><li><span id=\"fn:1\" class=\"footnote-text\"><span>xxxx (写在文章末尾)\n<a href=\"#fnref:1\" rev=\"footnote\" class=\"footnote-backref\"> ↩</a></span></span></li></ol></div></section>","site":{"data":{}},"excerpt":"","more":"<p>#<del>######：一级标题</del>六级标题（一级最大）</p>\n<p>列表：<br>在首部添加 -、+、* 可形成无序列表<br>数字加. 可形成有序列表</p>\n<p>文字样式：<br>加粗：<strong>文字</strong><br>标记：&#x3D;&#x3D;文字&#x3D;&#x3D; （文字会变黄）<br>删除文本：<del>文字</del> （文字会画上一条线）</p>\n<p>图片：<br><img src=\"/%E9%93%BE%E6%8E%A5\" alt=\"文字，可省略\"></p>\n<p>链接:<br><a href=\"%E9%93%BE%E6%8E%A5\">文字</a><br>或者直接用&lt;&gt;括起来</p>\n<p>引用</p>\n<blockquote>\n<p>、&gt;&gt;、&gt;&gt;&gt;分别表示一级、二级、三级引用（引用就是用灰框框起来,里面可以放文字、代码、分割线、标题、列表等）</p>\n</blockquote>\n<p>代码：<br>行内代码，用&#96;&#96;包起来<br>代码块，用</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">代码块<br></code></pre></td></tr></table></figure>\n<p>(代码高亮显示在&#96;&#96;&#96;后面加空格和语言种类)</p>\n<p>表格：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">标题</th>\n<th>标题</th>\n<th align=\"right\">标题</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">居左</td>\n<td>居中</td>\n<td align=\"right\">居右</td>\n</tr>\n<tr>\n<td align=\"left\">冒号在左边</td>\n<td>没有冒号</td>\n<td align=\"right\">冒号在右边</td>\n</tr>\n</tbody></table>\n<p>分割线<br>用三个以上*或-或_</p>\n<p>脚注<br>文字后面加<sup id=\"fnref:1\" class=\"footnote-ref\"><a href=\"#fn:1\" rel=\"footnote\"><span class=\"hint--top hint--rounded\" aria-label=\"xxxx (写在文章末尾)\">[1]</span></a></sup><br>并注明 </p>\n<p>换行<br>两个空格+换行</p>\n<section class=\"footnotes\"><div class=\"footnote-list\"><ol><li><span id=\"fn:1\" class=\"footnote-text\"><span>xxxx (写在文章末尾)\n<a href=\"#fnref:1\" rev=\"footnote\" class=\"footnote-backref\"> ↩</a></span></span></li></ol></div></section>"},{"title":"SQL语法总结","date":"2021-09-14T19:35:11.000Z","index_img":"/img/page/sql.png","_content":"\n# 一. 打开\n打开SQL sever management studio -> connect -> 新建一个query\n# 二. SQL语句\n> SQL语句对大小写不敏感，分为DDL（数据定义）语句，DML（数据操作）语句。\n> #### DDL语句: 创建、删除、增加索引、键、约束\n> * CREATE DATABASE - 创建新数据库\n> * ALTER DATABASE - 修改数据库\n> * CREATE TABLE - 创建新表\n> * ALTER TABLE - 变更（改变）数据库表\n> * DROP TABLE - 删除表\n> * CREATE INDEX - 创建索引（搜索键）\n> * DROP INDEX - 删除索引\n> #### DML语句：查询和更新  \n> * SELECT - 从数据库表中获取数据\n> * UPDATE - 更新数据库表中的数据\n> * DELETE - 从数据库表中删除数据\n> * INSERT INTO - 向数据库表中插入数据\n\n ### 1. 切换数据库 \n `use database_name`\n ### 2. 创建数据库 \n `create database database_name`\n ### 3. 创建表\n > create table 表名(\n 列名1 数据类型 是否为空（可省略）,\n 列名2 数据类型 是否为空（可省略）,\n ...\n )\n ```sql\n //建表students, 主键为student__ID\n create table students(\n s_ID int not null primary key,\n s_name varchar(20) not null,\n s_sex char(2) not null,\n s_phoneNumber varchar(11)\n)\n ```\n ### 4. 删除表\n `drop table table_name`\n ### 5. 插入数据\n > * 可不写全所有列  \n insert into table_name(列名1，列名2，..)values(值1，值2，..)  \n > * 省略列名，必须写全所有列  \ninsert into table_name values(值1，值2，..)\n > * 一次性插入多组值  \n insert into table_name values\n (值1，值2，..)，\n (值1，值2，..)，\n (值1，值2，..)  \n **注**：字符串用单引号括起来\n ```sql\n //方法1\ninsert into students(s_ID, s_name, s_sex, s_phoneNumber)values(01, 'tom', '男','121212121')\ninsert into students(s_ID, s_name, s_sex)values(06, 'luna', '女')\n//方法2\ninsert into students values(02, 'jack', '男','221212121')\n//方法3\ninsert into students values\n(03, 'Amy', '女','201212121'),\n(04, 'bree', '女','921212121'),\n(05, 'mike', '男','821212121')\n ```\n ### 6. 删除数据\n > delete from 表名 where 条件，==没有条件的话，整张表都会被删除==\n ```sql\ndelete from students where s_ID = 01\ndelete from students\n```\n### 7. 修改表结构\n> **增加列：** alter table 表名 add  字段名 数据类型  \n> **删除列：** alter table 表名 drop column 字段名  \n> **修改字段类型：** alter table 表名 alter column 字段名 新类型\n```sql\n//增加列\nalter table students add s_age int\n//删除列\nalter table students drop column s_age\n//修改字段类型\nalter table students alter column s_age int\n```\n### 8. 更改数据\n> update 表名 set 列名 = 列值, 列名 = 列值,.. where 条件, ==不写条件则修改全表==  \n> `update students set s_age = 20`\n### 9. 查询\n- #### 查全表\n> select * from 表名\n- #### 查部分列\n> select 列名1, 列名2 from 表名\n- #### 列取别名\n> select 列名1 as 新列名1, 列名2 新列名2 from 表名\n**注**：as可以省略\n- #### 列名加运算符\n``` sql\n//查询学生姓名以及学生两年前的年龄\nselect s_name as 姓名, s_age-2 两年前的年龄 from students\n//查询学生姓名、两年前的年龄\n//isnull(expr1,expr2)用于避免null值参与计算  MySQL用ifnull()\n//如果expr1是null,函数的结果就是expr2;否则就是expr1\nselect s_name, isnull(s_age, 20)-2 from students\n//可用+做字符串或列与列的拼接,列得是字符串型 \nselect '姓名:'+s_name+s_sex from students\n```\n- #### distinct关键字\n> 去掉重复的行，所查字段都一样才会被去掉  \n`select distinct class_ID, s_name from students`\n- #### 条件查询\n> 1. 比较运算：>、< 、>=、<=、=、= 、!=或<>  \n> **注**： null值不能作比较  \n> NULL值与任何其它值的比较（即使是NULL）永远不会为“真”\n> 2. between ... and ... 数值范围条件  \n> **注**：包括边界\n> 3. in关键字，集合列表范围查询  \n> **注**：not in集合里不能包含null值，因为要判断和集合里的所有元素都不等才会返回true，包含null值无法比较，任何与之比较的元素都会返回false\n``` sql\n //查询tom的全部信息\n select * from students where s_name = 'tom'\n //查询不属于1班的学生\n select * from students where class_ID != 1\n //查询年龄在21-29之间的学生\n select * from students where s_age between 21 and 29\n //查Jack、linda、tom的信息\n select * from students where s_name in ('jack','linda','tom')\n```\n> 4. 逻辑运算：and、or、not  \n> **注**：and的优先级高于or，也可以使用小括号强制优先级\n``` sql\n//查询属于1班且学号小于5的学生\nselect * from students where class_ID = 1 and s_ID < 5\n//查询除tom之外的学生信息\nselect * from students where not s_name = 'tom'\n//查询姓名为tom，或学号为2的学生\nselect * from students where s_name = 'tom' or s_ID = 2\n```\n> 5. 判空： is null、is not null\n``` sql\n //查询电话号码为空的学生\n select * from students where s_phoneNumber is null\n ```\n > 5. 模糊查询：like + %或_ \n %表示0个或多个字符，_表示一个字符\n ``` sql\n  //查询姓名以l开头的学生\n select * from students where s_name like 'l%'\n //查询名字里含m的学生\n select * from students where s_name like '%m%'\n //查询名字第二个字符为o的\n select * from students where s_name like '_o%'\n ```\n - #### order by 对结果集排序\n > 默认升序asc,降序为desc  \n **注**：升序null值会排在最前面  \n select 列1， 列2 from 表名 order by 列名1\n ``` sql\n  //先按年龄升序，年龄一样则按学号升序\n select s_name, s_age, s_ID from students order by s_age, s_ID \n\n //先按年龄降序，年龄一样按学号升序\n  select s_name, s_age, s_ID from students order by s_age desc, s_ID\n  ```\n  - #### top关键字：限定查询记录条数\n  **注**：mysql用limit(a, b),表示从a开始条记录，a从0开始计数。limit(n)表示返回前n条\n  ``` sql\n  //查询前三名学生\n  select top 3 * from students\n  //查第n-m条记录\n  //select top m-n+1 * from 表名 where 列名 not in (select top n-1 列名 from 表名)\n  //查询2-7名学生\n  select top 6 * from students \n  where s_ID not in (select top 1 s_ID from students)\n  ```\n  - #### 聚合函数：max、min、count、sum、avg\n  > **注**：count(),只要括号里的不为null，都加1\n  ``` sql\n   //查年龄总值、最大值、电话不为空记录数\n  select sum(s_age) sum, max(s_age) max, avg(s_age) avg, count(s_phoneNumber) count from students\n  ```\n  - #### 分组查询：group by\n  > **注**：查询的列要在group by子句中；sql sever 不能取别名， MySQL可以\n  ``` sql\n  //按年龄分组\n  select s_age from students group by s_age\n  //计算每组记录数\n  select s_age, count(*) from students group by s_age\n  //按年龄和性别分组\n  select s_age, s_sex from students group by s_age, s_sex\n  ```\n  **注**：在where语句中不能使用聚合函数，可以在having语句中使用聚合函数\n \n where是对每条表记录的条件限定，having是对结果集记录的条件限定\n ``` sql\n select s_sex, avg(s_age) from students \n group bys_sex \n having avg(s_age) > 25\n \n //先筛出年龄>25的，再按年龄分组，在筛出分组后年龄大于29的\n  select s_age from students \n  where s_age > 25 \n  group by s_age \n  having s_age > 29\n ```\n - #### 多表连接\n > 1. 等值连接\n ``` sql\n  //查学生信息和专业\n  select student.*, class.Speciality \n  from student, class \n  where student.clno = class.clno\n  //取别名\n  select * from student s, class c where s.clno = c.clno\n  ```\n  > 2. 内连接  \n  select 列1，列2 from 表1 \n  > inner join 表2\n  > on 等值条件\n  ``` sql\n  select s.*, c.Speciality from student s \n  inner join class c on s.clno = c.clno \n  where sage > 20\n  ```\n  **注**：内连接的结果和等值连接的结果是相同的，只是写法不同\n  只会显示符合连接条件的数据，不会显示所有的数据\n  > 3. 外连接：\n  > 分为左外连接、右外连接，左外连接会列出左表全部记录，右表没有符合的记录则用null值填充；右外连接会列出右表全部记录，左表没有符合的记录则用null值填充\n  ``` sql\n  select * from student s right outer join class c on c.clno = s.clno\n  ```\n  4. 全连接：表1 full join 表2 on 连接条件\n   **注**：mysql没有full join，可用左连接union右连接代替\n  - #### 子查询\n  \n  > - 相关子查询：子查询中需要用到父查询中的值\n  ``` sql\n  //查询某同学选修课程成绩高于他选修的所有课程平均成绩的课程号\n  select cno from sc x where grade > \n  (select avg(grad) from sc y where x.sno = y.sno)\n  ```\n  工作原理：扫描父查询表（如 SC 表）中的每一条记录，然后将当前这条记录中的，在子查询中会用到的值代入到子查询中去，然后执行子查询并得到结果（可以看成是返回值），然后再将这个结果代入到父查询的条件中，判断父查询的条件表达式的值是否为 True，若为 True，则将当前 SC 表中的这条记录放到结果集中去。若为 False 则不放。\n  > - 非相关子查询：脱离父查询单独执行\n  >- 子查询的结果只有一行就是**单行子查询**；反之就是**多行子查询**。单行子查询只能进行比较。多行子查询可用in、any、all、exists、not exists  \n> **exist原理**：[https://zhuanlan.zhihu.com/p/20005249](https://zhuanlan.zhihu.com/p/20005249)\n\n- #### 取交集：union、union all \n  >union会排除重复行，并排序，union all不会\n  >union all执行效率更高\n  ``` sql  \n  //找出id为奇数且name不以m开头的员工bonus为salary，否则为0，并排序\n  select employee_id, salary bonus from Employees  \n  where employee_id % 2 = 1 and name not like 'm%'  \n  union all  \n  select employee_id, salary*0 bonus from Employees  \n  where employee_id % 2 = 0 or name like 'm%'\n  order by employee_id\n  ```  \n# 三、例句\n1. case用法\n``` sql\nselect id,\n    case when p_id is null then 'Root'\n        when id in (select p_id from tree) then 'Inner'\n        else 'Leaf'\n    end as Type\nfrom tree\n```\n2. **mysql** datadiff(date1, date2)函数\n> 函数返回date1 -date2的计算结果;如果参数传递的是日期时间值，DATEDIFF函数仅将日期部分用于计算，并==忽略时间部分==\n``` sql\nSELECT activity_date day, COUNT(DISTINCT  user_id) active_users\nFROM Activity\nWHERE DATEDIFF(\"2019-07-27\", activity_date) < 30 AND DATEDIFF(\"2019-07-27\", activity_date) >= 0\nGROUP BY activity_date;\n```\n> TIMESTAMPDIFF(DAY,start,end):返回两个日期指定单位的时间差(指定单位可以是年，季度，月，星期，天数，小时，分钟，秒等等)\n3. if(条件, 为true时=, 为false时=)\n``` sql\n//性别转换\nupdate Salary set sex = if(sex = 'm', 'f', 'm')\n```\n4. **注**：子查询要命名，不然会报错。  \n  **注**：不能在同一个 sql 语句中，先 select 同一个表的某些值，然后再 update 这个表。\n``` sql\nDELETE from Person Where Id not in \n(select Id from \n( Select MIN(Id) as Id From Person Group by Email ) t)\n```\n5. concat(a, b)拼接a,b ;left(name,count)返回name前count字符。\n``` sql\nselect user_id, \nconcat(upper(left(name, 1)), lower(substr(name, 2))) name\nfrom Users order by user_id\n```\n6. groupconcat()：将分组后每组的某一字段拼接起来。默认用,分割\n``` sql\nselect sell_date,count(distinct product) num_sold,\ngroup_concat(distinct product separator ',') products\nfrom activities\ngroup by sell_date\norder by sell_date\n```\n7. with tableA as（select语句）：相当于建立了一个临时表tableA\n```sql\nwith tmp as\n(select employee_id from Employees\nunion all\nselect employee_id from Salaries)\nselect employee_id from tmp group by 1 having count(1) = 1 order by 1 \n```\n8. \n``` sql\n//加引号表示将固定值store1放到列store\nselect product_id,\"store1\" store, store1 price from Products where store1 is not null\n``` \n\n# 四、\n1. e-r图与关系模式转换\n   - 1对1关系：任一方的主键加入到另一方中。\n   - 1对n关系：1方的主键加入到n方，并把联系上的属性也加入到n方。\n   - m对n关系：联系自成一张表，并把双方的主键加进来当联合主键。\n2. 数据库设计规范——三大范式\n  - 第一范式：保持每列的原子性，即每个字段都是不可拆分的原子值。\n  - 第二范式：确保每列都和主键相关，而不能和主键的某一部分相关（针对联合主键）。为避免数据冗余。  \n  可能存在的问题：数据冗余、删除异常、插入异常、更新异常  \n  例如：订单信息表中主键为订单编号和商品编号，属性包括，商品订购数量，商品价格，商品型号等。因为存在不同订单订购同一商品，因此同一个商品的信息可能被记录多次（数据冗余）；删除一条记录可能会删除一类商品的信息（删除异常）；插入一个商品信息必须要有订单号（插入异常）；更新一类商品信息要操作好几行（更新异常）。  \n  它不满足第二范式，商品价格、商品型号只与商品有关，应该建一张商品表，订单信息表只保留商品编号、订购数量等。\n  - 第三范式：必须满足第二范式。非主属性必须直接依赖于主键，不能传递依赖于非主属性。\n3. 函数依赖\n   - 部分函数依赖：（A,B）决定C,A也能决定C或B也能决定C，则C部分依赖于（A,B）\n   - 完全函数依赖：（A,B）决定C,A不能决定C,B不能决定C，则C完全函数依赖于（A,B）\n   - 传递依赖：A->B(B!->A),B->C，则C传递依赖于x  \n  例：学号，宿舍，住宿费  \n4. - mysql的执行过程\n   [https://www.jianshu.com/p/338092a0a8c6](https://www.jianshu.com/p/338092a0a8c6)\n   - 索引[https://bbs.huaweicloud.com/blogs/333163](https://bbs.huaweicloud.com/blogs/333163)\n  \n  \n\n ","source":"_posts/sql学习.md","raw":"---\ntitle: SQL语法总结\ndate: 2021-09-14 21:35:11\ntags: SQL\nindex_img: /img/page/sql.png\n---\n\n# 一. 打开\n打开SQL sever management studio -> connect -> 新建一个query\n# 二. SQL语句\n> SQL语句对大小写不敏感，分为DDL（数据定义）语句，DML（数据操作）语句。\n> #### DDL语句: 创建、删除、增加索引、键、约束\n> * CREATE DATABASE - 创建新数据库\n> * ALTER DATABASE - 修改数据库\n> * CREATE TABLE - 创建新表\n> * ALTER TABLE - 变更（改变）数据库表\n> * DROP TABLE - 删除表\n> * CREATE INDEX - 创建索引（搜索键）\n> * DROP INDEX - 删除索引\n> #### DML语句：查询和更新  \n> * SELECT - 从数据库表中获取数据\n> * UPDATE - 更新数据库表中的数据\n> * DELETE - 从数据库表中删除数据\n> * INSERT INTO - 向数据库表中插入数据\n\n ### 1. 切换数据库 \n `use database_name`\n ### 2. 创建数据库 \n `create database database_name`\n ### 3. 创建表\n > create table 表名(\n 列名1 数据类型 是否为空（可省略）,\n 列名2 数据类型 是否为空（可省略）,\n ...\n )\n ```sql\n //建表students, 主键为student__ID\n create table students(\n s_ID int not null primary key,\n s_name varchar(20) not null,\n s_sex char(2) not null,\n s_phoneNumber varchar(11)\n)\n ```\n ### 4. 删除表\n `drop table table_name`\n ### 5. 插入数据\n > * 可不写全所有列  \n insert into table_name(列名1，列名2，..)values(值1，值2，..)  \n > * 省略列名，必须写全所有列  \ninsert into table_name values(值1，值2，..)\n > * 一次性插入多组值  \n insert into table_name values\n (值1，值2，..)，\n (值1，值2，..)，\n (值1，值2，..)  \n **注**：字符串用单引号括起来\n ```sql\n //方法1\ninsert into students(s_ID, s_name, s_sex, s_phoneNumber)values(01, 'tom', '男','121212121')\ninsert into students(s_ID, s_name, s_sex)values(06, 'luna', '女')\n//方法2\ninsert into students values(02, 'jack', '男','221212121')\n//方法3\ninsert into students values\n(03, 'Amy', '女','201212121'),\n(04, 'bree', '女','921212121'),\n(05, 'mike', '男','821212121')\n ```\n ### 6. 删除数据\n > delete from 表名 where 条件，==没有条件的话，整张表都会被删除==\n ```sql\ndelete from students where s_ID = 01\ndelete from students\n```\n### 7. 修改表结构\n> **增加列：** alter table 表名 add  字段名 数据类型  \n> **删除列：** alter table 表名 drop column 字段名  \n> **修改字段类型：** alter table 表名 alter column 字段名 新类型\n```sql\n//增加列\nalter table students add s_age int\n//删除列\nalter table students drop column s_age\n//修改字段类型\nalter table students alter column s_age int\n```\n### 8. 更改数据\n> update 表名 set 列名 = 列值, 列名 = 列值,.. where 条件, ==不写条件则修改全表==  \n> `update students set s_age = 20`\n### 9. 查询\n- #### 查全表\n> select * from 表名\n- #### 查部分列\n> select 列名1, 列名2 from 表名\n- #### 列取别名\n> select 列名1 as 新列名1, 列名2 新列名2 from 表名\n**注**：as可以省略\n- #### 列名加运算符\n``` sql\n//查询学生姓名以及学生两年前的年龄\nselect s_name as 姓名, s_age-2 两年前的年龄 from students\n//查询学生姓名、两年前的年龄\n//isnull(expr1,expr2)用于避免null值参与计算  MySQL用ifnull()\n//如果expr1是null,函数的结果就是expr2;否则就是expr1\nselect s_name, isnull(s_age, 20)-2 from students\n//可用+做字符串或列与列的拼接,列得是字符串型 \nselect '姓名:'+s_name+s_sex from students\n```\n- #### distinct关键字\n> 去掉重复的行，所查字段都一样才会被去掉  \n`select distinct class_ID, s_name from students`\n- #### 条件查询\n> 1. 比较运算：>、< 、>=、<=、=、= 、!=或<>  \n> **注**： null值不能作比较  \n> NULL值与任何其它值的比较（即使是NULL）永远不会为“真”\n> 2. between ... and ... 数值范围条件  \n> **注**：包括边界\n> 3. in关键字，集合列表范围查询  \n> **注**：not in集合里不能包含null值，因为要判断和集合里的所有元素都不等才会返回true，包含null值无法比较，任何与之比较的元素都会返回false\n``` sql\n //查询tom的全部信息\n select * from students where s_name = 'tom'\n //查询不属于1班的学生\n select * from students where class_ID != 1\n //查询年龄在21-29之间的学生\n select * from students where s_age between 21 and 29\n //查Jack、linda、tom的信息\n select * from students where s_name in ('jack','linda','tom')\n```\n> 4. 逻辑运算：and、or、not  \n> **注**：and的优先级高于or，也可以使用小括号强制优先级\n``` sql\n//查询属于1班且学号小于5的学生\nselect * from students where class_ID = 1 and s_ID < 5\n//查询除tom之外的学生信息\nselect * from students where not s_name = 'tom'\n//查询姓名为tom，或学号为2的学生\nselect * from students where s_name = 'tom' or s_ID = 2\n```\n> 5. 判空： is null、is not null\n``` sql\n //查询电话号码为空的学生\n select * from students where s_phoneNumber is null\n ```\n > 5. 模糊查询：like + %或_ \n %表示0个或多个字符，_表示一个字符\n ``` sql\n  //查询姓名以l开头的学生\n select * from students where s_name like 'l%'\n //查询名字里含m的学生\n select * from students where s_name like '%m%'\n //查询名字第二个字符为o的\n select * from students where s_name like '_o%'\n ```\n - #### order by 对结果集排序\n > 默认升序asc,降序为desc  \n **注**：升序null值会排在最前面  \n select 列1， 列2 from 表名 order by 列名1\n ``` sql\n  //先按年龄升序，年龄一样则按学号升序\n select s_name, s_age, s_ID from students order by s_age, s_ID \n\n //先按年龄降序，年龄一样按学号升序\n  select s_name, s_age, s_ID from students order by s_age desc, s_ID\n  ```\n  - #### top关键字：限定查询记录条数\n  **注**：mysql用limit(a, b),表示从a开始条记录，a从0开始计数。limit(n)表示返回前n条\n  ``` sql\n  //查询前三名学生\n  select top 3 * from students\n  //查第n-m条记录\n  //select top m-n+1 * from 表名 where 列名 not in (select top n-1 列名 from 表名)\n  //查询2-7名学生\n  select top 6 * from students \n  where s_ID not in (select top 1 s_ID from students)\n  ```\n  - #### 聚合函数：max、min、count、sum、avg\n  > **注**：count(),只要括号里的不为null，都加1\n  ``` sql\n   //查年龄总值、最大值、电话不为空记录数\n  select sum(s_age) sum, max(s_age) max, avg(s_age) avg, count(s_phoneNumber) count from students\n  ```\n  - #### 分组查询：group by\n  > **注**：查询的列要在group by子句中；sql sever 不能取别名， MySQL可以\n  ``` sql\n  //按年龄分组\n  select s_age from students group by s_age\n  //计算每组记录数\n  select s_age, count(*) from students group by s_age\n  //按年龄和性别分组\n  select s_age, s_sex from students group by s_age, s_sex\n  ```\n  **注**：在where语句中不能使用聚合函数，可以在having语句中使用聚合函数\n \n where是对每条表记录的条件限定，having是对结果集记录的条件限定\n ``` sql\n select s_sex, avg(s_age) from students \n group bys_sex \n having avg(s_age) > 25\n \n //先筛出年龄>25的，再按年龄分组，在筛出分组后年龄大于29的\n  select s_age from students \n  where s_age > 25 \n  group by s_age \n  having s_age > 29\n ```\n - #### 多表连接\n > 1. 等值连接\n ``` sql\n  //查学生信息和专业\n  select student.*, class.Speciality \n  from student, class \n  where student.clno = class.clno\n  //取别名\n  select * from student s, class c where s.clno = c.clno\n  ```\n  > 2. 内连接  \n  select 列1，列2 from 表1 \n  > inner join 表2\n  > on 等值条件\n  ``` sql\n  select s.*, c.Speciality from student s \n  inner join class c on s.clno = c.clno \n  where sage > 20\n  ```\n  **注**：内连接的结果和等值连接的结果是相同的，只是写法不同\n  只会显示符合连接条件的数据，不会显示所有的数据\n  > 3. 外连接：\n  > 分为左外连接、右外连接，左外连接会列出左表全部记录，右表没有符合的记录则用null值填充；右外连接会列出右表全部记录，左表没有符合的记录则用null值填充\n  ``` sql\n  select * from student s right outer join class c on c.clno = s.clno\n  ```\n  4. 全连接：表1 full join 表2 on 连接条件\n   **注**：mysql没有full join，可用左连接union右连接代替\n  - #### 子查询\n  \n  > - 相关子查询：子查询中需要用到父查询中的值\n  ``` sql\n  //查询某同学选修课程成绩高于他选修的所有课程平均成绩的课程号\n  select cno from sc x where grade > \n  (select avg(grad) from sc y where x.sno = y.sno)\n  ```\n  工作原理：扫描父查询表（如 SC 表）中的每一条记录，然后将当前这条记录中的，在子查询中会用到的值代入到子查询中去，然后执行子查询并得到结果（可以看成是返回值），然后再将这个结果代入到父查询的条件中，判断父查询的条件表达式的值是否为 True，若为 True，则将当前 SC 表中的这条记录放到结果集中去。若为 False 则不放。\n  > - 非相关子查询：脱离父查询单独执行\n  >- 子查询的结果只有一行就是**单行子查询**；反之就是**多行子查询**。单行子查询只能进行比较。多行子查询可用in、any、all、exists、not exists  \n> **exist原理**：[https://zhuanlan.zhihu.com/p/20005249](https://zhuanlan.zhihu.com/p/20005249)\n\n- #### 取交集：union、union all \n  >union会排除重复行，并排序，union all不会\n  >union all执行效率更高\n  ``` sql  \n  //找出id为奇数且name不以m开头的员工bonus为salary，否则为0，并排序\n  select employee_id, salary bonus from Employees  \n  where employee_id % 2 = 1 and name not like 'm%'  \n  union all  \n  select employee_id, salary*0 bonus from Employees  \n  where employee_id % 2 = 0 or name like 'm%'\n  order by employee_id\n  ```  \n# 三、例句\n1. case用法\n``` sql\nselect id,\n    case when p_id is null then 'Root'\n        when id in (select p_id from tree) then 'Inner'\n        else 'Leaf'\n    end as Type\nfrom tree\n```\n2. **mysql** datadiff(date1, date2)函数\n> 函数返回date1 -date2的计算结果;如果参数传递的是日期时间值，DATEDIFF函数仅将日期部分用于计算，并==忽略时间部分==\n``` sql\nSELECT activity_date day, COUNT(DISTINCT  user_id) active_users\nFROM Activity\nWHERE DATEDIFF(\"2019-07-27\", activity_date) < 30 AND DATEDIFF(\"2019-07-27\", activity_date) >= 0\nGROUP BY activity_date;\n```\n> TIMESTAMPDIFF(DAY,start,end):返回两个日期指定单位的时间差(指定单位可以是年，季度，月，星期，天数，小时，分钟，秒等等)\n3. if(条件, 为true时=, 为false时=)\n``` sql\n//性别转换\nupdate Salary set sex = if(sex = 'm', 'f', 'm')\n```\n4. **注**：子查询要命名，不然会报错。  \n  **注**：不能在同一个 sql 语句中，先 select 同一个表的某些值，然后再 update 这个表。\n``` sql\nDELETE from Person Where Id not in \n(select Id from \n( Select MIN(Id) as Id From Person Group by Email ) t)\n```\n5. concat(a, b)拼接a,b ;left(name,count)返回name前count字符。\n``` sql\nselect user_id, \nconcat(upper(left(name, 1)), lower(substr(name, 2))) name\nfrom Users order by user_id\n```\n6. groupconcat()：将分组后每组的某一字段拼接起来。默认用,分割\n``` sql\nselect sell_date,count(distinct product) num_sold,\ngroup_concat(distinct product separator ',') products\nfrom activities\ngroup by sell_date\norder by sell_date\n```\n7. with tableA as（select语句）：相当于建立了一个临时表tableA\n```sql\nwith tmp as\n(select employee_id from Employees\nunion all\nselect employee_id from Salaries)\nselect employee_id from tmp group by 1 having count(1) = 1 order by 1 \n```\n8. \n``` sql\n//加引号表示将固定值store1放到列store\nselect product_id,\"store1\" store, store1 price from Products where store1 is not null\n``` \n\n# 四、\n1. e-r图与关系模式转换\n   - 1对1关系：任一方的主键加入到另一方中。\n   - 1对n关系：1方的主键加入到n方，并把联系上的属性也加入到n方。\n   - m对n关系：联系自成一张表，并把双方的主键加进来当联合主键。\n2. 数据库设计规范——三大范式\n  - 第一范式：保持每列的原子性，即每个字段都是不可拆分的原子值。\n  - 第二范式：确保每列都和主键相关，而不能和主键的某一部分相关（针对联合主键）。为避免数据冗余。  \n  可能存在的问题：数据冗余、删除异常、插入异常、更新异常  \n  例如：订单信息表中主键为订单编号和商品编号，属性包括，商品订购数量，商品价格，商品型号等。因为存在不同订单订购同一商品，因此同一个商品的信息可能被记录多次（数据冗余）；删除一条记录可能会删除一类商品的信息（删除异常）；插入一个商品信息必须要有订单号（插入异常）；更新一类商品信息要操作好几行（更新异常）。  \n  它不满足第二范式，商品价格、商品型号只与商品有关，应该建一张商品表，订单信息表只保留商品编号、订购数量等。\n  - 第三范式：必须满足第二范式。非主属性必须直接依赖于主键，不能传递依赖于非主属性。\n3. 函数依赖\n   - 部分函数依赖：（A,B）决定C,A也能决定C或B也能决定C，则C部分依赖于（A,B）\n   - 完全函数依赖：（A,B）决定C,A不能决定C,B不能决定C，则C完全函数依赖于（A,B）\n   - 传递依赖：A->B(B!->A),B->C，则C传递依赖于x  \n  例：学号，宿舍，住宿费  \n4. - mysql的执行过程\n   [https://www.jianshu.com/p/338092a0a8c6](https://www.jianshu.com/p/338092a0a8c6)\n   - 索引[https://bbs.huaweicloud.com/blogs/333163](https://bbs.huaweicloud.com/blogs/333163)\n  \n  \n\n ","slug":"sql学习","published":1,"updated":"2023-03-04T14:41:34.609Z","_id":"cleu2frqt000609y2epq85r7r","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"一-打开\"><a href=\"#一-打开\" class=\"headerlink\" title=\"一. 打开\"></a>一. 打开</h1><p>打开SQL sever management studio -&gt; connect -&gt; 新建一个query</p>\n<h1 id=\"二-SQL语句\"><a href=\"#二-SQL语句\" class=\"headerlink\" title=\"二. SQL语句\"></a>二. SQL语句</h1><blockquote>\n<p>SQL语句对大小写不敏感，分为DDL（数据定义）语句，DML（数据操作）语句。</p>\n<h4 id=\"DDL语句-创建、删除、增加索引、键、约束\"><a href=\"#DDL语句-创建、删除、增加索引、键、约束\" class=\"headerlink\" title=\"DDL语句: 创建、删除、增加索引、键、约束\"></a>DDL语句: 创建、删除、增加索引、键、约束</h4><ul>\n<li>CREATE DATABASE - 创建新数据库</li>\n<li>ALTER DATABASE - 修改数据库</li>\n<li>CREATE TABLE - 创建新表</li>\n<li>ALTER TABLE - 变更（改变）数据库表</li>\n<li>DROP TABLE - 删除表</li>\n<li>CREATE INDEX - 创建索引（搜索键）</li>\n<li>DROP INDEX - 删除索引</li>\n</ul>\n<h4 id=\"DML语句：查询和更新\"><a href=\"#DML语句：查询和更新\" class=\"headerlink\" title=\"DML语句：查询和更新\"></a>DML语句：查询和更新</h4><ul>\n<li>SELECT - 从数据库表中获取数据</li>\n<li>UPDATE - 更新数据库表中的数据</li>\n<li>DELETE - 从数据库表中删除数据</li>\n<li>INSERT INTO - 向数据库表中插入数据</li>\n</ul>\n</blockquote>\n<h3 id=\"1-切换数据库\"><a href=\"#1-切换数据库\" class=\"headerlink\" title=\"1. 切换数据库\"></a>1. 切换数据库</h3><p> <code>use database_name</code></p>\n<h3 id=\"2-创建数据库\"><a href=\"#2-创建数据库\" class=\"headerlink\" title=\"2. 创建数据库\"></a>2. 创建数据库</h3><p> <code>create database database_name</code></p>\n<h3 id=\"3-创建表\"><a href=\"#3-创建表\" class=\"headerlink\" title=\"3. 创建表\"></a>3. 创建表</h3><blockquote>\n<p>create table 表名(<br> 列名1 数据类型 是否为空（可省略）,<br> 列名2 数据类型 是否为空（可省略）,<br> …<br> )<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>建表students, 主键为student__ID<br> <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> students(<br> s_ID <span class=\"hljs-type\">int</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">primary</span> key,<br> s_name <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span>,<br> s_sex <span class=\"hljs-type\">char</span>(<span class=\"hljs-number\">2</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span>,<br> s_phoneNumber <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">11</span>)<br>)<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"4-删除表\"><a href=\"#4-删除表\" class=\"headerlink\" title=\"4. 删除表\"></a>4. 删除表</h3><p> <code>drop table table_name</code></p>\n<h3 id=\"5-插入数据\"><a href=\"#5-插入数据\" class=\"headerlink\" title=\"5. 插入数据\"></a>5. 插入数据</h3><blockquote>\n<ul>\n<li>可不写全所有列<br> insert into table_name(列名1，列名2，..)values(值1，值2，..)  </li>\n<li>省略列名，必须写全所有列<br>insert into table_name values(值1，值2，..)</li>\n<li>一次性插入多组值<br> insert into table_name values<br> (值1，值2，..)，<br> (值1，值2，..)，<br> (值1，值2，..)<br> <strong>注</strong>：字符串用单引号括起来 <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>方法<span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students(s_ID, s_name, s_sex, s_phoneNumber)<span class=\"hljs-keyword\">values</span>(<span class=\"hljs-number\">01</span>, <span class=\"hljs-string\">&#x27;tom&#x27;</span>, <span class=\"hljs-string\">&#x27;男&#x27;</span>,<span class=\"hljs-string\">&#x27;121212121&#x27;</span>)<br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students(s_ID, s_name, s_sex)<span class=\"hljs-keyword\">values</span>(<span class=\"hljs-number\">06</span>, <span class=\"hljs-string\">&#x27;luna&#x27;</span>, <span class=\"hljs-string\">&#x27;女&#x27;</span>)<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>方法<span class=\"hljs-number\">2</span><br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students <span class=\"hljs-keyword\">values</span>(<span class=\"hljs-number\">02</span>, <span class=\"hljs-string\">&#x27;jack&#x27;</span>, <span class=\"hljs-string\">&#x27;男&#x27;</span>,<span class=\"hljs-string\">&#x27;221212121&#x27;</span>)<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>方法<span class=\"hljs-number\">3</span><br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students <span class=\"hljs-keyword\">values</span><br>(<span class=\"hljs-number\">03</span>, <span class=\"hljs-string\">&#x27;Amy&#x27;</span>, <span class=\"hljs-string\">&#x27;女&#x27;</span>,<span class=\"hljs-string\">&#x27;201212121&#x27;</span>),<br>(<span class=\"hljs-number\">04</span>, <span class=\"hljs-string\">&#x27;bree&#x27;</span>, <span class=\"hljs-string\">&#x27;女&#x27;</span>,<span class=\"hljs-string\">&#x27;921212121&#x27;</span>),<br>(<span class=\"hljs-number\">05</span>, <span class=\"hljs-string\">&#x27;mike&#x27;</span>, <span class=\"hljs-string\">&#x27;男&#x27;</span>,<span class=\"hljs-string\">&#x27;821212121&#x27;</span>)<br></code></pre></td></tr></table></figure></li>\n</ul>\n</blockquote>\n<h3 id=\"6-删除数据\"><a href=\"#6-删除数据\" class=\"headerlink\" title=\"6. 删除数据\"></a>6. 删除数据</h3><blockquote>\n<p>delete from 表名 where 条件，&#x3D;&#x3D;没有条件的话，整张表都会被删除&#x3D;&#x3D;<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_ID <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">01</span><br><span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">from</span> students<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"7-修改表结构\"><a href=\"#7-修改表结构\" class=\"headerlink\" title=\"7. 修改表结构\"></a>7. 修改表结构</h3><blockquote>\n<p><strong>增加列：</strong> alter table 表名 add  字段名 数据类型<br><strong>删除列：</strong> alter table 表名 drop column 字段名<br><strong>修改字段类型：</strong> alter table 表名 alter column 字段名 新类型</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>增加列<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> students <span class=\"hljs-keyword\">add</span> s_age <span class=\"hljs-type\">int</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>删除列<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> students <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">column</span> s_age<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>修改字段类型<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> students <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">column</span> s_age <span class=\"hljs-type\">int</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"8-更改数据\"><a href=\"#8-更改数据\" class=\"headerlink\" title=\"8. 更改数据\"></a>8. 更改数据</h3><blockquote>\n<p>update 表名 set 列名 &#x3D; 列值, 列名 &#x3D; 列值,.. where 条件, &#x3D;&#x3D;不写条件则修改全表&#x3D;&#x3D;<br><code>update students set s_age = 20</code></p>\n</blockquote>\n<h3 id=\"9-查询\"><a href=\"#9-查询\" class=\"headerlink\" title=\"9. 查询\"></a>9. 查询</h3><ul>\n<li><h4 id=\"查全表\"><a href=\"#查全表\" class=\"headerlink\" title=\"查全表\"></a>查全表</h4></li>\n</ul>\n<blockquote>\n<p>select * from 表名</p>\n</blockquote>\n<ul>\n<li><h4 id=\"查部分列\"><a href=\"#查部分列\" class=\"headerlink\" title=\"查部分列\"></a>查部分列</h4></li>\n</ul>\n<blockquote>\n<p>select 列名1, 列名2 from 表名</p>\n</blockquote>\n<ul>\n<li><h4 id=\"列取别名\"><a href=\"#列取别名\" class=\"headerlink\" title=\"列取别名\"></a>列取别名</h4></li>\n</ul>\n<blockquote>\n<p>select 列名1 as 新列名1, 列名2 新列名2 from 表名<br><strong>注</strong>：as可以省略</p>\n</blockquote>\n<ul>\n<li><h4 id=\"列名加运算符\"><a href=\"#列名加运算符\" class=\"headerlink\" title=\"列名加运算符\"></a>列名加运算符</h4></li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询学生姓名以及学生两年前的年龄<br><span class=\"hljs-keyword\">select</span> s_name <span class=\"hljs-keyword\">as</span> 姓名, s_age<span class=\"hljs-number\">-2</span> 两年前的年龄 <span class=\"hljs-keyword\">from</span> students<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询学生姓名、两年前的年龄<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>isnull(expr1,expr2)用于避免<span class=\"hljs-keyword\">null</span>值参与计算  MySQL用ifnull()<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>如果expr1是<span class=\"hljs-keyword\">null</span>,函数的结果就是expr2;否则就是expr1<br><span class=\"hljs-keyword\">select</span> s_name, isnull(s_age, <span class=\"hljs-number\">20</span>)<span class=\"hljs-number\">-2</span> <span class=\"hljs-keyword\">from</span> students<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>可用<span class=\"hljs-operator\">+</span>做字符串或列与列的拼接,列得是字符串型 <br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-string\">&#x27;姓名:&#x27;</span><span class=\"hljs-operator\">+</span>s_name<span class=\"hljs-operator\">+</span>s_sex <span class=\"hljs-keyword\">from</span> students<br></code></pre></td></tr></table></figure>\n<ul>\n<li><h4 id=\"distinct关键字\"><a href=\"#distinct关键字\" class=\"headerlink\" title=\"distinct关键字\"></a>distinct关键字</h4></li>\n</ul>\n<blockquote>\n<p>去掉重复的行，所查字段都一样才会被去掉<br><code>select distinct class_ID, s_name from students</code></p>\n</blockquote>\n<ul>\n<li><h4 id=\"条件查询\"><a href=\"#条件查询\" class=\"headerlink\" title=\"条件查询\"></a>条件查询</h4></li>\n</ul>\n<blockquote>\n<ol>\n<li>比较运算：&gt;、&lt; 、&gt;&#x3D;、&lt;&#x3D;、&#x3D;、&#x3D; 、!&#x3D;或&lt;&gt;<br><strong>注</strong>： null值不能作比较<br>NULL值与任何其它值的比较（即使是NULL）永远不会为“真”</li>\n<li>between … and … 数值范围条件<br><strong>注</strong>：包括边界</li>\n<li>in关键字，集合列表范围查询<br><strong>注</strong>：not in集合里不能包含null值，因为要判断和集合里的所有元素都不等才会返回true，包含null值无法比较，任何与之比较的元素都会返回false</li>\n</ol>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询tom的全部信息<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;tom&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询不属于<span class=\"hljs-number\">1</span>班的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> class_ID <span class=\"hljs-operator\">!=</span> <span class=\"hljs-number\">1</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询年龄在<span class=\"hljs-number\">21</span><span class=\"hljs-number\">-29</span>之间的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_age <span class=\"hljs-keyword\">between</span> <span class=\"hljs-number\">21</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">29</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查Jack、linda、tom的信息<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-string\">&#x27;jack&#x27;</span>,<span class=\"hljs-string\">&#x27;linda&#x27;</span>,<span class=\"hljs-string\">&#x27;tom&#x27;</span>)<br></code></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"4\">\n<li>逻辑运算：and、or、not<br><strong>注</strong>：and的优先级高于or，也可以使用小括号强制优先级</li>\n</ol>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询属于<span class=\"hljs-number\">1</span>班且学号小于<span class=\"hljs-number\">5</span>的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> class_ID <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> s_ID <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-number\">5</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询除tom之外的学生信息<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">not</span> s_name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;tom&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询姓名为tom，或学号为<span class=\"hljs-number\">2</span>的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;tom&#x27;</span> <span class=\"hljs-keyword\">or</span> s_ID <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"5\">\n<li>判空： is null、is not null</li>\n</ol>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询电话号码为空的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_phoneNumber <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">null</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"5\">\n<li>模糊查询：like + %或_<br> %表示0个或多个字符，_表示一个字符 <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询姓名以l开头的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;l%&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询名字里含m的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;%m%&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询名字第二个字符为o的<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;_o%&#x27;</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n</blockquote>\n<ul>\n<li><h4 id=\"order-by-对结果集排序\"><a href=\"#order-by-对结果集排序\" class=\"headerlink\" title=\"order by 对结果集排序\"></a>order by 对结果集排序</h4></li>\n</ul>\n<blockquote>\n<p>默认升序asc,降序为desc<br> <strong>注</strong>：升序null值会排在最前面<br> select 列1， 列2 from 表名 order by 列名1<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>先按年龄升序，年龄一样则按学号升序<br><span class=\"hljs-keyword\">select</span> s_name, s_age, s_ID <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> s_age, s_ID <br><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>先按年龄降序，年龄一样按学号升序<br> <span class=\"hljs-keyword\">select</span> s_name, s_age, s_ID <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> s_age <span class=\"hljs-keyword\">desc</span>, s_ID<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li><h4 id=\"top关键字：限定查询记录条数\"><a href=\"#top关键字：限定查询记录条数\" class=\"headerlink\" title=\"top关键字：限定查询记录条数\"></a>top关键字：限定查询记录条数</h4></li>\n</ul>\n<p>  <strong>注</strong>：mysql用limit(a, b),表示从a开始条记录，a从0开始计数。limit(n)表示返回前n条<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询前三名学生<br><span class=\"hljs-keyword\">select</span> top <span class=\"hljs-number\">3</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查第n<span class=\"hljs-operator\">-</span>m条记录<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">select</span> top m<span class=\"hljs-operator\">-</span>n<span class=\"hljs-operator\">+</span><span class=\"hljs-number\">1</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> 表名 <span class=\"hljs-keyword\">where</span> 列名 <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-keyword\">select</span> top n<span class=\"hljs-number\">-1</span> 列名 <span class=\"hljs-keyword\">from</span> 表名)<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-7</span>名学生<br><span class=\"hljs-keyword\">select</span> top <span class=\"hljs-number\">6</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <br><span class=\"hljs-keyword\">where</span> s_ID <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-keyword\">select</span> top <span class=\"hljs-number\">1</span> s_ID <span class=\"hljs-keyword\">from</span> students)<br></code></pre></td></tr></table></figure></p>\n<ul>\n<li><h4 id=\"聚合函数：max、min、count、sum、avg\"><a href=\"#聚合函数：max、min、count、sum、avg\" class=\"headerlink\" title=\"聚合函数：max、min、count、sum、avg\"></a>聚合函数：max、min、count、sum、avg</h4></li>\n</ul>\n<blockquote>\n<p><strong>注</strong>：count(),只要括号里的不为null，都加1<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查年龄总值、最大值、电话不为空记录数<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-built_in\">sum</span>(s_age) sum, <span class=\"hljs-built_in\">max</span>(s_age) max, <span class=\"hljs-built_in\">avg</span>(s_age) avg, <span class=\"hljs-built_in\">count</span>(s_phoneNumber) count <span class=\"hljs-keyword\">from</span> students<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li><h4 id=\"分组查询：group-by\"><a href=\"#分组查询：group-by\" class=\"headerlink\" title=\"分组查询：group by\"></a>分组查询：group by</h4></li>\n</ul>\n<blockquote>\n<p><strong>注</strong>：查询的列要在group by子句中；sql sever 不能取别名， MySQL可以<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>按年龄分组<br><span class=\"hljs-keyword\">select</span> s_age <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>计算每组记录数<br><span class=\"hljs-keyword\">select</span> s_age, <span class=\"hljs-built_in\">count</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>按年龄和性别分组<br><span class=\"hljs-keyword\">select</span> s_age, s_sex <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age, s_sex<br></code></pre></td></tr></table></figure><br>  <strong>注</strong>：在where语句中不能使用聚合函数，可以在having语句中使用聚合函数</p>\n</blockquote>\n<p> where是对每条表记录的条件限定，having是对结果集记录的条件限定<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> s_sex, <span class=\"hljs-built_in\">avg</span>(s_age) <span class=\"hljs-keyword\">from</span> students <br><span class=\"hljs-keyword\">group</span> bys_sex <br><span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">avg</span>(s_age) <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">25</span><br><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>先筛出年龄<span class=\"hljs-operator\">&gt;</span><span class=\"hljs-number\">25</span>的，再按年龄分组，在筛出分组后年龄大于<span class=\"hljs-number\">29</span>的<br> <span class=\"hljs-keyword\">select</span> s_age <span class=\"hljs-keyword\">from</span> students <br> <span class=\"hljs-keyword\">where</span> s_age <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">25</span> <br> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age <br> <span class=\"hljs-keyword\">having</span> s_age <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">29</span><br></code></pre></td></tr></table></figure></p>\n<ul>\n<li><h4 id=\"多表连接\"><a href=\"#多表连接\" class=\"headerlink\" title=\"多表连接\"></a>多表连接</h4></li>\n</ul>\n<blockquote>\n<ol>\n<li>等值连接 <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查学生信息和专业<br><span class=\"hljs-keyword\">select</span> student.<span class=\"hljs-operator\">*</span>, class.Speciality <br><span class=\"hljs-keyword\">from</span> student, class <br><span class=\"hljs-keyword\">where</span> student.clno <span class=\"hljs-operator\">=</span> class.clno<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>取别名<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> student s, class c <span class=\"hljs-keyword\">where</span> s.clno <span class=\"hljs-operator\">=</span> c.clno<br></code></pre></td></tr></table></figure></li>\n<li>内连接<br>  select 列1，列2 from 表1<br>inner join 表2<br>on 等值条件  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> s.<span class=\"hljs-operator\">*</span>, c.Speciality <span class=\"hljs-keyword\">from</span> student s <br><span class=\"hljs-keyword\">inner</span> <span class=\"hljs-keyword\">join</span> class c <span class=\"hljs-keyword\">on</span> s.clno <span class=\"hljs-operator\">=</span> c.clno <br><span class=\"hljs-keyword\">where</span> sage <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">20</span><br></code></pre></td></tr></table></figure>\n  <strong>注</strong>：内连接的结果和等值连接的结果是相同的，只是写法不同<br>  只会显示符合连接条件的数据，不会显示所有的数据</li>\n<li>外连接：<br>分为左外连接、右外连接，左外连接会列出左表全部记录，右表没有符合的记录则用null值填充；右外连接会列出右表全部记录，左表没有符合的记录则用null值填充  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> student s <span class=\"hljs-keyword\">right</span> <span class=\"hljs-keyword\">outer</span> <span class=\"hljs-keyword\">join</span> class c <span class=\"hljs-keyword\">on</span> c.clno <span class=\"hljs-operator\">=</span> s.clno<br></code></pre></td></tr></table></figure></li>\n<li>全连接：表1 full join 表2 on 连接条件<br>   <strong>注</strong>：mysql没有full join，可用左连接union右连接代替</li>\n</ol>\n</blockquote>\n<ul>\n<li><h4 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h4></li>\n</ul>\n<blockquote>\n<ul>\n<li>相关子查询：子查询中需要用到父查询中的值<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询某同学选修课程成绩高于他选修的所有课程平均成绩的课程号<br><span class=\"hljs-keyword\">select</span> cno <span class=\"hljs-keyword\">from</span> sc x <span class=\"hljs-keyword\">where</span> grade <span class=\"hljs-operator\">&gt;</span> <br>(<span class=\"hljs-keyword\">select</span> <span class=\"hljs-built_in\">avg</span>(grad) <span class=\"hljs-keyword\">from</span> sc y <span class=\"hljs-keyword\">where</span> x.sno <span class=\"hljs-operator\">=</span> y.sno)<br></code></pre></td></tr></table></figure>\n工作原理：扫描父查询表（如 SC 表）中的每一条记录，然后将当前这条记录中的，在子查询中会用到的值代入到子查询中去，然后执行子查询并得到结果（可以看成是返回值），然后再将这个结果代入到父查询的条件中，判断父查询的条件表达式的值是否为 True，若为 True，则将当前 SC 表中的这条记录放到结果集中去。若为 False 则不放。</li>\n<li>非相关子查询：脱离父查询单独执行</li>\n<li>子查询的结果只有一行就是<strong>单行子查询</strong>；反之就是<strong>多行子查询</strong>。单行子查询只能进行比较。多行子查询可用in、any、all、exists、not exists<br><strong>exist原理</strong>：<a href=\"https://zhuanlan.zhihu.com/p/20005249\">https://zhuanlan.zhihu.com/p/20005249</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><h4 id=\"取交集：union、union-all\"><a href=\"#取交集：union、union-all\" class=\"headerlink\" title=\"取交集：union、union all\"></a>取交集：union、union all</h4><blockquote>\n<p>union会排除重复行，并排序，union all不会<br>union all执行效率更高</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">  <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>找出id为奇数且name不以m开头的员工bonus为salary，否则为<span class=\"hljs-number\">0</span>，并排序<br>  <span class=\"hljs-keyword\">select</span> employee_id, salary bonus <span class=\"hljs-keyword\">from</span> Employees  <br>  <span class=\"hljs-keyword\">where</span> employee_id <span class=\"hljs-operator\">%</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> name <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;m%&#x27;</span>  <br>  <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">all</span>  <br>  <span class=\"hljs-keyword\">select</span> employee_id, salary<span class=\"hljs-operator\">*</span><span class=\"hljs-number\">0</span> bonus <span class=\"hljs-keyword\">from</span> Employees  <br>  <span class=\"hljs-keyword\">where</span> employee_id <span class=\"hljs-operator\">%</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;m%&#x27;</span><br>  <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> employee_id<br>  ```  <br># 三、例句<br><span class=\"hljs-number\">1.</span> <span class=\"hljs-keyword\">case</span>用法<br>``` <span class=\"hljs-keyword\">sql</span><br><span class=\"hljs-keyword\">select</span> id,<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-keyword\">when</span> p_id <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-string\">&#x27;Root&#x27;</span><br>        <span class=\"hljs-keyword\">when</span> id <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-keyword\">select</span> p_id <span class=\"hljs-keyword\">from</span> tree) <span class=\"hljs-keyword\">then</span> <span class=\"hljs-string\">&#x27;Inner&#x27;</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">&#x27;Leaf&#x27;</span><br>    <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">as</span> Type<br><span class=\"hljs-keyword\">from</span> tree<br></code></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"2\">\n<li><strong>mysql</strong> datadiff(date1, date2)函数<blockquote>\n<p>函数返回date1 -date2的计算结果;如果参数传递的是日期时间值，DATEDIFF函数仅将日期部分用于计算，并&#x3D;&#x3D;忽略时间部分&#x3D;&#x3D;</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span> activity_date <span class=\"hljs-keyword\">day</span>, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-keyword\">DISTINCT</span>  user_id) active_users<br><span class=\"hljs-keyword\">FROM</span> Activity<br><span class=\"hljs-keyword\">WHERE</span> DATEDIFF(&quot;2019-07-27&quot;, activity_date) <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-number\">30</span> <span class=\"hljs-keyword\">AND</span> DATEDIFF(&quot;2019-07-27&quot;, activity_date) <span class=\"hljs-operator\">&gt;=</span> <span class=\"hljs-number\">0</span><br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> activity_date;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>TIMESTAMPDIFF(DAY,start,end):返回两个日期指定单位的时间差(指定单位可以是年，季度，月，星期，天数，小时，分钟，秒等等)</p>\n</blockquote>\n</li>\n<li>if(条件, 为true时&#x3D;, 为false时&#x3D;)<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>性别转换<br><span class=\"hljs-keyword\">update</span> Salary <span class=\"hljs-keyword\">set</span> sex <span class=\"hljs-operator\">=</span> if(sex <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;m&#x27;</span>, <span class=\"hljs-string\">&#x27;f&#x27;</span>, <span class=\"hljs-string\">&#x27;m&#x27;</span>)<br></code></pre></td></tr></table></figure></li>\n<li><strong>注</strong>：子查询要命名，不然会报错。<br>  <strong>注</strong>：不能在同一个 sql 语句中，先 select 同一个表的某些值，然后再 update 这个表。<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">from</span> Person <span class=\"hljs-keyword\">Where</span> Id <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> <br>(<span class=\"hljs-keyword\">select</span> Id <span class=\"hljs-keyword\">from</span> <br>( <span class=\"hljs-keyword\">Select</span> <span class=\"hljs-built_in\">MIN</span>(Id) <span class=\"hljs-keyword\">as</span> Id <span class=\"hljs-keyword\">From</span> Person <span class=\"hljs-keyword\">Group</span> <span class=\"hljs-keyword\">by</span> Email ) t)<br></code></pre></td></tr></table></figure></li>\n<li>concat(a, b)拼接a,b ;left(name,count)返回name前count字符。<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> user_id, <br>concat(<span class=\"hljs-built_in\">upper</span>(<span class=\"hljs-keyword\">left</span>(name, <span class=\"hljs-number\">1</span>)), <span class=\"hljs-built_in\">lower</span>(substr(name, <span class=\"hljs-number\">2</span>))) name<br><span class=\"hljs-keyword\">from</span> Users <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> user_id<br></code></pre></td></tr></table></figure></li>\n<li>groupconcat()：将分组后每组的某一字段拼接起来。默认用,分割<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> sell_date,<span class=\"hljs-built_in\">count</span>(<span class=\"hljs-keyword\">distinct</span> product) num_sold,<br>group_concat(<span class=\"hljs-keyword\">distinct</span> product separator <span class=\"hljs-string\">&#x27;,&#x27;</span>) products<br><span class=\"hljs-keyword\">from</span> activities<br><span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> sell_date<br><span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> sell_date<br></code></pre></td></tr></table></figure></li>\n<li>with tableA as（select语句）：相当于建立了一个临时表tableA<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">with</span> tmp <span class=\"hljs-keyword\">as</span><br>(<span class=\"hljs-keyword\">select</span> employee_id <span class=\"hljs-keyword\">from</span> Employees<br><span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">all</span><br><span class=\"hljs-keyword\">select</span> employee_id <span class=\"hljs-keyword\">from</span> Salaries)<br><span class=\"hljs-keyword\">select</span> employee_id <span class=\"hljs-keyword\">from</span> tmp <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">count</span>(<span class=\"hljs-number\">1</span>) <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> <br></code></pre></td></tr></table></figure></li>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>加引号表示将固定值store1放到列store<br><span class=\"hljs-keyword\">select</span> product_id,&quot;store1&quot; store, store1 price <span class=\"hljs-keyword\">from</span> Products <span class=\"hljs-keyword\">where</span> store1 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"四、\"><a href=\"#四、\" class=\"headerlink\" title=\"四、\"></a>四、</h1><ol>\n<li>e-r图与关系模式转换<ul>\n<li>1对1关系：任一方的主键加入到另一方中。</li>\n<li>1对n关系：1方的主键加入到n方，并把联系上的属性也加入到n方。</li>\n<li>m对n关系：联系自成一张表，并把双方的主键加进来当联合主键。</li>\n</ul>\n</li>\n<li>数据库设计规范——三大范式</li>\n</ol>\n<ul>\n<li>第一范式：保持每列的原子性，即每个字段都是不可拆分的原子值。</li>\n<li>第二范式：确保每列都和主键相关，而不能和主键的某一部分相关（针对联合主键）。为避免数据冗余。<br>  可能存在的问题：数据冗余、删除异常、插入异常、更新异常<br>  例如：订单信息表中主键为订单编号和商品编号，属性包括，商品订购数量，商品价格，商品型号等。因为存在不同订单订购同一商品，因此同一个商品的信息可能被记录多次（数据冗余）；删除一条记录可能会删除一类商品的信息（删除异常）；插入一个商品信息必须要有订单号（插入异常）；更新一类商品信息要操作好几行（更新异常）。<br>  它不满足第二范式，商品价格、商品型号只与商品有关，应该建一张商品表，订单信息表只保留商品编号、订购数量等。</li>\n<li>第三范式：必须满足第二范式。非主属性必须直接依赖于主键，不能传递依赖于非主属性。</li>\n</ul>\n<ol start=\"3\">\n<li>函数依赖<ul>\n<li>部分函数依赖：（A,B）决定C,A也能决定C或B也能决定C，则C部分依赖于（A,B）</li>\n<li>完全函数依赖：（A,B）决定C,A不能决定C,B不能决定C，则C完全函数依赖于（A,B）</li>\n<li>传递依赖：A-&gt;B(B!-&gt;A),B-&gt;C，则C传递依赖于x<br>例：学号，宿舍，住宿费</li>\n</ul>\n</li>\n<li><ul>\n<li>mysql的执行过程<br><a href=\"https://www.jianshu.com/p/338092a0a8c6\">https://www.jianshu.com/p/338092a0a8c6</a></li>\n<li>索引<a href=\"https://bbs.huaweicloud.com/blogs/333163\">https://bbs.huaweicloud.com/blogs/333163</a></li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一-打开\"><a href=\"#一-打开\" class=\"headerlink\" title=\"一. 打开\"></a>一. 打开</h1><p>打开SQL sever management studio -&gt; connect -&gt; 新建一个query</p>\n<h1 id=\"二-SQL语句\"><a href=\"#二-SQL语句\" class=\"headerlink\" title=\"二. SQL语句\"></a>二. SQL语句</h1><blockquote>\n<p>SQL语句对大小写不敏感，分为DDL（数据定义）语句，DML（数据操作）语句。</p>\n<h4 id=\"DDL语句-创建、删除、增加索引、键、约束\"><a href=\"#DDL语句-创建、删除、增加索引、键、约束\" class=\"headerlink\" title=\"DDL语句: 创建、删除、增加索引、键、约束\"></a>DDL语句: 创建、删除、增加索引、键、约束</h4><ul>\n<li>CREATE DATABASE - 创建新数据库</li>\n<li>ALTER DATABASE - 修改数据库</li>\n<li>CREATE TABLE - 创建新表</li>\n<li>ALTER TABLE - 变更（改变）数据库表</li>\n<li>DROP TABLE - 删除表</li>\n<li>CREATE INDEX - 创建索引（搜索键）</li>\n<li>DROP INDEX - 删除索引</li>\n</ul>\n<h4 id=\"DML语句：查询和更新\"><a href=\"#DML语句：查询和更新\" class=\"headerlink\" title=\"DML语句：查询和更新\"></a>DML语句：查询和更新</h4><ul>\n<li>SELECT - 从数据库表中获取数据</li>\n<li>UPDATE - 更新数据库表中的数据</li>\n<li>DELETE - 从数据库表中删除数据</li>\n<li>INSERT INTO - 向数据库表中插入数据</li>\n</ul>\n</blockquote>\n<h3 id=\"1-切换数据库\"><a href=\"#1-切换数据库\" class=\"headerlink\" title=\"1. 切换数据库\"></a>1. 切换数据库</h3><p> <code>use database_name</code></p>\n<h3 id=\"2-创建数据库\"><a href=\"#2-创建数据库\" class=\"headerlink\" title=\"2. 创建数据库\"></a>2. 创建数据库</h3><p> <code>create database database_name</code></p>\n<h3 id=\"3-创建表\"><a href=\"#3-创建表\" class=\"headerlink\" title=\"3. 创建表\"></a>3. 创建表</h3><blockquote>\n<p>create table 表名(<br> 列名1 数据类型 是否为空（可省略）,<br> 列名2 数据类型 是否为空（可省略）,<br> …<br> )<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>建表students, 主键为student__ID<br> <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> students(<br> s_ID <span class=\"hljs-type\">int</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">primary</span> key,<br> s_name <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span>,<br> s_sex <span class=\"hljs-type\">char</span>(<span class=\"hljs-number\">2</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span>,<br> s_phoneNumber <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">11</span>)<br>)<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"4-删除表\"><a href=\"#4-删除表\" class=\"headerlink\" title=\"4. 删除表\"></a>4. 删除表</h3><p> <code>drop table table_name</code></p>\n<h3 id=\"5-插入数据\"><a href=\"#5-插入数据\" class=\"headerlink\" title=\"5. 插入数据\"></a>5. 插入数据</h3><blockquote>\n<ul>\n<li>可不写全所有列<br> insert into table_name(列名1，列名2，..)values(值1，值2，..)  </li>\n<li>省略列名，必须写全所有列<br>insert into table_name values(值1，值2，..)</li>\n<li>一次性插入多组值<br> insert into table_name values<br> (值1，值2，..)，<br> (值1，值2，..)，<br> (值1，值2，..)<br> <strong>注</strong>：字符串用单引号括起来 <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>方法<span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students(s_ID, s_name, s_sex, s_phoneNumber)<span class=\"hljs-keyword\">values</span>(<span class=\"hljs-number\">01</span>, <span class=\"hljs-string\">&#x27;tom&#x27;</span>, <span class=\"hljs-string\">&#x27;男&#x27;</span>,<span class=\"hljs-string\">&#x27;121212121&#x27;</span>)<br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students(s_ID, s_name, s_sex)<span class=\"hljs-keyword\">values</span>(<span class=\"hljs-number\">06</span>, <span class=\"hljs-string\">&#x27;luna&#x27;</span>, <span class=\"hljs-string\">&#x27;女&#x27;</span>)<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>方法<span class=\"hljs-number\">2</span><br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students <span class=\"hljs-keyword\">values</span>(<span class=\"hljs-number\">02</span>, <span class=\"hljs-string\">&#x27;jack&#x27;</span>, <span class=\"hljs-string\">&#x27;男&#x27;</span>,<span class=\"hljs-string\">&#x27;221212121&#x27;</span>)<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>方法<span class=\"hljs-number\">3</span><br><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> students <span class=\"hljs-keyword\">values</span><br>(<span class=\"hljs-number\">03</span>, <span class=\"hljs-string\">&#x27;Amy&#x27;</span>, <span class=\"hljs-string\">&#x27;女&#x27;</span>,<span class=\"hljs-string\">&#x27;201212121&#x27;</span>),<br>(<span class=\"hljs-number\">04</span>, <span class=\"hljs-string\">&#x27;bree&#x27;</span>, <span class=\"hljs-string\">&#x27;女&#x27;</span>,<span class=\"hljs-string\">&#x27;921212121&#x27;</span>),<br>(<span class=\"hljs-number\">05</span>, <span class=\"hljs-string\">&#x27;mike&#x27;</span>, <span class=\"hljs-string\">&#x27;男&#x27;</span>,<span class=\"hljs-string\">&#x27;821212121&#x27;</span>)<br></code></pre></td></tr></table></figure></li>\n</ul>\n</blockquote>\n<h3 id=\"6-删除数据\"><a href=\"#6-删除数据\" class=\"headerlink\" title=\"6. 删除数据\"></a>6. 删除数据</h3><blockquote>\n<p>delete from 表名 where 条件，&#x3D;&#x3D;没有条件的话，整张表都会被删除&#x3D;&#x3D;<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_ID <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">01</span><br><span class=\"hljs-keyword\">delete</span> <span class=\"hljs-keyword\">from</span> students<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"7-修改表结构\"><a href=\"#7-修改表结构\" class=\"headerlink\" title=\"7. 修改表结构\"></a>7. 修改表结构</h3><blockquote>\n<p><strong>增加列：</strong> alter table 表名 add  字段名 数据类型<br><strong>删除列：</strong> alter table 表名 drop column 字段名<br><strong>修改字段类型：</strong> alter table 表名 alter column 字段名 新类型</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>增加列<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> students <span class=\"hljs-keyword\">add</span> s_age <span class=\"hljs-type\">int</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>删除列<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> students <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">column</span> s_age<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>修改字段类型<br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> students <span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">column</span> s_age <span class=\"hljs-type\">int</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"8-更改数据\"><a href=\"#8-更改数据\" class=\"headerlink\" title=\"8. 更改数据\"></a>8. 更改数据</h3><blockquote>\n<p>update 表名 set 列名 &#x3D; 列值, 列名 &#x3D; 列值,.. where 条件, &#x3D;&#x3D;不写条件则修改全表&#x3D;&#x3D;<br><code>update students set s_age = 20</code></p>\n</blockquote>\n<h3 id=\"9-查询\"><a href=\"#9-查询\" class=\"headerlink\" title=\"9. 查询\"></a>9. 查询</h3><ul>\n<li><h4 id=\"查全表\"><a href=\"#查全表\" class=\"headerlink\" title=\"查全表\"></a>查全表</h4></li>\n</ul>\n<blockquote>\n<p>select * from 表名</p>\n</blockquote>\n<ul>\n<li><h4 id=\"查部分列\"><a href=\"#查部分列\" class=\"headerlink\" title=\"查部分列\"></a>查部分列</h4></li>\n</ul>\n<blockquote>\n<p>select 列名1, 列名2 from 表名</p>\n</blockquote>\n<ul>\n<li><h4 id=\"列取别名\"><a href=\"#列取别名\" class=\"headerlink\" title=\"列取别名\"></a>列取别名</h4></li>\n</ul>\n<blockquote>\n<p>select 列名1 as 新列名1, 列名2 新列名2 from 表名<br><strong>注</strong>：as可以省略</p>\n</blockquote>\n<ul>\n<li><h4 id=\"列名加运算符\"><a href=\"#列名加运算符\" class=\"headerlink\" title=\"列名加运算符\"></a>列名加运算符</h4></li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询学生姓名以及学生两年前的年龄<br><span class=\"hljs-keyword\">select</span> s_name <span class=\"hljs-keyword\">as</span> 姓名, s_age<span class=\"hljs-number\">-2</span> 两年前的年龄 <span class=\"hljs-keyword\">from</span> students<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询学生姓名、两年前的年龄<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>isnull(expr1,expr2)用于避免<span class=\"hljs-keyword\">null</span>值参与计算  MySQL用ifnull()<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>如果expr1是<span class=\"hljs-keyword\">null</span>,函数的结果就是expr2;否则就是expr1<br><span class=\"hljs-keyword\">select</span> s_name, isnull(s_age, <span class=\"hljs-number\">20</span>)<span class=\"hljs-number\">-2</span> <span class=\"hljs-keyword\">from</span> students<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>可用<span class=\"hljs-operator\">+</span>做字符串或列与列的拼接,列得是字符串型 <br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-string\">&#x27;姓名:&#x27;</span><span class=\"hljs-operator\">+</span>s_name<span class=\"hljs-operator\">+</span>s_sex <span class=\"hljs-keyword\">from</span> students<br></code></pre></td></tr></table></figure>\n<ul>\n<li><h4 id=\"distinct关键字\"><a href=\"#distinct关键字\" class=\"headerlink\" title=\"distinct关键字\"></a>distinct关键字</h4></li>\n</ul>\n<blockquote>\n<p>去掉重复的行，所查字段都一样才会被去掉<br><code>select distinct class_ID, s_name from students</code></p>\n</blockquote>\n<ul>\n<li><h4 id=\"条件查询\"><a href=\"#条件查询\" class=\"headerlink\" title=\"条件查询\"></a>条件查询</h4></li>\n</ul>\n<blockquote>\n<ol>\n<li>比较运算：&gt;、&lt; 、&gt;&#x3D;、&lt;&#x3D;、&#x3D;、&#x3D; 、!&#x3D;或&lt;&gt;<br><strong>注</strong>： null值不能作比较<br>NULL值与任何其它值的比较（即使是NULL）永远不会为“真”</li>\n<li>between … and … 数值范围条件<br><strong>注</strong>：包括边界</li>\n<li>in关键字，集合列表范围查询<br><strong>注</strong>：not in集合里不能包含null值，因为要判断和集合里的所有元素都不等才会返回true，包含null值无法比较，任何与之比较的元素都会返回false</li>\n</ol>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询tom的全部信息<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;tom&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询不属于<span class=\"hljs-number\">1</span>班的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> class_ID <span class=\"hljs-operator\">!=</span> <span class=\"hljs-number\">1</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询年龄在<span class=\"hljs-number\">21</span><span class=\"hljs-number\">-29</span>之间的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_age <span class=\"hljs-keyword\">between</span> <span class=\"hljs-number\">21</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">29</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查Jack、linda、tom的信息<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-string\">&#x27;jack&#x27;</span>,<span class=\"hljs-string\">&#x27;linda&#x27;</span>,<span class=\"hljs-string\">&#x27;tom&#x27;</span>)<br></code></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"4\">\n<li>逻辑运算：and、or、not<br><strong>注</strong>：and的优先级高于or，也可以使用小括号强制优先级</li>\n</ol>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询属于<span class=\"hljs-number\">1</span>班且学号小于<span class=\"hljs-number\">5</span>的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> class_ID <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> s_ID <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-number\">5</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询除tom之外的学生信息<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">not</span> s_name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;tom&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询姓名为tom，或学号为<span class=\"hljs-number\">2</span>的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;tom&#x27;</span> <span class=\"hljs-keyword\">or</span> s_ID <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"5\">\n<li>判空： is null、is not null</li>\n</ol>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询电话号码为空的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_phoneNumber <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">null</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"5\">\n<li>模糊查询：like + %或_<br> %表示0个或多个字符，_表示一个字符 <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询姓名以l开头的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;l%&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询名字里含m的学生<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;%m%&#x27;</span><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询名字第二个字符为o的<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">where</span> s_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;_o%&#x27;</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n</blockquote>\n<ul>\n<li><h4 id=\"order-by-对结果集排序\"><a href=\"#order-by-对结果集排序\" class=\"headerlink\" title=\"order by 对结果集排序\"></a>order by 对结果集排序</h4></li>\n</ul>\n<blockquote>\n<p>默认升序asc,降序为desc<br> <strong>注</strong>：升序null值会排在最前面<br> select 列1， 列2 from 表名 order by 列名1<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>先按年龄升序，年龄一样则按学号升序<br><span class=\"hljs-keyword\">select</span> s_name, s_age, s_ID <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> s_age, s_ID <br><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>先按年龄降序，年龄一样按学号升序<br> <span class=\"hljs-keyword\">select</span> s_name, s_age, s_ID <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> s_age <span class=\"hljs-keyword\">desc</span>, s_ID<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li><h4 id=\"top关键字：限定查询记录条数\"><a href=\"#top关键字：限定查询记录条数\" class=\"headerlink\" title=\"top关键字：限定查询记录条数\"></a>top关键字：限定查询记录条数</h4></li>\n</ul>\n<p>  <strong>注</strong>：mysql用limit(a, b),表示从a开始条记录，a从0开始计数。limit(n)表示返回前n条<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询前三名学生<br><span class=\"hljs-keyword\">select</span> top <span class=\"hljs-number\">3</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查第n<span class=\"hljs-operator\">-</span>m条记录<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">select</span> top m<span class=\"hljs-operator\">-</span>n<span class=\"hljs-operator\">+</span><span class=\"hljs-number\">1</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> 表名 <span class=\"hljs-keyword\">where</span> 列名 <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-keyword\">select</span> top n<span class=\"hljs-number\">-1</span> 列名 <span class=\"hljs-keyword\">from</span> 表名)<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-7</span>名学生<br><span class=\"hljs-keyword\">select</span> top <span class=\"hljs-number\">6</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> students <br><span class=\"hljs-keyword\">where</span> s_ID <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-keyword\">select</span> top <span class=\"hljs-number\">1</span> s_ID <span class=\"hljs-keyword\">from</span> students)<br></code></pre></td></tr></table></figure></p>\n<ul>\n<li><h4 id=\"聚合函数：max、min、count、sum、avg\"><a href=\"#聚合函数：max、min、count、sum、avg\" class=\"headerlink\" title=\"聚合函数：max、min、count、sum、avg\"></a>聚合函数：max、min、count、sum、avg</h4></li>\n</ul>\n<blockquote>\n<p><strong>注</strong>：count(),只要括号里的不为null，都加1<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"> <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查年龄总值、最大值、电话不为空记录数<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-built_in\">sum</span>(s_age) sum, <span class=\"hljs-built_in\">max</span>(s_age) max, <span class=\"hljs-built_in\">avg</span>(s_age) avg, <span class=\"hljs-built_in\">count</span>(s_phoneNumber) count <span class=\"hljs-keyword\">from</span> students<br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li><h4 id=\"分组查询：group-by\"><a href=\"#分组查询：group-by\" class=\"headerlink\" title=\"分组查询：group by\"></a>分组查询：group by</h4></li>\n</ul>\n<blockquote>\n<p><strong>注</strong>：查询的列要在group by子句中；sql sever 不能取别名， MySQL可以<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>按年龄分组<br><span class=\"hljs-keyword\">select</span> s_age <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>计算每组记录数<br><span class=\"hljs-keyword\">select</span> s_age, <span class=\"hljs-built_in\">count</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>按年龄和性别分组<br><span class=\"hljs-keyword\">select</span> s_age, s_sex <span class=\"hljs-keyword\">from</span> students <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age, s_sex<br></code></pre></td></tr></table></figure><br>  <strong>注</strong>：在where语句中不能使用聚合函数，可以在having语句中使用聚合函数</p>\n</blockquote>\n<p> where是对每条表记录的条件限定，having是对结果集记录的条件限定<br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> s_sex, <span class=\"hljs-built_in\">avg</span>(s_age) <span class=\"hljs-keyword\">from</span> students <br><span class=\"hljs-keyword\">group</span> bys_sex <br><span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">avg</span>(s_age) <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">25</span><br><br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>先筛出年龄<span class=\"hljs-operator\">&gt;</span><span class=\"hljs-number\">25</span>的，再按年龄分组，在筛出分组后年龄大于<span class=\"hljs-number\">29</span>的<br> <span class=\"hljs-keyword\">select</span> s_age <span class=\"hljs-keyword\">from</span> students <br> <span class=\"hljs-keyword\">where</span> s_age <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">25</span> <br> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> s_age <br> <span class=\"hljs-keyword\">having</span> s_age <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">29</span><br></code></pre></td></tr></table></figure></p>\n<ul>\n<li><h4 id=\"多表连接\"><a href=\"#多表连接\" class=\"headerlink\" title=\"多表连接\"></a>多表连接</h4></li>\n</ul>\n<blockquote>\n<ol>\n<li>等值连接 <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查学生信息和专业<br><span class=\"hljs-keyword\">select</span> student.<span class=\"hljs-operator\">*</span>, class.Speciality <br><span class=\"hljs-keyword\">from</span> student, class <br><span class=\"hljs-keyword\">where</span> student.clno <span class=\"hljs-operator\">=</span> class.clno<br><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>取别名<br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> student s, class c <span class=\"hljs-keyword\">where</span> s.clno <span class=\"hljs-operator\">=</span> c.clno<br></code></pre></td></tr></table></figure></li>\n<li>内连接<br>  select 列1，列2 from 表1<br>inner join 表2<br>on 等值条件  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> s.<span class=\"hljs-operator\">*</span>, c.Speciality <span class=\"hljs-keyword\">from</span> student s <br><span class=\"hljs-keyword\">inner</span> <span class=\"hljs-keyword\">join</span> class c <span class=\"hljs-keyword\">on</span> s.clno <span class=\"hljs-operator\">=</span> c.clno <br><span class=\"hljs-keyword\">where</span> sage <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">20</span><br></code></pre></td></tr></table></figure>\n  <strong>注</strong>：内连接的结果和等值连接的结果是相同的，只是写法不同<br>  只会显示符合连接条件的数据，不会显示所有的数据</li>\n<li>外连接：<br>分为左外连接、右外连接，左外连接会列出左表全部记录，右表没有符合的记录则用null值填充；右外连接会列出右表全部记录，左表没有符合的记录则用null值填充  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> student s <span class=\"hljs-keyword\">right</span> <span class=\"hljs-keyword\">outer</span> <span class=\"hljs-keyword\">join</span> class c <span class=\"hljs-keyword\">on</span> c.clno <span class=\"hljs-operator\">=</span> s.clno<br></code></pre></td></tr></table></figure></li>\n<li>全连接：表1 full join 表2 on 连接条件<br>   <strong>注</strong>：mysql没有full join，可用左连接union右连接代替</li>\n</ol>\n</blockquote>\n<ul>\n<li><h4 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h4></li>\n</ul>\n<blockquote>\n<ul>\n<li>相关子查询：子查询中需要用到父查询中的值<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>查询某同学选修课程成绩高于他选修的所有课程平均成绩的课程号<br><span class=\"hljs-keyword\">select</span> cno <span class=\"hljs-keyword\">from</span> sc x <span class=\"hljs-keyword\">where</span> grade <span class=\"hljs-operator\">&gt;</span> <br>(<span class=\"hljs-keyword\">select</span> <span class=\"hljs-built_in\">avg</span>(grad) <span class=\"hljs-keyword\">from</span> sc y <span class=\"hljs-keyword\">where</span> x.sno <span class=\"hljs-operator\">=</span> y.sno)<br></code></pre></td></tr></table></figure>\n工作原理：扫描父查询表（如 SC 表）中的每一条记录，然后将当前这条记录中的，在子查询中会用到的值代入到子查询中去，然后执行子查询并得到结果（可以看成是返回值），然后再将这个结果代入到父查询的条件中，判断父查询的条件表达式的值是否为 True，若为 True，则将当前 SC 表中的这条记录放到结果集中去。若为 False 则不放。</li>\n<li>非相关子查询：脱离父查询单独执行</li>\n<li>子查询的结果只有一行就是<strong>单行子查询</strong>；反之就是<strong>多行子查询</strong>。单行子查询只能进行比较。多行子查询可用in、any、all、exists、not exists<br><strong>exist原理</strong>：<a href=\"https://zhuanlan.zhihu.com/p/20005249\">https://zhuanlan.zhihu.com/p/20005249</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><h4 id=\"取交集：union、union-all\"><a href=\"#取交集：union、union-all\" class=\"headerlink\" title=\"取交集：union、union all\"></a>取交集：union、union all</h4><blockquote>\n<p>union会排除重复行，并排序，union all不会<br>union all执行效率更高</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">  <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>找出id为奇数且name不以m开头的员工bonus为salary，否则为<span class=\"hljs-number\">0</span>，并排序<br>  <span class=\"hljs-keyword\">select</span> employee_id, salary bonus <span class=\"hljs-keyword\">from</span> Employees  <br>  <span class=\"hljs-keyword\">where</span> employee_id <span class=\"hljs-operator\">%</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> name <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;m%&#x27;</span>  <br>  <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">all</span>  <br>  <span class=\"hljs-keyword\">select</span> employee_id, salary<span class=\"hljs-operator\">*</span><span class=\"hljs-number\">0</span> bonus <span class=\"hljs-keyword\">from</span> Employees  <br>  <span class=\"hljs-keyword\">where</span> employee_id <span class=\"hljs-operator\">%</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;m%&#x27;</span><br>  <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> employee_id<br>  ```  <br># 三、例句<br><span class=\"hljs-number\">1.</span> <span class=\"hljs-keyword\">case</span>用法<br>``` <span class=\"hljs-keyword\">sql</span><br><span class=\"hljs-keyword\">select</span> id,<br>    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-keyword\">when</span> p_id <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-string\">&#x27;Root&#x27;</span><br>        <span class=\"hljs-keyword\">when</span> id <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-keyword\">select</span> p_id <span class=\"hljs-keyword\">from</span> tree) <span class=\"hljs-keyword\">then</span> <span class=\"hljs-string\">&#x27;Inner&#x27;</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">&#x27;Leaf&#x27;</span><br>    <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">as</span> Type<br><span class=\"hljs-keyword\">from</span> tree<br></code></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"2\">\n<li><strong>mysql</strong> datadiff(date1, date2)函数<blockquote>\n<p>函数返回date1 -date2的计算结果;如果参数传递的是日期时间值，DATEDIFF函数仅将日期部分用于计算，并&#x3D;&#x3D;忽略时间部分&#x3D;&#x3D;</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span> activity_date <span class=\"hljs-keyword\">day</span>, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-keyword\">DISTINCT</span>  user_id) active_users<br><span class=\"hljs-keyword\">FROM</span> Activity<br><span class=\"hljs-keyword\">WHERE</span> DATEDIFF(&quot;2019-07-27&quot;, activity_date) <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-number\">30</span> <span class=\"hljs-keyword\">AND</span> DATEDIFF(&quot;2019-07-27&quot;, activity_date) <span class=\"hljs-operator\">&gt;=</span> <span class=\"hljs-number\">0</span><br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> activity_date;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>TIMESTAMPDIFF(DAY,start,end):返回两个日期指定单位的时间差(指定单位可以是年，季度，月，星期，天数，小时，分钟，秒等等)</p>\n</blockquote>\n</li>\n<li>if(条件, 为true时&#x3D;, 为false时&#x3D;)<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>性别转换<br><span class=\"hljs-keyword\">update</span> Salary <span class=\"hljs-keyword\">set</span> sex <span class=\"hljs-operator\">=</span> if(sex <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;m&#x27;</span>, <span class=\"hljs-string\">&#x27;f&#x27;</span>, <span class=\"hljs-string\">&#x27;m&#x27;</span>)<br></code></pre></td></tr></table></figure></li>\n<li><strong>注</strong>：子查询要命名，不然会报错。<br>  <strong>注</strong>：不能在同一个 sql 语句中，先 select 同一个表的某些值，然后再 update 这个表。<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">from</span> Person <span class=\"hljs-keyword\">Where</span> Id <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> <br>(<span class=\"hljs-keyword\">select</span> Id <span class=\"hljs-keyword\">from</span> <br>( <span class=\"hljs-keyword\">Select</span> <span class=\"hljs-built_in\">MIN</span>(Id) <span class=\"hljs-keyword\">as</span> Id <span class=\"hljs-keyword\">From</span> Person <span class=\"hljs-keyword\">Group</span> <span class=\"hljs-keyword\">by</span> Email ) t)<br></code></pre></td></tr></table></figure></li>\n<li>concat(a, b)拼接a,b ;left(name,count)返回name前count字符。<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> user_id, <br>concat(<span class=\"hljs-built_in\">upper</span>(<span class=\"hljs-keyword\">left</span>(name, <span class=\"hljs-number\">1</span>)), <span class=\"hljs-built_in\">lower</span>(substr(name, <span class=\"hljs-number\">2</span>))) name<br><span class=\"hljs-keyword\">from</span> Users <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> user_id<br></code></pre></td></tr></table></figure></li>\n<li>groupconcat()：将分组后每组的某一字段拼接起来。默认用,分割<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">select</span> sell_date,<span class=\"hljs-built_in\">count</span>(<span class=\"hljs-keyword\">distinct</span> product) num_sold,<br>group_concat(<span class=\"hljs-keyword\">distinct</span> product separator <span class=\"hljs-string\">&#x27;,&#x27;</span>) products<br><span class=\"hljs-keyword\">from</span> activities<br><span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> sell_date<br><span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> sell_date<br></code></pre></td></tr></table></figure></li>\n<li>with tableA as（select语句）：相当于建立了一个临时表tableA<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">with</span> tmp <span class=\"hljs-keyword\">as</span><br>(<span class=\"hljs-keyword\">select</span> employee_id <span class=\"hljs-keyword\">from</span> Employees<br><span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">all</span><br><span class=\"hljs-keyword\">select</span> employee_id <span class=\"hljs-keyword\">from</span> Salaries)<br><span class=\"hljs-keyword\">select</span> employee_id <span class=\"hljs-keyword\">from</span> tmp <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">count</span>(<span class=\"hljs-number\">1</span>) <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> <br></code></pre></td></tr></table></figure></li>\n<li><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>加引号表示将固定值store1放到列store<br><span class=\"hljs-keyword\">select</span> product_id,&quot;store1&quot; store, store1 price <span class=\"hljs-keyword\">from</span> Products <span class=\"hljs-keyword\">where</span> store1 <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"四、\"><a href=\"#四、\" class=\"headerlink\" title=\"四、\"></a>四、</h1><ol>\n<li>e-r图与关系模式转换<ul>\n<li>1对1关系：任一方的主键加入到另一方中。</li>\n<li>1对n关系：1方的主键加入到n方，并把联系上的属性也加入到n方。</li>\n<li>m对n关系：联系自成一张表，并把双方的主键加进来当联合主键。</li>\n</ul>\n</li>\n<li>数据库设计规范——三大范式</li>\n</ol>\n<ul>\n<li>第一范式：保持每列的原子性，即每个字段都是不可拆分的原子值。</li>\n<li>第二范式：确保每列都和主键相关，而不能和主键的某一部分相关（针对联合主键）。为避免数据冗余。<br>  可能存在的问题：数据冗余、删除异常、插入异常、更新异常<br>  例如：订单信息表中主键为订单编号和商品编号，属性包括，商品订购数量，商品价格，商品型号等。因为存在不同订单订购同一商品，因此同一个商品的信息可能被记录多次（数据冗余）；删除一条记录可能会删除一类商品的信息（删除异常）；插入一个商品信息必须要有订单号（插入异常）；更新一类商品信息要操作好几行（更新异常）。<br>  它不满足第二范式，商品价格、商品型号只与商品有关，应该建一张商品表，订单信息表只保留商品编号、订购数量等。</li>\n<li>第三范式：必须满足第二范式。非主属性必须直接依赖于主键，不能传递依赖于非主属性。</li>\n</ul>\n<ol start=\"3\">\n<li>函数依赖<ul>\n<li>部分函数依赖：（A,B）决定C,A也能决定C或B也能决定C，则C部分依赖于（A,B）</li>\n<li>完全函数依赖：（A,B）决定C,A不能决定C,B不能决定C，则C完全函数依赖于（A,B）</li>\n<li>传递依赖：A-&gt;B(B!-&gt;A),B-&gt;C，则C传递依赖于x<br>例：学号，宿舍，住宿费</li>\n</ul>\n</li>\n<li><ul>\n<li>mysql的执行过程<br><a href=\"https://www.jianshu.com/p/338092a0a8c6\">https://www.jianshu.com/p/338092a0a8c6</a></li>\n<li>索引<a href=\"https://bbs.huaweicloud.com/blogs/333163\">https://bbs.huaweicloud.com/blogs/333163</a></li>\n</ul>\n</li>\n</ol>\n"},{"title":"C++ 多态特性及简单示例","date":"2022-08-09T18:15:56.000Z","index_img":"/img/page/cpp.png","_content":"\n# C++ 多态特性及简单示例\n\nC++ 是一种面向对象的编程语言，其中的多态特性允许开发者在运行时根据对象的类型来调用相应的函数。这里我会介绍 C++ 多态的概念和几种不同的实现方式，并提供一些代码示例。\n\n## 多态 🔎\n\n多态（polymorphism）是一种基于继承的机制，它允许不同的对象对同一消息作出不同的响应。换句话说，同样的方法调用可以在不同的对象上产生不同的结果。\n\n**静态多态**：也称为编译时多态，主要通过函数重载和模板实现。在编译时期就能够确定函数的调用版本或者类的实例类型，因此也称为静态绑定。例如，通过重载函数名和参数列表，我们可以在编译时就确定具体调用哪个函数版本。\n\n**动态多态**：也称为运行时多态，主要通过虚函数实现。在编译时期无法确定函数调用的版本，而是在运行时期根据实际对象类型来确定调用哪个函数版本。因此也称为动态绑定。我们可以在基类中声明虚函数，然后在派生类中重写该函数，当使用基类指针或引用调用虚函数时，实际调用的是该指针或引用所指向的对象类型的虚函数版本。\n\n静态多态在编译时期就能够确定函数调用的版本，而动态多态需要在运行时期根据实际对象类型来确定函数调用的版本。多态机制使得我们能够编写通用的代码，更加灵活和可扩展。\n\n\n\n## 虚函数实现多态\n虚函数是 C++ 中实现多态的一种常用方式。虚函数是在基类中声明的，用 virtual 关键字来修饰，它允许派生类重写该函数。当调用该函数时，编译器会根据实际对象的类型来调用对应的重写函数。下面是一个虚函数的示例代码：\n\n\n```cpp\nclass Shape {\npublic:\n    virtual void draw() {\n        std::cout << \"Drawing a shape...\" << std::endl;\n    }\n};\n\nclass Circle : public Shape {\npublic:\n    void draw() override {\n        std::cout << \"Drawing a circle...\" << std::endl;\n    }\n};\n\nclass Square : public Shape {\npublic:\n    void draw() override {\n        std::cout << \"Drawing a square...\" << std::endl;\n    }\n};\n\nint main() {\n    Shape* shape1 = new Circle();\n    Shape* shape2 = new Square();\n    shape1->draw();\n    shape2->draw();\n    delete shape1;\n    delete shape2;\n    return 0;\n}\n\n```\n\n在上面的代码中，我们定义了一个基类 Shape，它包含了一个虚函数 draw()。我们还定义了两个派生类 Circle 和 Square，它们都重写了 draw() 函数。在 main 函数中，我们创建了两个指向 Shape 类型的指针，分别指向 Circle 和 Square 对象。我们调用它们的 draw() 函数，这会根据实际对象的类型来调用对应的重写函数，输出不同的结果。\n\n## 模板实现多态\n模板是 C++ 中另一种实现多态的方式。模板允许我们编写一种通用的函数或类，它可以根据实际类型的参数来生成不同的代码。这种技术被称为泛型编程。下面是一个模板函数的示例代码：\n\n```cpp\ntemplate <typename T>\nvoid print(T value) {\n    std::cout << value << std::endl;\n}\n\nint main() {\n    print<int>(10);\n    print<double>(3.14);\n    print<std::string>(\"hello\");\n    return 0;\n}\n```\n\n在上面的代码中，我们定义了一个模板函数 print()，它可以接受任意类型的参数，并将其打印到标准输出中。在 main 函数中，我们调用了 print() 函数三次，分别传入 int、double 和 std::string 类型的参数。由于模板的特性，编译器会根据实际类型的参数来生成不同的代码，这样我们就实现了多态。\n\n#总结\n本篇博客介绍了 C++ 中多态的概念和两种不同的实现方式：虚函数和模板。虚函数是一种基于继承的机制，它允许派生类重写基类的函数，从而实现多态。模板是一种通用的编程技术，它可以根据实际类型的参数来生成不同的代码，也可以实现多态。希望本篇博客能够帮助你更好地理解 C++ 中的多态特性。\n\n⚠ **Note**: 转载请注明出处","source":"_posts/C++ 多态特性及简单示例.md","raw":"---\ntitle: 'C++ 多态特性及简单示例'\ndate: 2022-08-09 20:15:56\ntags: C++\nindex_img: /img/page/cpp.png\n---\n\n# C++ 多态特性及简单示例\n\nC++ 是一种面向对象的编程语言，其中的多态特性允许开发者在运行时根据对象的类型来调用相应的函数。这里我会介绍 C++ 多态的概念和几种不同的实现方式，并提供一些代码示例。\n\n## 多态 🔎\n\n多态（polymorphism）是一种基于继承的机制，它允许不同的对象对同一消息作出不同的响应。换句话说，同样的方法调用可以在不同的对象上产生不同的结果。\n\n**静态多态**：也称为编译时多态，主要通过函数重载和模板实现。在编译时期就能够确定函数的调用版本或者类的实例类型，因此也称为静态绑定。例如，通过重载函数名和参数列表，我们可以在编译时就确定具体调用哪个函数版本。\n\n**动态多态**：也称为运行时多态，主要通过虚函数实现。在编译时期无法确定函数调用的版本，而是在运行时期根据实际对象类型来确定调用哪个函数版本。因此也称为动态绑定。我们可以在基类中声明虚函数，然后在派生类中重写该函数，当使用基类指针或引用调用虚函数时，实际调用的是该指针或引用所指向的对象类型的虚函数版本。\n\n静态多态在编译时期就能够确定函数调用的版本，而动态多态需要在运行时期根据实际对象类型来确定函数调用的版本。多态机制使得我们能够编写通用的代码，更加灵活和可扩展。\n\n\n\n## 虚函数实现多态\n虚函数是 C++ 中实现多态的一种常用方式。虚函数是在基类中声明的，用 virtual 关键字来修饰，它允许派生类重写该函数。当调用该函数时，编译器会根据实际对象的类型来调用对应的重写函数。下面是一个虚函数的示例代码：\n\n\n```cpp\nclass Shape {\npublic:\n    virtual void draw() {\n        std::cout << \"Drawing a shape...\" << std::endl;\n    }\n};\n\nclass Circle : public Shape {\npublic:\n    void draw() override {\n        std::cout << \"Drawing a circle...\" << std::endl;\n    }\n};\n\nclass Square : public Shape {\npublic:\n    void draw() override {\n        std::cout << \"Drawing a square...\" << std::endl;\n    }\n};\n\nint main() {\n    Shape* shape1 = new Circle();\n    Shape* shape2 = new Square();\n    shape1->draw();\n    shape2->draw();\n    delete shape1;\n    delete shape2;\n    return 0;\n}\n\n```\n\n在上面的代码中，我们定义了一个基类 Shape，它包含了一个虚函数 draw()。我们还定义了两个派生类 Circle 和 Square，它们都重写了 draw() 函数。在 main 函数中，我们创建了两个指向 Shape 类型的指针，分别指向 Circle 和 Square 对象。我们调用它们的 draw() 函数，这会根据实际对象的类型来调用对应的重写函数，输出不同的结果。\n\n## 模板实现多态\n模板是 C++ 中另一种实现多态的方式。模板允许我们编写一种通用的函数或类，它可以根据实际类型的参数来生成不同的代码。这种技术被称为泛型编程。下面是一个模板函数的示例代码：\n\n```cpp\ntemplate <typename T>\nvoid print(T value) {\n    std::cout << value << std::endl;\n}\n\nint main() {\n    print<int>(10);\n    print<double>(3.14);\n    print<std::string>(\"hello\");\n    return 0;\n}\n```\n\n在上面的代码中，我们定义了一个模板函数 print()，它可以接受任意类型的参数，并将其打印到标准输出中。在 main 函数中，我们调用了 print() 函数三次，分别传入 int、double 和 std::string 类型的参数。由于模板的特性，编译器会根据实际类型的参数来生成不同的代码，这样我们就实现了多态。\n\n#总结\n本篇博客介绍了 C++ 中多态的概念和两种不同的实现方式：虚函数和模板。虚函数是一种基于继承的机制，它允许派生类重写基类的函数，从而实现多态。模板是一种通用的编程技术，它可以根据实际类型的参数来生成不同的代码，也可以实现多态。希望本篇博客能够帮助你更好地理解 C++ 中的多态特性。\n\n⚠ **Note**: 转载请注明出处","slug":"C++ 多态特性及简单示例","published":1,"updated":"2023-03-05T10:59:49.890Z","_id":"clev9mev0000073y25go6fbi1","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"C-多态特性及简单示例\"><a href=\"#C-多态特性及简单示例\" class=\"headerlink\" title=\"C++ 多态特性及简单示例\"></a>C++ 多态特性及简单示例</h1><p>C++ 是一种面向对象的编程语言，其中的多态特性允许开发者在运行时根据对象的类型来调用相应的函数。这里我会介绍 C++ 多态的概念和几种不同的实现方式，并提供一些代码示例。</p>\n<h2 id=\"多态-🔎\"><a href=\"#多态-🔎\" class=\"headerlink\" title=\"多态 🔎\"></a>多态 🔎</h2><p>多态（polymorphism）是一种基于继承的机制，它允许不同的对象对同一消息作出不同的响应。换句话说，同样的方法调用可以在不同的对象上产生不同的结果。</p>\n<p><strong>静态多态</strong>：也称为编译时多态，主要通过函数重载和模板实现。在编译时期就能够确定函数的调用版本或者类的实例类型，因此也称为静态绑定。例如，通过重载函数名和参数列表，我们可以在编译时就确定具体调用哪个函数版本。</p>\n<p><strong>动态多态</strong>：也称为运行时多态，主要通过虚函数实现。在编译时期无法确定函数调用的版本，而是在运行时期根据实际对象类型来确定调用哪个函数版本。因此也称为动态绑定。我们可以在基类中声明虚函数，然后在派生类中重写该函数，当使用基类指针或引用调用虚函数时，实际调用的是该指针或引用所指向的对象类型的虚函数版本。</p>\n<p>静态多态在编译时期就能够确定函数调用的版本，而动态多态需要在运行时期根据实际对象类型来确定函数调用的版本。多态机制使得我们能够编写通用的代码，更加灵活和可扩展。</p>\n<h2 id=\"虚函数实现多态\"><a href=\"#虚函数实现多态\" class=\"headerlink\" title=\"虚函数实现多态\"></a>虚函数实现多态</h2><p>虚函数是 C++ 中实现多态的一种常用方式。虚函数是在基类中声明的，用 virtual 关键字来修饰，它允许派生类重写该函数。当调用该函数时，编译器会根据实际对象的类型来调用对应的重写函数。下面是一个虚函数的示例代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Shape</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">draw</span><span class=\"hljs-params\">()</span> </span>&#123;<br>        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Drawing a shape...&quot;</span> &lt;&lt; std::endl;<br>    &#125;<br>&#125;;<br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Circle</span> : <span class=\"hljs-keyword\">public</span> Shape &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">draw</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">override</span> </span>&#123;<br>        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Drawing a circle...&quot;</span> &lt;&lt; std::endl;<br>    &#125;<br>&#125;;<br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Square</span> : <span class=\"hljs-keyword\">public</span> Shape &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">draw</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">override</span> </span>&#123;<br>        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Drawing a square...&quot;</span> &lt;&lt; std::endl;<br>    &#125;<br>&#125;;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    Shape* shape1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Circle</span>();<br>    Shape* shape2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Square</span>();<br>    shape1-&gt;<span class=\"hljs-built_in\">draw</span>();<br>    shape2-&gt;<span class=\"hljs-built_in\">draw</span>();<br>    <span class=\"hljs-keyword\">delete</span> shape1;<br>    <span class=\"hljs-keyword\">delete</span> shape2;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>在上面的代码中，我们定义了一个基类 Shape，它包含了一个虚函数 draw()。我们还定义了两个派生类 Circle 和 Square，它们都重写了 draw() 函数。在 main 函数中，我们创建了两个指向 Shape 类型的指针，分别指向 Circle 和 Square 对象。我们调用它们的 draw() 函数，这会根据实际对象的类型来调用对应的重写函数，输出不同的结果。</p>\n<h2 id=\"模板实现多态\"><a href=\"#模板实现多态\" class=\"headerlink\" title=\"模板实现多态\"></a>模板实现多态</h2><p>模板是 C++ 中另一种实现多态的方式。模板允许我们编写一种通用的函数或类，它可以根据实际类型的参数来生成不同的代码。这种技术被称为泛型编程。下面是一个模板函数的示例代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;<br><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">print</span><span class=\"hljs-params\">(T value)</span> </span>&#123;<br>    std::cout &lt;&lt; value &lt;&lt; std::endl;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-built_in\">print</span>&lt;<span class=\"hljs-type\">int</span>&gt;(<span class=\"hljs-number\">10</span>);<br>    <span class=\"hljs-built_in\">print</span>&lt;<span class=\"hljs-type\">double</span>&gt;(<span class=\"hljs-number\">3.14</span>);<br>    <span class=\"hljs-built_in\">print</span>&lt;std::string&gt;(<span class=\"hljs-string\">&quot;hello&quot;</span>);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上面的代码中，我们定义了一个模板函数 print()，它可以接受任意类型的参数，并将其打印到标准输出中。在 main 函数中，我们调用了 print() 函数三次，分别传入 int、double 和 std::string 类型的参数。由于模板的特性，编译器会根据实际类型的参数来生成不同的代码，这样我们就实现了多态。</p>\n<p>#总结<br>本篇博客介绍了 C++ 中多态的概念和两种不同的实现方式：虚函数和模板。虚函数是一种基于继承的机制，它允许派生类重写基类的函数，从而实现多态。模板是一种通用的编程技术，它可以根据实际类型的参数来生成不同的代码，也可以实现多态。希望本篇博客能够帮助你更好地理解 C++ 中的多态特性。</p>\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-多态特性及简单示例\"><a href=\"#C-多态特性及简单示例\" class=\"headerlink\" title=\"C++ 多态特性及简单示例\"></a>C++ 多态特性及简单示例</h1><p>C++ 是一种面向对象的编程语言，其中的多态特性允许开发者在运行时根据对象的类型来调用相应的函数。这里我会介绍 C++ 多态的概念和几种不同的实现方式，并提供一些代码示例。</p>\n<h2 id=\"多态-🔎\"><a href=\"#多态-🔎\" class=\"headerlink\" title=\"多态 🔎\"></a>多态 🔎</h2><p>多态（polymorphism）是一种基于继承的机制，它允许不同的对象对同一消息作出不同的响应。换句话说，同样的方法调用可以在不同的对象上产生不同的结果。</p>\n<p><strong>静态多态</strong>：也称为编译时多态，主要通过函数重载和模板实现。在编译时期就能够确定函数的调用版本或者类的实例类型，因此也称为静态绑定。例如，通过重载函数名和参数列表，我们可以在编译时就确定具体调用哪个函数版本。</p>\n<p><strong>动态多态</strong>：也称为运行时多态，主要通过虚函数实现。在编译时期无法确定函数调用的版本，而是在运行时期根据实际对象类型来确定调用哪个函数版本。因此也称为动态绑定。我们可以在基类中声明虚函数，然后在派生类中重写该函数，当使用基类指针或引用调用虚函数时，实际调用的是该指针或引用所指向的对象类型的虚函数版本。</p>\n<p>静态多态在编译时期就能够确定函数调用的版本，而动态多态需要在运行时期根据实际对象类型来确定函数调用的版本。多态机制使得我们能够编写通用的代码，更加灵活和可扩展。</p>\n<h2 id=\"虚函数实现多态\"><a href=\"#虚函数实现多态\" class=\"headerlink\" title=\"虚函数实现多态\"></a>虚函数实现多态</h2><p>虚函数是 C++ 中实现多态的一种常用方式。虚函数是在基类中声明的，用 virtual 关键字来修饰，它允许派生类重写该函数。当调用该函数时，编译器会根据实际对象的类型来调用对应的重写函数。下面是一个虚函数的示例代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Shape</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">draw</span><span class=\"hljs-params\">()</span> </span>&#123;<br>        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Drawing a shape...&quot;</span> &lt;&lt; std::endl;<br>    &#125;<br>&#125;;<br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Circle</span> : <span class=\"hljs-keyword\">public</span> Shape &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">draw</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">override</span> </span>&#123;<br>        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Drawing a circle...&quot;</span> &lt;&lt; std::endl;<br>    &#125;<br>&#125;;<br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Square</span> : <span class=\"hljs-keyword\">public</span> Shape &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">draw</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">override</span> </span>&#123;<br>        std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Drawing a square...&quot;</span> &lt;&lt; std::endl;<br>    &#125;<br>&#125;;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    Shape* shape1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Circle</span>();<br>    Shape* shape2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Square</span>();<br>    shape1-&gt;<span class=\"hljs-built_in\">draw</span>();<br>    shape2-&gt;<span class=\"hljs-built_in\">draw</span>();<br>    <span class=\"hljs-keyword\">delete</span> shape1;<br>    <span class=\"hljs-keyword\">delete</span> shape2;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>在上面的代码中，我们定义了一个基类 Shape，它包含了一个虚函数 draw()。我们还定义了两个派生类 Circle 和 Square，它们都重写了 draw() 函数。在 main 函数中，我们创建了两个指向 Shape 类型的指针，分别指向 Circle 和 Square 对象。我们调用它们的 draw() 函数，这会根据实际对象的类型来调用对应的重写函数，输出不同的结果。</p>\n<h2 id=\"模板实现多态\"><a href=\"#模板实现多态\" class=\"headerlink\" title=\"模板实现多态\"></a>模板实现多态</h2><p>模板是 C++ 中另一种实现多态的方式。模板允许我们编写一种通用的函数或类，它可以根据实际类型的参数来生成不同的代码。这种技术被称为泛型编程。下面是一个模板函数的示例代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;<br><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">print</span><span class=\"hljs-params\">(T value)</span> </span>&#123;<br>    std::cout &lt;&lt; value &lt;&lt; std::endl;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-built_in\">print</span>&lt;<span class=\"hljs-type\">int</span>&gt;(<span class=\"hljs-number\">10</span>);<br>    <span class=\"hljs-built_in\">print</span>&lt;<span class=\"hljs-type\">double</span>&gt;(<span class=\"hljs-number\">3.14</span>);<br>    <span class=\"hljs-built_in\">print</span>&lt;std::string&gt;(<span class=\"hljs-string\">&quot;hello&quot;</span>);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上面的代码中，我们定义了一个模板函数 print()，它可以接受任意类型的参数，并将其打印到标准输出中。在 main 函数中，我们调用了 print() 函数三次，分别传入 int、double 和 std::string 类型的参数。由于模板的特性，编译器会根据实际类型的参数来生成不同的代码，这样我们就实现了多态。</p>\n<p>#总结<br>本篇博客介绍了 C++ 中多态的概念和两种不同的实现方式：虚函数和模板。虚函数是一种基于继承的机制，它允许派生类重写基类的函数，从而实现多态。模板是一种通用的编程技术，它可以根据实际类型的参数来生成不同的代码，也可以实现多态。希望本篇博客能够帮助你更好地理解 C++ 中的多态特性。</p>\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n"},{"title":"C++ 线程池的实现","date":"2022-10-23T20:45:23.000Z","index_img":"/img/page/cpp.png","_content":"\n\n# C++ 线程池的实现\n\n+ 在并发编程中，使用多线程可以提高程序的执行效率。然而，手动管理线程可能会导致代码复杂和出错的风险，因此可以使用线程池来简化线程管理；\n+ 线程池通过预先创建一定数量的线程，将任务分配给这些线程执行，从而提高程序的并发性和响应速度；\n+ 线程池包括一个任务队列和一组工作线程，任务队列用于存储待执行的任务，工作线程则从任务队列中取出任务并执行。\n\n## 任务队列实现 🔎\n 任务队列要同时从多个用户中接收用于待执行的任务，因此要保证线程安全。这里可以使用STL中的队列或链表来实现，同时用一个互斥量来保证队列的线程安全，并使用条件变量来实现阻塞式的队列操作。任务队列的代码实现如下：\n\n 线程安全是通过 std::mutex 和 std::condition_variable 实现的。其中，push() 函数用于向队列中添加元素，try_pop() 函数用于尝试弹出队首元素，wait_and_pop() 函数用于等待队列非空并弹出队首元素。\n\n```cpp\n#include <queue>\n#include <mutex>\n#include <condition_variable>\n\ntemplate<typename T>\nclass ThreadSafeQueue {\npublic:\n    ThreadSafeQueue() = default;\n\n    void push(const T& value) {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        m_queue.push(value);\n        m_cv.notify_one();\n    }\n\n    void push(T&& value) {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        m_queue.push(std::move(value));\n        m_cv.notify_one();\n    }\n\n    bool try_pop(T& value) {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        if (m_queue.empty()) {\n            return false;\n        }\n\n        value = std::move(m_queue.front());\n        m_queue.pop();\n        return true;\n    }\n\n    void wait_and_pop(T& value) {\n        std::unique_lock<std::mutex> lock(m_mutex);\n        m_cv.wait(lock, [this] { return !m_queue.empty(); });\n\n        value = std::move(m_queue.front());\n        m_queue.pop();\n    }\n\n    bool empty() const {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        return m_queue.empty();\n    }\n\nprivate:\n    std::queue<T> m_queue;\n    mutable std::mutex m_mutex;\n    std::condition_variable m_cv;\n};\n\n```\n\n\n\n## 工作线程实现\n\n工作线程用于从不停任务队列中取任务并执行。这里定义了一个 WorkerThread 类，它的 operator() 函数不断地从任务队列中取出任务并执行，直到线程停止。\n\n\n```cpp\n#include <thread>\n#include <atomic>\n\nclass WorkerThread {\npublic:\n    WorkerThread(ThreadSafeQueue<std::function<void()>>& taskQueue, std::atomic_bool& running)\n        : m_taskQueue(taskQueue), m_running(running) {}\n\n    void operator()() {\n        while (m_running) {\n            std::function<void()> task;\n            if (m_taskQueue.try_pop(task)) {\n                task();\n            }\n            else {\n                std::this_thread::yield();\n            }\n        }\n    }\n\nprivate:\n    ThreadSafeQueue<std::function<void()>>& m_taskQueue;\n    std::atomic_bool& m_running;\n};\n\n```\n\n\n## 线程池实现\n\n这里定义了一个线程池类，为用户管理了任务队列和工作线程，线程线程池。\n\n\n```cpp\n#include <vector>\n\nclass ThreadPool {\npublic:\n    ThreadPool(size_t numThreads = std::thread::hardware_concurrency())\n        : m_running(true) {\n        for (size_t i = 0; i < numThreads; ++i) {\n            m_threads.emplace_back(WorkerThread(m_taskQueue, m_running));\n        }\n    }\n\n    ~ThreadPool() {\n        m_running = false;\n\n        for (auto& thread : m_threads) {\n            thread.join();\n        }\n    }\n\n    template<typename Func, typename... Args>\n    void submit(Func&& func, Args&&... args) {\n        auto task = std::bind(std::forward<Func>(func), std::forward<Args>(args)...);\n        m_taskQueue.push(task);\n    }\n\nprivate:\n    void threadWorker() {\n        while (m_running) {\n            std::function<void()> task;\n            if (m_taskQueue.try_pop(task)) {\n                task();\n            } else {\n                std::this_thread::yield();\n            }\n        }\n    }\n\n    ThreadSafeQueue<std::function<void()>> m_taskQueue;\n    std::vector<std::thread> m_threads;\n    std::atomic<bool> m_running;\n};\n\n```\n\n## 使用示例\n\n\n\n```cpp\n#include <iostream>\n#include <chrono>\n\nvoid task(int num) {\n    std::cout << \"Task \" << num << \" started\" << std::endl;\n    std::this_thread::sleep_for(std::chrono::seconds(1));\n    std::cout << \"Task \" << num << \" finished\" << std::endl;\n}\n\nint main() {\n    ThreadPool pool(4);  // 创建一个包含 4 个工作线程的线程池\n    for (int i = 0; i < 8; ++i) {\n        pool.submit(task, i);  // 向线程池中添加 8 个任务\n    }\n    return 0;\n}\n\n```\n\n⚠ **Note**: 转载请注明出处","source":"_posts/C++线程池的实现.md","raw":"---\ntitle: 'C++ 线程池的实现'\ndate: 2022-10-23 22:45:23\ntags: C++\nindex_img: /img/page/cpp.png\n---\n\n\n# C++ 线程池的实现\n\n+ 在并发编程中，使用多线程可以提高程序的执行效率。然而，手动管理线程可能会导致代码复杂和出错的风险，因此可以使用线程池来简化线程管理；\n+ 线程池通过预先创建一定数量的线程，将任务分配给这些线程执行，从而提高程序的并发性和响应速度；\n+ 线程池包括一个任务队列和一组工作线程，任务队列用于存储待执行的任务，工作线程则从任务队列中取出任务并执行。\n\n## 任务队列实现 🔎\n 任务队列要同时从多个用户中接收用于待执行的任务，因此要保证线程安全。这里可以使用STL中的队列或链表来实现，同时用一个互斥量来保证队列的线程安全，并使用条件变量来实现阻塞式的队列操作。任务队列的代码实现如下：\n\n 线程安全是通过 std::mutex 和 std::condition_variable 实现的。其中，push() 函数用于向队列中添加元素，try_pop() 函数用于尝试弹出队首元素，wait_and_pop() 函数用于等待队列非空并弹出队首元素。\n\n```cpp\n#include <queue>\n#include <mutex>\n#include <condition_variable>\n\ntemplate<typename T>\nclass ThreadSafeQueue {\npublic:\n    ThreadSafeQueue() = default;\n\n    void push(const T& value) {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        m_queue.push(value);\n        m_cv.notify_one();\n    }\n\n    void push(T&& value) {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        m_queue.push(std::move(value));\n        m_cv.notify_one();\n    }\n\n    bool try_pop(T& value) {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        if (m_queue.empty()) {\n            return false;\n        }\n\n        value = std::move(m_queue.front());\n        m_queue.pop();\n        return true;\n    }\n\n    void wait_and_pop(T& value) {\n        std::unique_lock<std::mutex> lock(m_mutex);\n        m_cv.wait(lock, [this] { return !m_queue.empty(); });\n\n        value = std::move(m_queue.front());\n        m_queue.pop();\n    }\n\n    bool empty() const {\n        std::lock_guard<std::mutex> lock(m_mutex);\n        return m_queue.empty();\n    }\n\nprivate:\n    std::queue<T> m_queue;\n    mutable std::mutex m_mutex;\n    std::condition_variable m_cv;\n};\n\n```\n\n\n\n## 工作线程实现\n\n工作线程用于从不停任务队列中取任务并执行。这里定义了一个 WorkerThread 类，它的 operator() 函数不断地从任务队列中取出任务并执行，直到线程停止。\n\n\n```cpp\n#include <thread>\n#include <atomic>\n\nclass WorkerThread {\npublic:\n    WorkerThread(ThreadSafeQueue<std::function<void()>>& taskQueue, std::atomic_bool& running)\n        : m_taskQueue(taskQueue), m_running(running) {}\n\n    void operator()() {\n        while (m_running) {\n            std::function<void()> task;\n            if (m_taskQueue.try_pop(task)) {\n                task();\n            }\n            else {\n                std::this_thread::yield();\n            }\n        }\n    }\n\nprivate:\n    ThreadSafeQueue<std::function<void()>>& m_taskQueue;\n    std::atomic_bool& m_running;\n};\n\n```\n\n\n## 线程池实现\n\n这里定义了一个线程池类，为用户管理了任务队列和工作线程，线程线程池。\n\n\n```cpp\n#include <vector>\n\nclass ThreadPool {\npublic:\n    ThreadPool(size_t numThreads = std::thread::hardware_concurrency())\n        : m_running(true) {\n        for (size_t i = 0; i < numThreads; ++i) {\n            m_threads.emplace_back(WorkerThread(m_taskQueue, m_running));\n        }\n    }\n\n    ~ThreadPool() {\n        m_running = false;\n\n        for (auto& thread : m_threads) {\n            thread.join();\n        }\n    }\n\n    template<typename Func, typename... Args>\n    void submit(Func&& func, Args&&... args) {\n        auto task = std::bind(std::forward<Func>(func), std::forward<Args>(args)...);\n        m_taskQueue.push(task);\n    }\n\nprivate:\n    void threadWorker() {\n        while (m_running) {\n            std::function<void()> task;\n            if (m_taskQueue.try_pop(task)) {\n                task();\n            } else {\n                std::this_thread::yield();\n            }\n        }\n    }\n\n    ThreadSafeQueue<std::function<void()>> m_taskQueue;\n    std::vector<std::thread> m_threads;\n    std::atomic<bool> m_running;\n};\n\n```\n\n## 使用示例\n\n\n\n```cpp\n#include <iostream>\n#include <chrono>\n\nvoid task(int num) {\n    std::cout << \"Task \" << num << \" started\" << std::endl;\n    std::this_thread::sleep_for(std::chrono::seconds(1));\n    std::cout << \"Task \" << num << \" finished\" << std::endl;\n}\n\nint main() {\n    ThreadPool pool(4);  // 创建一个包含 4 个工作线程的线程池\n    for (int i = 0; i < 8; ++i) {\n        pool.submit(task, i);  // 向线程池中添加 8 个任务\n    }\n    return 0;\n}\n\n```\n\n⚠ **Note**: 转载请注明出处","slug":"C++线程池的实现","published":1,"updated":"2023-03-05T15:03:46.258Z","_id":"clev9yo5m0000a8y2hoxegxk3","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"C-线程池的实现\"><a href=\"#C-线程池的实现\" class=\"headerlink\" title=\"C++ 线程池的实现\"></a>C++ 线程池的实现</h1><ul>\n<li>在并发编程中，使用多线程可以提高程序的执行效率。然而，手动管理线程可能会导致代码复杂和出错的风险，因此可以使用线程池来简化线程管理；</li>\n<li>线程池通过预先创建一定数量的线程，将任务分配给这些线程执行，从而提高程序的并发性和响应速度；</li>\n<li>线程池包括一个任务队列和一组工作线程，任务队列用于存储待执行的任务，工作线程则从任务队列中取出任务并执行。</li>\n</ul>\n<h2 id=\"任务队列实现-🔎\"><a href=\"#任务队列实现-🔎\" class=\"headerlink\" title=\"任务队列实现 🔎\"></a>任务队列实现 🔎</h2><p> 任务队列要同时从多个用户中接收用于待执行的任务，因此要保证线程安全。这里可以使用STL中的队列或链表来实现，同时用一个互斥量来保证队列的线程安全，并使用条件变量来实现阻塞式的队列操作。任务队列的代码实现如下：</p>\n<p> 线程安全是通过 std::mutex 和 std::condition_variable 实现的。其中，push() 函数用于向队列中添加元素，try_pop() 函数用于尝试弹出队首元素，wait_and_pop() 函数用于等待队列非空并弹出队首元素。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;queue&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;mutex&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;condition_variable&gt;</span></span><br><br><span class=\"hljs-keyword\">template</span>&lt;<span class=\"hljs-keyword\">typename</span> T&gt;<br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ThreadSafeQueue</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-built_in\">ThreadSafeQueue</span>() = <span class=\"hljs-keyword\">default</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">push</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> T&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        m_queue.<span class=\"hljs-built_in\">push</span>(value);<br>        m_cv.<span class=\"hljs-built_in\">notify_one</span>();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">push</span><span class=\"hljs-params\">(T&amp;&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        m_queue.<span class=\"hljs-built_in\">push</span>(std::<span class=\"hljs-built_in\">move</span>(value));<br>        m_cv.<span class=\"hljs-built_in\">notify_one</span>();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">try_pop</span><span class=\"hljs-params\">(T&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        <span class=\"hljs-keyword\">if</span> (m_queue.<span class=\"hljs-built_in\">empty</span>()) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>        &#125;<br><br>        value = std::<span class=\"hljs-built_in\">move</span>(m_queue.<span class=\"hljs-built_in\">front</span>());<br>        m_queue.<span class=\"hljs-built_in\">pop</span>();<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">wait_and_pop</span><span class=\"hljs-params\">(T&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::unique_lock&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        m_cv.<span class=\"hljs-built_in\">wait</span>(lock, [<span class=\"hljs-keyword\">this</span>] &#123; <span class=\"hljs-keyword\">return</span> !m_queue.<span class=\"hljs-built_in\">empty</span>(); &#125;);<br><br>        value = std::<span class=\"hljs-built_in\">move</span>(m_queue.<span class=\"hljs-built_in\">front</span>());<br>        m_queue.<span class=\"hljs-built_in\">pop</span>();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">empty</span><span class=\"hljs-params\">()</span> <span class=\"hljs-type\">const</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        <span class=\"hljs-keyword\">return</span> m_queue.<span class=\"hljs-built_in\">empty</span>();<br>    &#125;<br><br><span class=\"hljs-keyword\">private</span>:<br>    std::queue&lt;T&gt; m_queue;<br>    <span class=\"hljs-keyword\">mutable</span> std::mutex m_mutex;<br>    std::condition_variable m_cv;<br>&#125;;<br><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"工作线程实现\"><a href=\"#工作线程实现\" class=\"headerlink\" title=\"工作线程实现\"></a>工作线程实现</h2><p>工作线程用于从不停任务队列中取任务并执行。这里定义了一个 WorkerThread 类，它的 operator() 函数不断地从任务队列中取出任务并执行，直到线程停止。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;thread&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;atomic&gt;</span></span><br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WorkerThread</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-built_in\">WorkerThread</span>(ThreadSafeQueue&lt;std::function&lt;<span class=\"hljs-built_in\">void</span>()&gt;&gt;&amp; taskQueue, std::atomic_bool&amp; running)<br>        : <span class=\"hljs-built_in\">m_taskQueue</span>(taskQueue), <span class=\"hljs-built_in\">m_running</span>(running) &#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">operator</span><span class=\"hljs-params\">()</span><span class=\"hljs-params\">()</span> </span>&#123;<br>        <span class=\"hljs-keyword\">while</span> (m_running) &#123;<br>            std::function&lt;<span class=\"hljs-type\">void</span>()&gt; task;<br>            <span class=\"hljs-keyword\">if</span> (m_taskQueue.<span class=\"hljs-built_in\">try_pop</span>(task)) &#123;<br>                <span class=\"hljs-built_in\">task</span>();<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span> &#123;<br>                std::this_thread::<span class=\"hljs-built_in\">yield</span>();<br>            &#125;<br>        &#125;<br>    &#125;<br><br><span class=\"hljs-keyword\">private</span>:<br>    ThreadSafeQueue&lt;std::function&lt;<span class=\"hljs-type\">void</span>()&gt;&gt;&amp; m_taskQueue;<br>    std::atomic_bool&amp; m_running;<br>&#125;;<br><br></code></pre></td></tr></table></figure>\n\n\n<h2 id=\"线程池实现\"><a href=\"#线程池实现\" class=\"headerlink\" title=\"线程池实现\"></a>线程池实现</h2><p>这里定义了一个线程池类，为用户管理了任务队列和工作线程，线程线程池。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;vector&gt;</span></span><br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ThreadPool</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-built_in\">ThreadPool</span>(<span class=\"hljs-type\">size_t</span> numThreads = std::thread::<span class=\"hljs-built_in\">hardware_concurrency</span>())<br>        : <span class=\"hljs-built_in\">m_running</span>(<span class=\"hljs-literal\">true</span>) &#123;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">size_t</span> i = <span class=\"hljs-number\">0</span>; i &lt; numThreads; ++i) &#123;<br>            m_threads.<span class=\"hljs-built_in\">emplace_back</span>(<span class=\"hljs-built_in\">WorkerThread</span>(m_taskQueue, m_running));<br>        &#125;<br>    &#125;<br><br>    ~<span class=\"hljs-built_in\">ThreadPool</span>() &#123;<br>        m_running = <span class=\"hljs-literal\">false</span>;<br><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">auto</span>&amp; thread : m_threads) &#123;<br>            thread.<span class=\"hljs-built_in\">join</span>();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">template</span>&lt;<span class=\"hljs-keyword\">typename</span> Func, <span class=\"hljs-keyword\">typename</span>... Args&gt;</span><br><span class=\"hljs-function\">    <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">submit</span><span class=\"hljs-params\">(Func&amp;&amp; func, Args&amp;&amp;... args)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">auto</span> task = std::<span class=\"hljs-built_in\">bind</span>(std::forward&lt;Func&gt;(func), std::forward&lt;Args&gt;(args)...);<br>        m_taskQueue.<span class=\"hljs-built_in\">push</span>(task);<br>    &#125;<br><br><span class=\"hljs-keyword\">private</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">threadWorker</span><span class=\"hljs-params\">()</span> </span>&#123;<br>        <span class=\"hljs-keyword\">while</span> (m_running) &#123;<br>            std::function&lt;<span class=\"hljs-type\">void</span>()&gt; task;<br>            <span class=\"hljs-keyword\">if</span> (m_taskQueue.<span class=\"hljs-built_in\">try_pop</span>(task)) &#123;<br>                <span class=\"hljs-built_in\">task</span>();<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                std::this_thread::<span class=\"hljs-built_in\">yield</span>();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    ThreadSafeQueue&lt;std::function&lt;<span class=\"hljs-type\">void</span>()&gt;&gt; m_taskQueue;<br>    std::vector&lt;std::thread&gt; m_threads;<br>    std::atomic&lt;<span class=\"hljs-type\">bool</span>&gt; m_running;<br>&#125;;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;chrono&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">task</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> num)</span> </span>&#123;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Task &quot;</span> &lt;&lt; num &lt;&lt; <span class=\"hljs-string\">&quot; started&quot;</span> &lt;&lt; std::endl;<br>    std::this_thread::<span class=\"hljs-built_in\">sleep_for</span>(std::chrono::<span class=\"hljs-built_in\">seconds</span>(<span class=\"hljs-number\">1</span>));<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Task &quot;</span> &lt;&lt; num &lt;&lt; <span class=\"hljs-string\">&quot; finished&quot;</span> &lt;&lt; std::endl;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-function\">ThreadPool <span class=\"hljs-title\">pool</span><span class=\"hljs-params\">(<span class=\"hljs-number\">4</span>)</span></span>;  <span class=\"hljs-comment\">// 创建一个包含 4 个工作线程的线程池</span><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">8</span>; ++i) &#123;<br>        pool.<span class=\"hljs-built_in\">submit</span>(task, i);  <span class=\"hljs-comment\">// 向线程池中添加 8 个任务</span><br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-线程池的实现\"><a href=\"#C-线程池的实现\" class=\"headerlink\" title=\"C++ 线程池的实现\"></a>C++ 线程池的实现</h1><ul>\n<li>在并发编程中，使用多线程可以提高程序的执行效率。然而，手动管理线程可能会导致代码复杂和出错的风险，因此可以使用线程池来简化线程管理；</li>\n<li>线程池通过预先创建一定数量的线程，将任务分配给这些线程执行，从而提高程序的并发性和响应速度；</li>\n<li>线程池包括一个任务队列和一组工作线程，任务队列用于存储待执行的任务，工作线程则从任务队列中取出任务并执行。</li>\n</ul>\n<h2 id=\"任务队列实现-🔎\"><a href=\"#任务队列实现-🔎\" class=\"headerlink\" title=\"任务队列实现 🔎\"></a>任务队列实现 🔎</h2><p> 任务队列要同时从多个用户中接收用于待执行的任务，因此要保证线程安全。这里可以使用STL中的队列或链表来实现，同时用一个互斥量来保证队列的线程安全，并使用条件变量来实现阻塞式的队列操作。任务队列的代码实现如下：</p>\n<p> 线程安全是通过 std::mutex 和 std::condition_variable 实现的。其中，push() 函数用于向队列中添加元素，try_pop() 函数用于尝试弹出队首元素，wait_and_pop() 函数用于等待队列非空并弹出队首元素。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;queue&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;mutex&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;condition_variable&gt;</span></span><br><br><span class=\"hljs-keyword\">template</span>&lt;<span class=\"hljs-keyword\">typename</span> T&gt;<br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ThreadSafeQueue</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-built_in\">ThreadSafeQueue</span>() = <span class=\"hljs-keyword\">default</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">push</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> T&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        m_queue.<span class=\"hljs-built_in\">push</span>(value);<br>        m_cv.<span class=\"hljs-built_in\">notify_one</span>();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">push</span><span class=\"hljs-params\">(T&amp;&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        m_queue.<span class=\"hljs-built_in\">push</span>(std::<span class=\"hljs-built_in\">move</span>(value));<br>        m_cv.<span class=\"hljs-built_in\">notify_one</span>();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">try_pop</span><span class=\"hljs-params\">(T&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        <span class=\"hljs-keyword\">if</span> (m_queue.<span class=\"hljs-built_in\">empty</span>()) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>        &#125;<br><br>        value = std::<span class=\"hljs-built_in\">move</span>(m_queue.<span class=\"hljs-built_in\">front</span>());<br>        m_queue.<span class=\"hljs-built_in\">pop</span>();<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">wait_and_pop</span><span class=\"hljs-params\">(T&amp; value)</span> </span>&#123;<br>        <span class=\"hljs-function\">std::unique_lock&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        m_cv.<span class=\"hljs-built_in\">wait</span>(lock, [<span class=\"hljs-keyword\">this</span>] &#123; <span class=\"hljs-keyword\">return</span> !m_queue.<span class=\"hljs-built_in\">empty</span>(); &#125;);<br><br>        value = std::<span class=\"hljs-built_in\">move</span>(m_queue.<span class=\"hljs-built_in\">front</span>());<br>        m_queue.<span class=\"hljs-built_in\">pop</span>();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">empty</span><span class=\"hljs-params\">()</span> <span class=\"hljs-type\">const</span> </span>&#123;<br>        <span class=\"hljs-function\">std::lock_guard&lt;std::mutex&gt; <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(m_mutex)</span></span>;<br>        <span class=\"hljs-keyword\">return</span> m_queue.<span class=\"hljs-built_in\">empty</span>();<br>    &#125;<br><br><span class=\"hljs-keyword\">private</span>:<br>    std::queue&lt;T&gt; m_queue;<br>    <span class=\"hljs-keyword\">mutable</span> std::mutex m_mutex;<br>    std::condition_variable m_cv;<br>&#125;;<br><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"工作线程实现\"><a href=\"#工作线程实现\" class=\"headerlink\" title=\"工作线程实现\"></a>工作线程实现</h2><p>工作线程用于从不停任务队列中取任务并执行。这里定义了一个 WorkerThread 类，它的 operator() 函数不断地从任务队列中取出任务并执行，直到线程停止。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;thread&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;atomic&gt;</span></span><br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WorkerThread</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-built_in\">WorkerThread</span>(ThreadSafeQueue&lt;std::function&lt;<span class=\"hljs-built_in\">void</span>()&gt;&gt;&amp; taskQueue, std::atomic_bool&amp; running)<br>        : <span class=\"hljs-built_in\">m_taskQueue</span>(taskQueue), <span class=\"hljs-built_in\">m_running</span>(running) &#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">operator</span><span class=\"hljs-params\">()</span><span class=\"hljs-params\">()</span> </span>&#123;<br>        <span class=\"hljs-keyword\">while</span> (m_running) &#123;<br>            std::function&lt;<span class=\"hljs-type\">void</span>()&gt; task;<br>            <span class=\"hljs-keyword\">if</span> (m_taskQueue.<span class=\"hljs-built_in\">try_pop</span>(task)) &#123;<br>                <span class=\"hljs-built_in\">task</span>();<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span> &#123;<br>                std::this_thread::<span class=\"hljs-built_in\">yield</span>();<br>            &#125;<br>        &#125;<br>    &#125;<br><br><span class=\"hljs-keyword\">private</span>:<br>    ThreadSafeQueue&lt;std::function&lt;<span class=\"hljs-type\">void</span>()&gt;&gt;&amp; m_taskQueue;<br>    std::atomic_bool&amp; m_running;<br>&#125;;<br><br></code></pre></td></tr></table></figure>\n\n\n<h2 id=\"线程池实现\"><a href=\"#线程池实现\" class=\"headerlink\" title=\"线程池实现\"></a>线程池实现</h2><p>这里定义了一个线程池类，为用户管理了任务队列和工作线程，线程线程池。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;vector&gt;</span></span><br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ThreadPool</span> &#123;<br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-built_in\">ThreadPool</span>(<span class=\"hljs-type\">size_t</span> numThreads = std::thread::<span class=\"hljs-built_in\">hardware_concurrency</span>())<br>        : <span class=\"hljs-built_in\">m_running</span>(<span class=\"hljs-literal\">true</span>) &#123;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">size_t</span> i = <span class=\"hljs-number\">0</span>; i &lt; numThreads; ++i) &#123;<br>            m_threads.<span class=\"hljs-built_in\">emplace_back</span>(<span class=\"hljs-built_in\">WorkerThread</span>(m_taskQueue, m_running));<br>        &#125;<br>    &#125;<br><br>    ~<span class=\"hljs-built_in\">ThreadPool</span>() &#123;<br>        m_running = <span class=\"hljs-literal\">false</span>;<br><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">auto</span>&amp; thread : m_threads) &#123;<br>            thread.<span class=\"hljs-built_in\">join</span>();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">template</span>&lt;<span class=\"hljs-keyword\">typename</span> Func, <span class=\"hljs-keyword\">typename</span>... Args&gt;</span><br><span class=\"hljs-function\">    <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">submit</span><span class=\"hljs-params\">(Func&amp;&amp; func, Args&amp;&amp;... args)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">auto</span> task = std::<span class=\"hljs-built_in\">bind</span>(std::forward&lt;Func&gt;(func), std::forward&lt;Args&gt;(args)...);<br>        m_taskQueue.<span class=\"hljs-built_in\">push</span>(task);<br>    &#125;<br><br><span class=\"hljs-keyword\">private</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">threadWorker</span><span class=\"hljs-params\">()</span> </span>&#123;<br>        <span class=\"hljs-keyword\">while</span> (m_running) &#123;<br>            std::function&lt;<span class=\"hljs-type\">void</span>()&gt; task;<br>            <span class=\"hljs-keyword\">if</span> (m_taskQueue.<span class=\"hljs-built_in\">try_pop</span>(task)) &#123;<br>                <span class=\"hljs-built_in\">task</span>();<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                std::this_thread::<span class=\"hljs-built_in\">yield</span>();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    ThreadSafeQueue&lt;std::function&lt;<span class=\"hljs-type\">void</span>()&gt;&gt; m_taskQueue;<br>    std::vector&lt;std::thread&gt; m_threads;<br>    std::atomic&lt;<span class=\"hljs-type\">bool</span>&gt; m_running;<br>&#125;;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;chrono&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">task</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> num)</span> </span>&#123;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Task &quot;</span> &lt;&lt; num &lt;&lt; <span class=\"hljs-string\">&quot; started&quot;</span> &lt;&lt; std::endl;<br>    std::this_thread::<span class=\"hljs-built_in\">sleep_for</span>(std::chrono::<span class=\"hljs-built_in\">seconds</span>(<span class=\"hljs-number\">1</span>));<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Task &quot;</span> &lt;&lt; num &lt;&lt; <span class=\"hljs-string\">&quot; finished&quot;</span> &lt;&lt; std::endl;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-function\">ThreadPool <span class=\"hljs-title\">pool</span><span class=\"hljs-params\">(<span class=\"hljs-number\">4</span>)</span></span>;  <span class=\"hljs-comment\">// 创建一个包含 4 个工作线程的线程池</span><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">8</span>; ++i) &#123;<br>        pool.<span class=\"hljs-built_in\">submit</span>(task, i);  <span class=\"hljs-comment\">// 向线程池中添加 8 个任务</span><br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n"},{"title":"Docker 命令一条龙","date":"2023-01-14T21:27:32.000Z","index_img":"/img/page/docker.png","_content":"\n# Docker 命令一条龙 \n\nDocker是一种容器化技术，可以将应用程序和所有相关的依赖项打包在一个容器中，使得应用程序可以在任何环境中轻松地运行。Docker可以提高应用程序的可移植性和可靠性，并简化应用程序的部署和维护。\n\n## 安装Docker\nDocker支持Windows、Linux和MacOS等操作系统，具体安装步骤可以参考Docker官方文档。\n\n## Docker命令\n在安装完成Docker之后，我们就可以开始使用Docker命令了。Docker命令可以在终端中执行，用于构建、运行和管理Docker容器。\n\n### 构建镜像\n构建镜像是Docker的核心功能之一，它允许我们将应用程序和所有相关的依赖项打包在一个容器中。下面是构建镜像的基本步骤：\n\n### 编写Dockerfile\n在开始构建镜像之前，我们需要编写一个Dockerfile，用于描述应用程序的构建和运行过程。\nDockerfile是一个文本文件，包含了一系列的指令，用于指导Docker如何构建镜像。下面是一个简单的Dockerfile示例：\n```shell\n# 指定基础镜像\nFROM ubuntu:latest\n\n# 设置工作目录\nWORKDIR /app\n\n# 拷贝应用程序到容器中\nCOPY ./app/hello.py /app\n\n# 安装依赖项\nRUN apt-get update && apt-get install -y python3\n\n# 设置容器默认命令\nCMD [\"python3\", \"hello.py\"]\n```\n在这个Dockerfile中，我们指定了基础镜像为最新版本的Ubuntu，设置了工作目录为/app，拷贝应用程序到容器中，安装了Python3，并设置了容器的默认命令为python3 hello.py。 其中hello.py 脚本如下：\n```python\nprint(\"Hello, World!\")\n```\n\n### 构建镜像\n在编写完Dockerfile之后，我们就可以使用docker build命令来构建镜像了。下面是一个简单的构建镜像的命令示例：\n```shell\ndocker build -t hello .\n```\n\n在这个命令中，我们使用了-t参数来指定镜像的名称为hello，使用了.来表示当前目录下的Dockerfile。构建镜像的过程可能需要一些时间，取决于你的应用程序和基础镜像的大小和复杂性。\n\n### 运行容器\n运行容器是Docker的另一个核心功能，它允许我们在Docker容器中运行应用程序。下面是运行容器的基本步骤：\n\n1. 拉取镜像\n在运行容器之前，我们需要拉取已经构建好的镜像。可以使用docker pull命令来拉取镜像，例如：\n```shell\ndocker pull hello:latest\n```\n2. 运行容器\n在拉取完镜像之后，我们就可以使用docker run命令来运行容器了。下面是一个简单的运行容器的命令示例：\n\n```shell\ndocker run -it --rm hello:latest\n```\n在这个命令中，我们使用了-it参数来指定容器的交互模式，--rm参数表示容器退出后会自动删除，hello:latest表示使用最新版本的hello镜像来运行容器。运行容器后，你将会进入一个类似于终端的界面，可以在其中运行命令。\n\n3. 停止容器\n在容器运行结束后，我们可以使用docker stop命令来停止容器，例如：\n```shell\ndocker stop <container_id>\n```\n其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。\n\n### 查看镜像和容器\n在使用Docker时，经常需要查看已经构建好的镜像和运行中的容器。可以使用docker images命令来查看已经构建好的镜像，例如：\n\n```shell\ndocker images\n```\n这个命令将会列出所有已经构建好的镜像，包括镜像的名称、标签、大小等信息。\n\n可以使用docker ps命令来查看运行中的容器，例如：\n\n```shell\ndocker ps\n```\n\n这个命令将会列出所有运行中的容器，包括容器的ID、名称、状态等信息。如果需要查看已经停止的容器，可以使用docker ps -a命令。\n\n### 删除镜像和容器\n在使用Docker时，经常需要删除已经构建好的镜像和已经停止的容器。可以使用docker rmi命令来删除镜像，例如：\\\n```shell\ndocker rmi <image_name>\n```\n其中，<image_name>是镜像的名称，可以使用docker images命令来查看镜像的名称。\n\n可以使用docker rm命令来删除容器，例如：\n```shell\ndocker rm <container_id>\n```\n其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。\n\n\n\n⚠ **Note**: 转载请注明出处","source":"_posts/'Docker 命令一条龙.md","raw":"---\ntitle: 'Docker 命令一条龙'\ndate: 2023-01-14 22:27:32\ntags: Docker\nindex_img: /img/page/docker.png\n---\n\n# Docker 命令一条龙 \n\nDocker是一种容器化技术，可以将应用程序和所有相关的依赖项打包在一个容器中，使得应用程序可以在任何环境中轻松地运行。Docker可以提高应用程序的可移植性和可靠性，并简化应用程序的部署和维护。\n\n## 安装Docker\nDocker支持Windows、Linux和MacOS等操作系统，具体安装步骤可以参考Docker官方文档。\n\n## Docker命令\n在安装完成Docker之后，我们就可以开始使用Docker命令了。Docker命令可以在终端中执行，用于构建、运行和管理Docker容器。\n\n### 构建镜像\n构建镜像是Docker的核心功能之一，它允许我们将应用程序和所有相关的依赖项打包在一个容器中。下面是构建镜像的基本步骤：\n\n### 编写Dockerfile\n在开始构建镜像之前，我们需要编写一个Dockerfile，用于描述应用程序的构建和运行过程。\nDockerfile是一个文本文件，包含了一系列的指令，用于指导Docker如何构建镜像。下面是一个简单的Dockerfile示例：\n```shell\n# 指定基础镜像\nFROM ubuntu:latest\n\n# 设置工作目录\nWORKDIR /app\n\n# 拷贝应用程序到容器中\nCOPY ./app/hello.py /app\n\n# 安装依赖项\nRUN apt-get update && apt-get install -y python3\n\n# 设置容器默认命令\nCMD [\"python3\", \"hello.py\"]\n```\n在这个Dockerfile中，我们指定了基础镜像为最新版本的Ubuntu，设置了工作目录为/app，拷贝应用程序到容器中，安装了Python3，并设置了容器的默认命令为python3 hello.py。 其中hello.py 脚本如下：\n```python\nprint(\"Hello, World!\")\n```\n\n### 构建镜像\n在编写完Dockerfile之后，我们就可以使用docker build命令来构建镜像了。下面是一个简单的构建镜像的命令示例：\n```shell\ndocker build -t hello .\n```\n\n在这个命令中，我们使用了-t参数来指定镜像的名称为hello，使用了.来表示当前目录下的Dockerfile。构建镜像的过程可能需要一些时间，取决于你的应用程序和基础镜像的大小和复杂性。\n\n### 运行容器\n运行容器是Docker的另一个核心功能，它允许我们在Docker容器中运行应用程序。下面是运行容器的基本步骤：\n\n1. 拉取镜像\n在运行容器之前，我们需要拉取已经构建好的镜像。可以使用docker pull命令来拉取镜像，例如：\n```shell\ndocker pull hello:latest\n```\n2. 运行容器\n在拉取完镜像之后，我们就可以使用docker run命令来运行容器了。下面是一个简单的运行容器的命令示例：\n\n```shell\ndocker run -it --rm hello:latest\n```\n在这个命令中，我们使用了-it参数来指定容器的交互模式，--rm参数表示容器退出后会自动删除，hello:latest表示使用最新版本的hello镜像来运行容器。运行容器后，你将会进入一个类似于终端的界面，可以在其中运行命令。\n\n3. 停止容器\n在容器运行结束后，我们可以使用docker stop命令来停止容器，例如：\n```shell\ndocker stop <container_id>\n```\n其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。\n\n### 查看镜像和容器\n在使用Docker时，经常需要查看已经构建好的镜像和运行中的容器。可以使用docker images命令来查看已经构建好的镜像，例如：\n\n```shell\ndocker images\n```\n这个命令将会列出所有已经构建好的镜像，包括镜像的名称、标签、大小等信息。\n\n可以使用docker ps命令来查看运行中的容器，例如：\n\n```shell\ndocker ps\n```\n\n这个命令将会列出所有运行中的容器，包括容器的ID、名称、状态等信息。如果需要查看已经停止的容器，可以使用docker ps -a命令。\n\n### 删除镜像和容器\n在使用Docker时，经常需要删除已经构建好的镜像和已经停止的容器。可以使用docker rmi命令来删除镜像，例如：\\\n```shell\ndocker rmi <image_name>\n```\n其中，<image_name>是镜像的名称，可以使用docker images命令来查看镜像的名称。\n\n可以使用docker rm命令来删除容器，例如：\n```shell\ndocker rm <container_id>\n```\n其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。\n\n\n\n⚠ **Note**: 转载请注明出处","slug":"'Docker 命令一条龙","published":1,"updated":"2023-03-11T22:17:45.303Z","_id":"clf4hmukb0000vjy2bv1zbkdm","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Docker-命令一条龙\"><a href=\"#Docker-命令一条龙\" class=\"headerlink\" title=\"Docker 命令一条龙\"></a>Docker 命令一条龙</h1><p>Docker是一种容器化技术，可以将应用程序和所有相关的依赖项打包在一个容器中，使得应用程序可以在任何环境中轻松地运行。Docker可以提高应用程序的可移植性和可靠性，并简化应用程序的部署和维护。</p>\n<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><p>Docker支持Windows、Linux和MacOS等操作系统，具体安装步骤可以参考Docker官方文档。</p>\n<h2 id=\"Docker命令\"><a href=\"#Docker命令\" class=\"headerlink\" title=\"Docker命令\"></a>Docker命令</h2><p>在安装完成Docker之后，我们就可以开始使用Docker命令了。Docker命令可以在终端中执行，用于构建、运行和管理Docker容器。</p>\n<h3 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h3><p>构建镜像是Docker的核心功能之一，它允许我们将应用程序和所有相关的依赖项打包在一个容器中。下面是构建镜像的基本步骤：</p>\n<h3 id=\"编写Dockerfile\"><a href=\"#编写Dockerfile\" class=\"headerlink\" title=\"编写Dockerfile\"></a>编写Dockerfile</h3><p>在开始构建镜像之前，我们需要编写一个Dockerfile，用于描述应用程序的构建和运行过程。<br>Dockerfile是一个文本文件，包含了一系列的指令，用于指导Docker如何构建镜像。下面是一个简单的Dockerfile示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指定基础镜像</span><br>FROM ubuntu:latest<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">设置工作目录</span><br>WORKDIR /app<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">拷贝应用程序到容器中</span><br>COPY ./app/hello.py /app<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">安装依赖项</span><br>RUN apt-get update &amp;&amp; apt-get install -y python3<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">设置容器默认命令</span><br>CMD [&quot;python3&quot;, &quot;hello.py&quot;]<br></code></pre></td></tr></table></figure>\n<p>在这个Dockerfile中，我们指定了基础镜像为最新版本的Ubuntu，设置了工作目录为&#x2F;app，拷贝应用程序到容器中，安装了Python3，并设置了容器的默认命令为python3 hello.py。 其中hello.py 脚本如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Hello, World!&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"构建镜像-1\"><a href=\"#构建镜像-1\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h3><p>在编写完Dockerfile之后，我们就可以使用docker build命令来构建镜像了。下面是一个简单的构建镜像的命令示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker build -t hello .<br></code></pre></td></tr></table></figure>\n\n<p>在这个命令中，我们使用了-t参数来指定镜像的名称为hello，使用了.来表示当前目录下的Dockerfile。构建镜像的过程可能需要一些时间，取决于你的应用程序和基础镜像的大小和复杂性。</p>\n<h3 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><p>运行容器是Docker的另一个核心功能，它允许我们在Docker容器中运行应用程序。下面是运行容器的基本步骤：</p>\n<ol>\n<li>拉取镜像<br>在运行容器之前，我们需要拉取已经构建好的镜像。可以使用docker pull命令来拉取镜像，例如：<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker pull hello:latest<br></code></pre></td></tr></table></figure></li>\n<li>运行容器<br>在拉取完镜像之后，我们就可以使用docker run命令来运行容器了。下面是一个简单的运行容器的命令示例：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -it --rm hello:latest<br></code></pre></td></tr></table></figure>\n<p>在这个命令中，我们使用了-it参数来指定容器的交互模式，–rm参数表示容器退出后会自动删除，hello:latest表示使用最新版本的hello镜像来运行容器。运行容器后，你将会进入一个类似于终端的界面，可以在其中运行命令。</p>\n<ol start=\"3\">\n<li>停止容器<br>在容器运行结束后，我们可以使用docker stop命令来停止容器，例如：<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker stop &lt;container_id&gt;<br></code></pre></td></tr></table></figure>\n其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。</li>\n</ol>\n<h3 id=\"查看镜像和容器\"><a href=\"#查看镜像和容器\" class=\"headerlink\" title=\"查看镜像和容器\"></a>查看镜像和容器</h3><p>在使用Docker时，经常需要查看已经构建好的镜像和运行中的容器。可以使用docker images命令来查看已经构建好的镜像，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker images<br></code></pre></td></tr></table></figure>\n<p>这个命令将会列出所有已经构建好的镜像，包括镜像的名称、标签、大小等信息。</p>\n<p>可以使用docker ps命令来查看运行中的容器，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker ps<br></code></pre></td></tr></table></figure>\n\n<p>这个命令将会列出所有运行中的容器，包括容器的ID、名称、状态等信息。如果需要查看已经停止的容器，可以使用docker ps -a命令。</p>\n<h3 id=\"删除镜像和容器\"><a href=\"#删除镜像和容器\" class=\"headerlink\" title=\"删除镜像和容器\"></a>删除镜像和容器</h3><p>在使用Docker时，经常需要删除已经构建好的镜像和已经停止的容器。可以使用docker rmi命令来删除镜像，例如：\\</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker rmi &lt;image_name&gt;<br></code></pre></td></tr></table></figure>\n<p>其中，<image_name>是镜像的名称，可以使用docker images命令来查看镜像的名称。</p>\n<p>可以使用docker rm命令来删除容器，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker rm &lt;container_id&gt;<br></code></pre></td></tr></table></figure>\n<p>其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。</p>\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Docker-命令一条龙\"><a href=\"#Docker-命令一条龙\" class=\"headerlink\" title=\"Docker 命令一条龙\"></a>Docker 命令一条龙</h1><p>Docker是一种容器化技术，可以将应用程序和所有相关的依赖项打包在一个容器中，使得应用程序可以在任何环境中轻松地运行。Docker可以提高应用程序的可移植性和可靠性，并简化应用程序的部署和维护。</p>\n<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><p>Docker支持Windows、Linux和MacOS等操作系统，具体安装步骤可以参考Docker官方文档。</p>\n<h2 id=\"Docker命令\"><a href=\"#Docker命令\" class=\"headerlink\" title=\"Docker命令\"></a>Docker命令</h2><p>在安装完成Docker之后，我们就可以开始使用Docker命令了。Docker命令可以在终端中执行，用于构建、运行和管理Docker容器。</p>\n<h3 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h3><p>构建镜像是Docker的核心功能之一，它允许我们将应用程序和所有相关的依赖项打包在一个容器中。下面是构建镜像的基本步骤：</p>\n<h3 id=\"编写Dockerfile\"><a href=\"#编写Dockerfile\" class=\"headerlink\" title=\"编写Dockerfile\"></a>编写Dockerfile</h3><p>在开始构建镜像之前，我们需要编写一个Dockerfile，用于描述应用程序的构建和运行过程。<br>Dockerfile是一个文本文件，包含了一系列的指令，用于指导Docker如何构建镜像。下面是一个简单的Dockerfile示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">指定基础镜像</span><br>FROM ubuntu:latest<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">设置工作目录</span><br>WORKDIR /app<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">拷贝应用程序到容器中</span><br>COPY ./app/hello.py /app<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">安装依赖项</span><br>RUN apt-get update &amp;&amp; apt-get install -y python3<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">设置容器默认命令</span><br>CMD [&quot;python3&quot;, &quot;hello.py&quot;]<br></code></pre></td></tr></table></figure>\n<p>在这个Dockerfile中，我们指定了基础镜像为最新版本的Ubuntu，设置了工作目录为&#x2F;app，拷贝应用程序到容器中，安装了Python3，并设置了容器的默认命令为python3 hello.py。 其中hello.py 脚本如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Hello, World!&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"构建镜像-1\"><a href=\"#构建镜像-1\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h3><p>在编写完Dockerfile之后，我们就可以使用docker build命令来构建镜像了。下面是一个简单的构建镜像的命令示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker build -t hello .<br></code></pre></td></tr></table></figure>\n\n<p>在这个命令中，我们使用了-t参数来指定镜像的名称为hello，使用了.来表示当前目录下的Dockerfile。构建镜像的过程可能需要一些时间，取决于你的应用程序和基础镜像的大小和复杂性。</p>\n<h3 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><p>运行容器是Docker的另一个核心功能，它允许我们在Docker容器中运行应用程序。下面是运行容器的基本步骤：</p>\n<ol>\n<li>拉取镜像<br>在运行容器之前，我们需要拉取已经构建好的镜像。可以使用docker pull命令来拉取镜像，例如：<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker pull hello:latest<br></code></pre></td></tr></table></figure></li>\n<li>运行容器<br>在拉取完镜像之后，我们就可以使用docker run命令来运行容器了。下面是一个简单的运行容器的命令示例：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -it --rm hello:latest<br></code></pre></td></tr></table></figure>\n<p>在这个命令中，我们使用了-it参数来指定容器的交互模式，–rm参数表示容器退出后会自动删除，hello:latest表示使用最新版本的hello镜像来运行容器。运行容器后，你将会进入一个类似于终端的界面，可以在其中运行命令。</p>\n<ol start=\"3\">\n<li>停止容器<br>在容器运行结束后，我们可以使用docker stop命令来停止容器，例如：<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker stop &lt;container_id&gt;<br></code></pre></td></tr></table></figure>\n其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。</li>\n</ol>\n<h3 id=\"查看镜像和容器\"><a href=\"#查看镜像和容器\" class=\"headerlink\" title=\"查看镜像和容器\"></a>查看镜像和容器</h3><p>在使用Docker时，经常需要查看已经构建好的镜像和运行中的容器。可以使用docker images命令来查看已经构建好的镜像，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker images<br></code></pre></td></tr></table></figure>\n<p>这个命令将会列出所有已经构建好的镜像，包括镜像的名称、标签、大小等信息。</p>\n<p>可以使用docker ps命令来查看运行中的容器，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker ps<br></code></pre></td></tr></table></figure>\n\n<p>这个命令将会列出所有运行中的容器，包括容器的ID、名称、状态等信息。如果需要查看已经停止的容器，可以使用docker ps -a命令。</p>\n<h3 id=\"删除镜像和容器\"><a href=\"#删除镜像和容器\" class=\"headerlink\" title=\"删除镜像和容器\"></a>删除镜像和容器</h3><p>在使用Docker时，经常需要删除已经构建好的镜像和已经停止的容器。可以使用docker rmi命令来删除镜像，例如：\\</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker rmi &lt;image_name&gt;<br></code></pre></td></tr></table></figure>\n<p>其中，<image_name>是镜像的名称，可以使用docker images命令来查看镜像的名称。</p>\n<p>可以使用docker rm命令来删除容器，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker rm &lt;container_id&gt;<br></code></pre></td></tr></table></figure>\n<p>其中，<container_id>是容器的ID，可以使用docker ps命令来查看容器的ID。</p>\n<p>⚠ <strong>Note</strong>: 转载请注明出处</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cleu1wyur0006s2y29qas34fs","tag_id":"cleu1wyus000cs2y290fc84ov","_id":"cleu1wyut000fs2y202i4dl7l"},{"post_id":"cleu1wyuw000is2y26hwza8k8","tag_id":"cleu1wyuw000ls2y2ei3j79tb","_id":"cleu1wyuy000ss2y2d2ukc2k3"},{"post_id":"cleu1wyuw000ks2y24ld51se6","tag_id":"cleu1wyuw000ls2y2ei3j79tb","_id":"cleu1wyuy000ts2y24c9oh8xs"},{"post_id":"cleu2frqo000009y2d2x8aw2z","tag_id":"cleu1wyup0004s2y21u038lwx","_id":"cleu2frqq000209y221ahdd1p"},{"post_id":"cleu2frqp000109y27b3075l2","tag_id":"cleu2pmjp00003qy2gk207lik","_id":"cleu2pmjr00023qy2ckkubke3"},{"post_id":"cleu2frqs000509y2br1pcrj4","tag_id":"cleu2pmjr00013qy2hl8l26ap","_id":"cleu2pmjs00043qy2gt2j9o2w"},{"post_id":"cleu2frqt000609y2epq85r7r","tag_id":"cleu2pmjs00053qy2cicc7v02","_id":"cleu2pmjs00073qy24a56ev4q"},{"post_id":"cleu2frqq000309y2d72k0ugo","tag_id":"cleu1wyuw000ls2y2ei3j79tb","_id":"cleu3usx30000cmy2frru15rg"},{"post_id":"clev9mev0000073y25go6fbi1","tag_id":"cleu1wyus000cs2y290fc84ov","_id":"clev9mev1000173y2a20aa2al"},{"post_id":"clev9yo5m0000a8y2hoxegxk3","tag_id":"cleu1wyus000cs2y290fc84ov","_id":"clev9yo5o0001a8y2dl2udt04"},{"post_id":"clf4hmukb0000vjy2bv1zbkdm","tag_id":"clf4hi9dz0001rqy251kbgqpq","_id":"clf4hmukf0001vjy2bya61fln"}],"Tag":[{"name":"Git","_id":"cleu1wyup0004s2y21u038lwx"},{"name":"K8S","_id":"cleu1wyur0008s2y26slp5iuv"},{"name":"system design","_id":"cleu1wyus000as2y2f10t8qfx"},{"name":"C++","_id":"cleu1wyus000cs2y290fc84ov"},{"name":"Linux","_id":"cleu1wyuw000ls2y2ei3j79tb"},{"name":"cmake","_id":"cleu2frqr000409y27cuu1k9d"},{"name":"markdown","_id":"cleu2frqt000709y2gfwa77wd"},{"name":"Cmake","_id":"cleu2pmjp00003qy2gk207lik"},{"name":"Markdown","_id":"cleu2pmjr00013qy2hl8l26ap"},{"name":"Linux Shell","_id":"cleu2pmjr00033qy2gbszg8bq"},{"name":"SQL","_id":"cleu2pmjs00053qy2cicc7v02"},{"name":"Linux#Shell","_id":"cleu3h8he00006yy22dkv353k"},{"name":"Docker","_id":"clf4hi9dz0001rqy251kbgqpq"}]}}